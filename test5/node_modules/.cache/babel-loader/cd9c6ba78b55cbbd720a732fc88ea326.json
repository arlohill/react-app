{"ast":null,"code":"import _toConsumableArray from\"/Users/arlosb/Documents/GitHub/new react app/test5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/arlosb/Documents/GitHub/new react app/test5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/arlosb/Documents/GitHub/new react app/test5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from'react';import CallObjectContext from'../../../CallObjectContext';import MyContext from'../../../MyContext';import SessionStateContext from'../../../SessionStateContext';import'./Chat.css';export default function Chat(props){var callObject=useContext(CallObjectContext);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputValue=_useState2[0],setInputValue=_useState2[1];var _useContext=useContext(SessionStateContext),session=_useContext.session;var _session=_slicedToArray(session,2),sessionState=_session[0],setSessionState=_session[1];var _useContext2=useContext(MyContext),myStateArray=_useContext2.myStateArray;var _myStateArray=_slicedToArray(myStateArray,1),myState=_myStateArray[0];var chatHistory=sessionState.chatHistory;var setChatHistory=function setChatHistory(newHistoryObject){setSessionState(function(prev){return _objectSpread(_objectSpread({},prev),{},{chatHistory:[].concat(_toConsumableArray(prev.chatHistory),[newHistoryObject])});});};var lastMessage=React.createRef();var handleChange=function handleChange(event){setInputValue(event.target.value);};function handleSubmit(event){event.preventDefault();if(!inputValue){return;}callObject.sendAppMessage({type:'chat',message:inputValue},'*');var name=callObject.participants().local.user_name.includes('_Admin')?callObject.participants().local.user_name.split('_Admin').join(''):callObject.participants().local.user_name;setChatHistory({sender:name,message:inputValue});setInputValue('');}/**\n   * Update chat state based on a message received to all participants.\n   *\n   */useEffect(function(){if(!callObject){return;}function handleAppMessage(event){var participants=callObject.participants();var name=participants[event.fromId].user_name.includes('_Admin')?participants[event.fromId].user_name.split('_Admin').join(''):participants[event.fromId].user_name;event.data.type=='chat'&&setChatHistory({sender:name,message:event.data.message});// Make other icons light up\nevent.data.type=='chat'&&props.notification();}callObject.on('app-message',handleAppMessage);return function cleanup(){callObject.off('app-message',handleAppMessage);};},[callObject,chatHistory]);useEffect(function(){},[chatHistory]);function scrollToBottom(){lastMessage.current&&lastMessage.current.scrollIntoView({behavior:\"smooth\"});}useEffect(function(){scrollToBottom();},[chatHistory]);return props.onClickDisplay?/*#__PURE__*/React.createElement(\"div\",{className:\"chat\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"chat-history\"},chatHistory.map(function(entry,index,array){return entry.sender==myState.Name||entry.sender==myState.name.split('_Admin').join('')?/*#__PURE__*/React.createElement(\"div\",{key:\"entry-\".concat(index),className:\"my message\"},entry.message):array[index-1]&&entry.sender==array[index-1].sender?/*#__PURE__*/React.createElement(\"div\",{key:\"entry-\".concat(index),className:\"additional message\"},entry.message):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{key:\"name-label-\".concat(index),className:\"name-label\"},/*#__PURE__*/React.createElement(\"b\",null,entry.sender),\":\"),/*#__PURE__*/React.createElement(\"div\",{key:\"entry-\".concat(index),className:\"received message\"},entry.message));}),/*#__PURE__*/React.createElement(\"div\",{style:{float:\"left\",clear:\"both\"},ref:lastMessage}))),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"chatInput\"}),/*#__PURE__*/React.createElement(\"input\",{id:\"chatInput\",className:\"chat-input\",type:\"text\",autoComplete:\"off\",placeholder:\"Type your message here..\",value:inputValue,onChange:handleChange}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"send-chat-button\"},\"Send\"))):null;}","map":null,"metadata":{},"sourceType":"module"}