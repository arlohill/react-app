{"ast":null,"code":"/*!\n * Mux Errors\n * Copyright(c) 2018 Mux Inc.\n */\nconst Base = require('../../base');\n/**\n * @private Base errors path for the Mux API\n * */\n\n\nconst PATH = '/data/v1/errors';\n/**\n * Errors Class - Provides access to the Mux Data Errors API\n * @extends Base\n * @example\n * const { Data } = new Mux(accessToken, secret);\n *\n * // Returns a list of playback errors filtered by the windows operating system\n * Data.Errors.list({ filters: ['operating_system:windows'] });\n */\n\nclass Errors extends Base {\n  /**\n   * Returns a list of playback errors\n   *\n   * @param {Object} [params] - example { timeframe: ['7:days'], filters: ['operating_system:windows'] }\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const { Data } = new Mux(accessToken, secret);\n   *\n   * // Returns a list of playback errors filtered by the windows operating system\n   * Data.Errors.list({ filters: ['operating_system:windows'] });\n   *\n   * @see https://docs.mux.com/api-reference/data#operation/list-errors\n   */\n  list(params) {\n    return this.http.get(PATH, {\n      params\n    });\n  }\n\n}\n\nmodule.exports = Errors;","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test5/node_modules/@mux/mux-node/src/data/resources/errors.js"],"names":["Base","require","PATH","Errors","list","params","http","get","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAApB;AAEA;AACA;AACA;;;AACA,MAAMC,IAAI,GAAG,iBAAb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,MAAN,SAAqBH,IAArB,CAA0B;AACxB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEI,EAAAA,IAAI,CAACC,MAAD,EAAS;AACX,WAAO,KAAKC,IAAL,CAAUC,GAAV,CAAcL,IAAd,EAAoB;AAAEG,MAAAA;AAAF,KAApB,CAAP;AACD;;AAjBuB;;AAoB1BG,MAAM,CAACC,OAAP,GAAiBN,MAAjB","sourcesContent":["/*!\n * Mux Errors\n * Copyright(c) 2018 Mux Inc.\n */\nconst Base = require('../../base');\n\n/**\n * @private Base errors path for the Mux API\n * */\nconst PATH = '/data/v1/errors';\n\n/**\n * Errors Class - Provides access to the Mux Data Errors API\n * @extends Base\n * @example\n * const { Data } = new Mux(accessToken, secret);\n *\n * // Returns a list of playback errors filtered by the windows operating system\n * Data.Errors.list({ filters: ['operating_system:windows'] });\n */\nclass Errors extends Base {\n  /**\n   * Returns a list of playback errors\n   *\n   * @param {Object} [params] - example { timeframe: ['7:days'], filters: ['operating_system:windows'] }\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const { Data } = new Mux(accessToken, secret);\n   *\n   * // Returns a list of playback errors filtered by the windows operating system\n   * Data.Errors.list({ filters: ['operating_system:windows'] });\n   *\n   * @see https://docs.mux.com/api-reference/data#operation/list-errors\n   */\n  list(params) {\n    return this.http.get(PATH, { params });\n  }\n}\n\nmodule.exports = Errors;\n"]},"metadata":{},"sourceType":"script"}