{"ast":null,"code":"import { useEffect, useContext, useReducer } from \"react\";\nimport SessionStateContext from '../SessionStateContext';\nimport MyContext from '../MyContext';\nimport CallObjectContext from '../CallObjectContext'; // import {\n//     initialCallState,\n//     callReducer,\n//   } from '../components/Livestorm/Call/callState.js';\n\nfunction useSetSubscriptions() {\n  const callObject = useContext(CallObjectContext);\n  const {\n    session\n  } = useContext(SessionStateContext);\n  const [sessionState, setSessionState] = session;\n  const {\n    myStateArray\n  } = useContext(MyContext);\n  const [myState, setMyState] = myStateArray; // const [callState] = useReducer(callReducer, initialCallState);\n\n  useEffect(() => {\n    const myRole = myState.role;\n    let currentSubs = [];\n    let viewMode = myState.viewMode;\n\n    if (!sessionState) {\n      return;\n    } ///disable 'viewMode' unless session is active and I'm a viewer\n\n\n    if (!sessionState.isActive || myRole.includes('Seller') || myRole.includes('Buyer') || myRole.includes('Shadow')) {\n      viewMode = null;\n    }\n\n    console.log('Setting subscriptions...'); // console.log('****My role is: ' + myRole);\n    // console.log('viewMode is: ' + viewMode);\n\n    let subscribedTo = 0; //if session is active and I have a role, set currentSubs according to my role\n\n    if (!viewMode && sessionState.isActive) {\n      switch (myRole) {\n        case 'Buyer1':\n          currentSubs = [];\n          sessionState.roleOf.Shadow1 && currentSubs.push(sessionState.roleOf.Shadow1); // see shadow1 if there is a shadow1\n\n          !sessionState.roleOf.Shadow1 && sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller); //otherwise, see the original seller\n\n          sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n          sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n          sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n          break;\n\n        case 'Buyer2':\n          currentSubs = [];\n          sessionState.roleOf.Shadow1 && currentSubs.push(sessionState.roleOf.Shadow1); // see shadow1 if there is a shadow1\n\n          !sessionState.roleOf.Shadow1 && sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller); //otherwise, see the original seller\n\n          sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n          sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n          sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n          break;\n\n        case 'Buyer3':\n          currentSubs = [];\n          sessionState.roleOf.Shadow1 && currentSubs.push(sessionState.roleOf.Shadow1); // see shadow1 if there is a shadow1\n\n          !sessionState.roleOf.Shadow1 && sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller); //otherwise, see the original seller\n\n          sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n          sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n          sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n          break;\n\n        case 'Buyer4':\n          currentSubs = [];\n          sessionState.roleOf.Shadow1 && currentSubs.push(sessionState.roleOf.Shadow1); // see shadow1 if there is a shadow1\n\n          !sessionState.roleOf.Shadow1 && sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller); //otherwise, see the original seller\n\n          sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n          sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n          sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n          break;\n\n        case 'Seller':\n          currentSubs = [];\n          sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n          sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n          sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n          sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n          break;\n\n        case 'Shadow1':\n        case 'Shadow2':\n        case 'Shadow3':\n        case 'Shadow4':\n          currentSubs = [];\n          sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n          sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n          sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n          sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n          sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller + '_AUDIO');\n          break;\n\n        case 'Attendee':\n          currentSubs = [];\n          break;\n\n        default:\n          currentSubs = [];\n          break;\n      } //Add Admin to currentSubs if applicable\n\n\n      if (sessionState.AdminVisible) {\n        currentSubs.push(\"Admin\");\n      }\n\n      currentSubs.filter(function (str) {\n        return str.indexOf(myState.name) === -1;\n      }); //don't include self\n    } ///subscriptions for viewers\n\n\n    if (viewMode) {\n      switch (viewMode) {\n        case 'Seller':\n          currentSubs = [];\n          sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller);\n          sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n          sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n          sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n          sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n          break;\n\n        case 'Shadow1':\n          currentSubs = [];\n          sessionState.roleOf.Shadow1 && currentSubs.push(sessionState.roleOf.Shadow1);\n          sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n          sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n          sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n          sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n          break;\n\n        case 'Shadow2':\n          currentSubs = [];\n          sessionState.roleOf.Shadow2 && currentSubs.push(sessionState.roleOf.Shadow2);\n          sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n          sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n          sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n          break;\n\n        case 'Shadow3':\n          sessionState.roleOf.Shadow3 && currentSubs.push(sessionState.roleOf.Shadow3);\n          sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n          sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n          sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n          sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n          break;\n\n        case 'Shadow4':\n          currentSubs = [];\n          sessionState.roleOf.Shadow4 && currentSubs.push(sessionState.roleOf.Shadow4);\n          sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n          sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n          sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n          sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n          break;\n\n        case 'All':\n          currentSubs = [];\n          sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller);\n          sessionState.roleOf.Shadow1 && currentSubs.push(sessionState.roleOf.Shadow1);\n          sessionState.roleOf.Shadow2 && currentSubs.push(sessionState.roleOf.Shadow2);\n          sessionState.roleOf.Shadow3 && currentSubs.push(sessionState.roleOf.Shadow3);\n          sessionState.roleOf.Shadow4 && currentSubs.push(sessionState.roleOf.Shadow4);\n          sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n          sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n          sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n          sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n          break;\n\n        default:\n          currentSubs = [];\n          break;\n      }\n\n      currentSubs.filter(function (str) {\n        return str.indexOf(myState.name) === -1;\n      }); //don't include self\n    }\n\n    function setTracks() {\n      return new Promise(resolve => {\n        //cycle through each participant in meeting\n        let ps = callObject.participants(); // console.log('The second participant is named: ' + Object.values(ps)[1].user_name);\n\n        Object.keys(ps).forEach(p => {\n          let participant = ps[p];\n          let thisUserName = participant.user_name;\n\n          if (p === 'local' || thisUserName == myState.name) {\n            return;\n          } //if SESSION STATE NOT KNOWN, don't subscribe to anyone yet\n\n\n          if (!sessionState.isKnown) {\n            callObject.updateParticipant(participant.session_id, {\n              setSubscribedTracks: false\n            });\n            return;\n          } // console.log(\"This username is: \" +thisUserName);\n          //If NOT ACTIVE, subscribe to everyone in the meeting\n\n\n          if (!sessionState.isActive) {\n            if (thisUserName == 'InvisibleScreenShareWidget') {\n              console.log('Not subscribing to: ' + thisUserName);\n              callObject.updateParticipant(participant.session_id, {\n                setSubscribedTracks: {\n                  audio: false,\n                  video: false,\n                  screenVideo: true,\n                  screenAudio: true\n                }\n              });\n            } else {\n              console.log('Subscribing to: ' + thisUserName);\n              currentSubs.push(thisUserName); // if (!callObject.participants()[participant.session_id].tracks.video.subscribed){ \n              //     callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});  \n              // }\n\n              callObject.updateParticipant(participant.session_id, {\n                setSubscribedTracks: true\n              });\n              subscribedTo++;\n            } // }\n\n          } //IF ACTIVE (or selecting viewmode), just subscribe to those listed in currentSubs;\n          else if (sessionState.isActive || viewMode) {\n              if (currentSubs.includes(thisUserName + '_AUDIO')) {\n                console.log('Subscribing to audio only for: ' + thisUserName);\n                callObject.updateParticipant(participant.session_id, {\n                  setSubscribedTracks: {\n                    audio: true,\n                    video: false,\n                    screenVideo: true\n                  }\n                });\n              } else if (currentSubs.includes(thisUserName)) {\n                console.log('Subscribing to: ' + thisUserName);\n                callObject.updateParticipant(participant.session_id, {\n                  setSubscribedTracks: true\n                });\n                subscribedTo++;\n              } else if (!currentSubs.includes(thisUserName) && participant.tracks.screenVideo.state !== 'off') {\n                console.log('************SUBSCRIBING TO SCREENVIDEO');\n                callObject.updateParticipant(participant.session_id, {\n                  setSubscribedTracks: {\n                    audio: false,\n                    video: false,\n                    screenVideo: true\n                  }\n                });\n              } else if (!currentSubs.includes(thisUserName)) {\n                console.log('The screenVideo.state is: ' + participant.tracks.screenVideo.state);\n                console.log('NOT subscribing to: ' + thisUserName + ', sessionID: ' + participant.session_id);\n                callObject.updateParticipant(participant.session_id, {\n                  setSubscribedTracks: {\n                    audio: false,\n                    video: false,\n                    screenVideo: true\n                  }\n                });\n              }\n            }\n        });\n        resolve();\n      });\n    }\n\n    setTracks().then(() => {\n      //remove screenshare widget from currentSubs array to not count it\n      const index = currentSubs.indexOf('InvisibleScreenShareWidget');\n\n      if (index > -1) {\n        currentSubs.splice(index, 1);\n      } //print subscriptions\n\n\n      currentSubs.filter(function (str) {\n        return str.indexOf(window.myName) === -1;\n      }); //don't include self\n\n      var iterator = currentSubs.values();\n      console.log(\"Currently subscribed to:\");\n\n      for (let elements of iterator) {\n        console.log(elements);\n      }\n\n      if (currentSubs.length < 1) {\n        console.log(\"No one.\");\n      } ///*** for debugging purposes\n\n\n      window.viewMode = viewMode;\n      window.currentSubs = currentSubs;\n      window.numberOfSubs = window.currentSubs && window.currentSubs.filter(function (str) {\n        return str.indexOf('_AUDIO') === -1;\n      }).filter(function (str) {\n        return str.indexOf('_AUDIO') === -1;\n      }).filter(function (str) {\n        return str.indexOf(window.myName) === -1;\n      }).length;\n    });\n  }, [sessionState.isActive, sessionState.roleOf, sessionState.isKnown, sessionState.AdminVisible, myState.role, myState.viewMode, myState.name, myState.userList]); ///todo: make sure this doesn't mess anthing up; formerly, the dependencies were just myState and sessionState. userList is not referecenced in this useEffect\n}\n\n;\nexport default useSetSubscriptions;","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test5/src/hooks/setSubscriptions.js"],"names":["useEffect","useContext","useReducer","SessionStateContext","MyContext","CallObjectContext","useSetSubscriptions","callObject","session","sessionState","setSessionState","myStateArray","myState","setMyState","myRole","role","currentSubs","viewMode","isActive","includes","console","log","subscribedTo","roleOf","Shadow1","push","Seller","Buyer2","Buyer3","Buyer4","Buyer1","AdminVisible","filter","str","indexOf","name","Shadow2","Shadow3","Shadow4","setTracks","Promise","resolve","ps","participants","Object","keys","forEach","p","participant","thisUserName","user_name","isKnown","updateParticipant","session_id","setSubscribedTracks","audio","video","screenVideo","screenAudio","tracks","state","then","index","splice","window","myName","iterator","values","elements","length","numberOfSubs","userList"],"mappings":"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","sourcesContent":["import { useEffect, useContext, useReducer } from \"react\";\nimport SessionStateContext from '../SessionStateContext';\nimport MyContext from '../MyContext';\nimport CallObjectContext from '../CallObjectContext'\n// import {\n//     initialCallState,\n//     callReducer,\n//   } from '../components/Livestorm/Call/callState.js';\n\n\nfunction useSetSubscriptions() {\n\n    const callObject = useContext(CallObjectContext);\n    const { session } = useContext(SessionStateContext);\n    const [ sessionState,setSessionState] = session;    \n    const { myStateArray,  \n      } = useContext(MyContext);\n    const [ myState,setMyState ] = myStateArray;\n    // const [callState] = useReducer(callReducer, initialCallState);\n\n\n\n    useEffect(()=> {\n\n        const myRole = myState.role;\n        let currentSubs = [];\n        let viewMode = myState.viewMode;\n    \n        if (!sessionState) {return;}\n    \n        ///disable 'viewMode' unless session is active and I'm a viewer\n        if(!sessionState.isActive || myRole.includes('Seller') || myRole.includes('Buyer') || myRole.includes('Shadow')) {\n            viewMode = null;\n        }\n    \n    \n        console.log('Setting subscriptions...');\n        // console.log('****My role is: ' + myRole);\n        // console.log('viewMode is: ' + viewMode);\n        let subscribedTo=0;\n    \n        \n        //if session is active and I have a role, set currentSubs according to my role\n            if (!viewMode && sessionState.isActive) {\n                switch (myRole) {\n                    case 'Buyer1':\n                        currentSubs=[];\n                        sessionState.roleOf.Shadow1 && currentSubs.push(sessionState.roleOf.Shadow1); // see shadow1 if there is a shadow1\n                        !sessionState.roleOf.Shadow1 && sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller); //otherwise, see the original seller\n                        sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n                        sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n                        sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n\n                        break;\n                    case 'Buyer2':\n                        currentSubs=[];\n                        sessionState.roleOf.Shadow1 && currentSubs.push(sessionState.roleOf.Shadow1); // see shadow1 if there is a shadow1\n                        !sessionState.roleOf.Shadow1 && sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller); //otherwise, see the original seller\n                        sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n                        sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n                        sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n\n                        break;\n                    case 'Buyer3':\n                        currentSubs=[];\n                        sessionState.roleOf.Shadow1 && currentSubs.push(sessionState.roleOf.Shadow1); // see shadow1 if there is a shadow1\n                        !sessionState.roleOf.Shadow1 && sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller); //otherwise, see the original seller\n                        sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n                        sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n                        sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n\n                        break;\n                    case 'Buyer4':\n                        currentSubs=[];\n                        sessionState.roleOf.Shadow1 && currentSubs.push(sessionState.roleOf.Shadow1); // see shadow1 if there is a shadow1\n                        !sessionState.roleOf.Shadow1 && sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller); //otherwise, see the original seller\n                        sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n                        sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n                        sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n                        break;\n                    case 'Seller':\n                        currentSubs=[];\n                        sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n                        sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n                        sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n                        sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n\n                        break;\n                    case 'Shadow1':\n                    case 'Shadow2':\n                    case 'Shadow3':\n                    case 'Shadow4':\n                        currentSubs=[];\n                        sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n                        sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n                        sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n                        sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n                        sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller+'_AUDIO');\n                        break;\n                    case 'Attendee':\n                        currentSubs=[];\n                        break;\n                    default:\n                        currentSubs=[];\n                        break;\n                }\n                //Add Admin to currentSubs if applicable\n                if (sessionState.AdminVisible) {\n                currentSubs.push (\"Admin\");\n            }\n    \n            currentSubs.filter(function (str) {return str.indexOf(myState.name) === -1}) //don't include self\n    \n        }\n    \n        ///subscriptions for viewers\n        if(viewMode) {\n    \n            switch (viewMode) {\n                case 'Seller':\n                    currentSubs=[];\n                    sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller);\n                    sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n                    sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n                    sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n                    sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n\n                    break;\n                case 'Shadow1':\n                    currentSubs=[];\n                    sessionState.roleOf.Shadow1 && currentSubs.push(sessionState.roleOf.Shadow1);\n                    sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n                    sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n                    sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n                    sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n\n                    break;\n                case 'Shadow2':\n                    currentSubs=[];\n                    sessionState.roleOf.Shadow2 && currentSubs.push(sessionState.roleOf.Shadow2);\n                    sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n                    sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n                    sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n                    break;\n                case 'Shadow3':\n                    sessionState.roleOf.Shadow3 && currentSubs.push(sessionState.roleOf.Shadow3);\n                    sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n                    sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n                    sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n                    sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n\n                    break;\n                case 'Shadow4':\n                    currentSubs=[];\n                    sessionState.roleOf.Shadow4 && currentSubs.push(sessionState.roleOf.Shadow4);\n                    sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n                    sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n                    sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n                    sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n\n                    break;\n                case 'All':\n                    currentSubs=[];\n                    sessionState.roleOf.Seller && currentSubs.push(sessionState.roleOf.Seller);\n                    sessionState.roleOf.Shadow1 && currentSubs.push(sessionState.roleOf.Shadow1);\n                    sessionState.roleOf.Shadow2 && currentSubs.push(sessionState.roleOf.Shadow2);\n                    sessionState.roleOf.Shadow3 && currentSubs.push(sessionState.roleOf.Shadow3);\n                    sessionState.roleOf.Shadow4 && currentSubs.push(sessionState.roleOf.Shadow4);\n                    sessionState.roleOf.Buyer1 && currentSubs.push(sessionState.roleOf.Buyer1);\n                    sessionState.roleOf.Buyer2 && currentSubs.push(sessionState.roleOf.Buyer2);\n                    sessionState.roleOf.Buyer3 && currentSubs.push(sessionState.roleOf.Buyer3);\n                    sessionState.roleOf.Buyer4 && currentSubs.push(sessionState.roleOf.Buyer4);\n\n                    break;\n                default:\n                    currentSubs=[];\n                    break;\n            }\n    \n            currentSubs.filter(function (str) {return str.indexOf(myState.name) === -1}) //don't include self\n        }\n    \n        \n        function setTracks() {\n    \n            return new Promise( (resolve) => {\n    \n                //cycle through each participant in meeting\n                let ps = callObject.participants();\n                // console.log('The second participant is named: ' + Object.values(ps)[1].user_name);\n                Object.keys(ps).forEach((p) => {\n                    let participant = ps[p];\n                    let thisUserName = participant.user_name;\n    \n                    if (p === 'local' || thisUserName==myState.name) {\n                        return;\n                    } \n        \n    \n                    //if SESSION STATE NOT KNOWN, don't subscribe to anyone yet\n                    if (!sessionState.isKnown) {\n                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                        return;\n                    }\n    \n    \n    \n                    // console.log(\"This username is: \" +thisUserName);\n    \n                    //If NOT ACTIVE, subscribe to everyone in the meeting\n                    if (!sessionState.isActive) {\n    \n                            if (thisUserName=='InvisibleScreenShareWidget') {\n                                console.log('Not subscribing to: ' + thisUserName);\n                                callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: false, video: false, screenVideo: true, screenAudio: true}});\n    \n                            \n                            } else {\n                                console.log('Subscribing to: ' + thisUserName);\n                                currentSubs.push(thisUserName);\n                                // if (!callObject.participants()[participant.session_id].tracks.video.subscribed){ \n                                //     callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});  \n                                // }\n                                callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                                subscribedTo++;\n                                }    \n    \n                        // }\n    \n    \n    \n                    } \n    \n                    //IF ACTIVE (or selecting viewmode), just subscribe to those listed in currentSubs;\n                    else if (sessionState.isActive || viewMode) {\n                        if(currentSubs.includes(thisUserName+'_AUDIO')) {\n                            console.log('Subscribing to audio only for: ' + thisUserName);\n                            callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: true, video: false, screenVideo: true}});\n                        }\n                        else if(currentSubs.includes(thisUserName)) {\n                            console.log('Subscribing to: ' + thisUserName);\n                            callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                            subscribedTo++;\n                        } else if(!currentSubs.includes(thisUserName) && participant.tracks.screenVideo.state!=='off') {\n                            console.log('************SUBSCRIBING TO SCREENVIDEO');\n                            callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: false, video: false, screenVideo: true}});\n                        } else if (!currentSubs.includes(thisUserName)) {\n                            console.log('The screenVideo.state is: ' + participant.tracks.screenVideo.state);\n                            console.log('NOT subscribing to: ' + thisUserName + ', sessionID: ' + participant.session_id);\n                            callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: false, video: false, screenVideo: true}});\n                        }\n                    }\n                });\n                resolve();\n            })\n        }\n        \n        setTracks().then(()=>{\n            \n            //remove screenshare widget from currentSubs array to not count it\n            const index = currentSubs.indexOf('InvisibleScreenShareWidget');\n            if (index > -1) {\n              currentSubs.splice(index, 1);\n            }\n    \n        //print subscriptions\n        currentSubs.filter(function (str) {return str.indexOf(window.myName) === -1}) //don't include self\n    \n        var iterator = currentSubs.values();\n        console.log(\"Currently subscribed to:\");\n        for (let elements of iterator) { \n            console.log(elements); \n        } \n        if (currentSubs.length < 1) {\n            console.log (\"No one.\")\n        }\n    \n        ///*** for debugging purposes\n        window.viewMode = viewMode;\n        window.currentSubs = currentSubs;\n        window.numberOfSubs=window.currentSubs && window.currentSubs.filter(function (str) {return str.indexOf('_AUDIO') === -1}).filter(function (str) {return str.indexOf('_AUDIO') === -1}).filter(function (str) {return str.indexOf(window.myName) === -1}).length;\n    \n    \n        })\n\n    },[ sessionState.isActive,\n        sessionState.roleOf,\n        sessionState.isKnown,\n        sessionState.AdminVisible,\n        myState.role,\n        myState.viewMode,\n        myState.name,\n        myState.userList]);  ///todo: make sure this doesn't mess anthing up; formerly, the dependencies were just myState and sessionState. userList is not referecenced in this useEffect\n        \n\n   \n};\n\nexport default useSetSubscriptions;\n\n"]},"metadata":{},"sourceType":"module"}