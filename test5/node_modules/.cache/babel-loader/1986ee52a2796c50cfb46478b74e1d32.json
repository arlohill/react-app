{"ast":null,"code":"import { useContext } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nexport function sendState(sessionState) {\n  const callObject = useContext(CallObjectContext);\n  console.log(\"Sending current state...\");\n  callObject.sendAppMessage(sessionState, '*');\n} // export function setViewMode(viewmode) {\n//     currentSubs=[];\n//     switch (viewMode) {\n//         case 'All':\n//                 currentSubs.push(sessionState.roleOf.Participant1);\n//                 currentSubs.push(sessionState.roleOf.Participant2);\n//                 currentSubs.push(sessionState.roleOf.Actor1);\n//                 currentSubs.push(sessionState.roleOf.Actor2);\n//             break;\n//         case 'Room1':\n//                 currentSubs.push(sessionState.roleOf.Participant1);\n//                 currentSubs.push(sessionState.roleOf.Actor2);\n//             break;\n//         case 'Room2':\n//                 currentSubs.push(sessionState.roleOf.Participant2);\n//                 currentSubs.push(sessionState.roleOf.Actor1);\n//             break;\n//         case 'Actors':\n//                 currentSubs.push(sessionState.roleOf.Actor1);\n//                 currentSubs.push(sessionState.roleOf.Actor2);\n//             break;\n//         case 'Participants':\n//             currentSubs.push(sessionState.roleOf.Participant1);\n//             currentSubs.push(sessionState.roleOf.Participant2);\n//             break;\n//         case '1s':\n//             currentSubs.push(sessionState.roleOf.Actor1);\n//             currentSubs.push(sessionState.roleOf.Participant1);\n//             break;\n//         case '2s':\n//                 currentSubs.push(sessionState.roleOf.Actor2);\n//                 currentSubs.push(sessionState.roleOf.Participant2);\n//             break;\n//         case 'Room3':\n//             currentSubs.push(sessionState.roleOf.Room3A);\n//             currentSubs.push(sessionState.roleOf.Room3B);\n//         break;\n//         case 'Room4':\n//             currentSubs.push(sessionState.roleOf.Room4A);\n//             currentSubs.push(sessionState.roleOf.Room4B);\n//         break;\n//         case 'Room5':\n//             currentSubs.push(sessionState.roleOf.Room5A);\n//             currentSubs.push(sessionState.roleOf.Room5B);\n//         break;\n//         case 'None':\n//             break;\n//         default:\n//             break;\n//     }\n//     setSubscriptions();\n// }\n// async function setAdminVis() {\n//     var selection = document.getElementById('admin-vis');\n//     sessionState.AdminVisible = selection.value;\n//     console.log(\"Admin\" + sessionState.AdminVisible ? \" is \" : \" is not \" + \"visible\");\n//     sendState();\n// }","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test1/src/components/AdminPanel/AdminFunctions.js"],"names":["useContext","CallObjectContext","sendState","sessionState","callObject","console","log","sendAppMessage"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AAGA,OAAO,SAASC,SAAT,CAAmBC,YAAnB,EAAiC;AACpC,QAAMC,UAAU,GAAGJ,UAAU,CAACC,iBAAD,CAA7B;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAa,0BAAb;AACAF,EAAAA,UAAU,CAACG,cAAX,CAA0BJ,YAA1B,EAAwC,GAAxC;AACH,C,CAID;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useContext } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\n\n\nexport function sendState(sessionState) {\n    const callObject = useContext(CallObjectContext);\n\n    console.log (\"Sending current state...\");\n    callObject.sendAppMessage(sessionState, '*'); \n}\n\n\n\n// export function setViewMode(viewmode) {\n \n//     currentSubs=[];\n\n//     switch (viewMode) {\n//         case 'All':\n//                 currentSubs.push(sessionState.roleOf.Participant1);\n//                 currentSubs.push(sessionState.roleOf.Participant2);\n//                 currentSubs.push(sessionState.roleOf.Actor1);\n//                 currentSubs.push(sessionState.roleOf.Actor2);\n//             break;\n\n//         case 'Room1':\n//                 currentSubs.push(sessionState.roleOf.Participant1);\n//                 currentSubs.push(sessionState.roleOf.Actor2);\n//             break;\n\n//         case 'Room2':\n//                 currentSubs.push(sessionState.roleOf.Participant2);\n//                 currentSubs.push(sessionState.roleOf.Actor1);\n//             break;\n\n//         case 'Actors':\n//                 currentSubs.push(sessionState.roleOf.Actor1);\n//                 currentSubs.push(sessionState.roleOf.Actor2);\n//             break;\n\n//         case 'Participants':\n//             currentSubs.push(sessionState.roleOf.Participant1);\n//             currentSubs.push(sessionState.roleOf.Participant2);\n//             break;\n\n//         case '1s':\n//             currentSubs.push(sessionState.roleOf.Actor1);\n//             currentSubs.push(sessionState.roleOf.Participant1);\n//             break;\n\n//         case '2s':\n//                 currentSubs.push(sessionState.roleOf.Actor2);\n//                 currentSubs.push(sessionState.roleOf.Participant2);\n//             break;\n\n//         case 'Room3':\n//             currentSubs.push(sessionState.roleOf.Room3A);\n//             currentSubs.push(sessionState.roleOf.Room3B);\n//         break;\n\n//         case 'Room4':\n//             currentSubs.push(sessionState.roleOf.Room4A);\n//             currentSubs.push(sessionState.roleOf.Room4B);\n//         break;\n\n//         case 'Room5':\n//             currentSubs.push(sessionState.roleOf.Room5A);\n//             currentSubs.push(sessionState.roleOf.Room5B);\n//         break;\n\n//         case 'None':\n//             break;\n\n//         default:\n//             break;\n//     }\n//     setSubscriptions();\n// }\n\n\n// async function setAdminVis() {\n//     var selection = document.getElementById('admin-vis');\n//     sessionState.AdminVisible = selection.value;\n//     console.log(\"Admin\" + sessionState.AdminVisible ? \" is \" : \" is not \" + \"visible\");\n//     sendState();\n// }"]},"metadata":{},"sourceType":"module"}