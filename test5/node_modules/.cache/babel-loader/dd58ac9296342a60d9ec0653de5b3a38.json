{"ast":null,"code":"var _jsxFileName = \"/Users/arlosb/Documents/GitHub/new react app/test5/src/components/Library/AppLibrary/AppLibrary.js\";\nimport React, { useEffect, useState } from 'react';\nimport \"../AppLibrary/AppLibrary.css\";\nimport VideoElement from \"../VideoElement/VideoElement\";\nimport $ from 'jquery';\nexport default function AppLibrary() {\n  const [videoArray, setVideoArray] = useState([]);\n  useEffect(() => {\n    $.ajax({\n      url: \"https://api.mux.com/video/v1/assets\",\n      beforeSend: function (xhr) {\n        xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(\"768959a2-7b04-44c2-b584-5800ffc71297:7fB9Fa8rXoCKI3MNDloDusslbS6gwZMoHj6dZldFBNoFEhUTT/pr+c/aI+4S5kImvDtCrBkk14a\")); //testing\n        // xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(\"4100efdb-e648-4287-ad0a-50e9875a238b:TyiPEfPzEcz/tl/0sYh5ndPpNIwaom0mQaLRiDQ4E+pX1nH1Xl9XDJWXiPYtgx5QRfi/8ukakFh\"));  //livestorm\n      },\n      type: 'GET',\n      contentType: 'application/json',\n      success: function (data) {\n        // alert(JSON.stringify(data));\n        window.test = data.data;\n        setVideoArray(data.data);\n      },\n      error: function () {\n        alert(\"Cannot get recordings\");\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Video library\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gallery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, videoArray.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(VideoElement, {\n    src: 'https://stream.mux.com/' + item.playback_ids[0].id + '.m3u8',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, new Date(parseInt(item.created_at * 1000)).toLocaleDateString(\"en-US\", {\n    weekday: 'short',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  }).toString()), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"download\")))));\n}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test5/src/components/Library/AppLibrary/AppLibrary.js"],"names":["React","useEffect","useState","VideoElement","$","AppLibrary","videoArray","setVideoArray","ajax","url","beforeSend","xhr","setRequestHeader","btoa","type","contentType","success","data","window","test","error","alert","map","item","playback_ids","id","Date","parseInt","created_at","toLocaleDateString","weekday","year","month","day","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,8BAAP;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;AAIA,eAAe,SAASC,UAAT,GAAsB;AAEnC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,CAAC,CAACI,IAAF,CAAO;AACLC,MAAAA,GAAG,EAAE,qCADA;AAELC,MAAAA,UAAU,EAAE,UAASC,GAAT,EAAc;AAC1BA,QAAAA,GAAG,CAACC,gBAAJ,CAAqB,eAArB,EAAsC,WAAWC,IAAI,CAAC,kHAAD,CAArD,EAD0B,CACkJ;AAC1K;AAED,OANI;AAOLC,MAAAA,IAAI,EAAE,KAPD;AAQLC,MAAAA,WAAW,EAAE,kBARR;AASLC,MAAAA,OAAO,EAAE,UAAUC,IAAV,EAAgB;AACvB;AACAC,QAAAA,MAAM,CAACC,IAAP,GAAYF,IAAI,CAACA,IAAjB;AACAV,QAAAA,aAAa,CAACU,IAAI,CAACA,IAAN,CAAb;AACD,OAbI;AAcLG,MAAAA,KAAK,EAAE,YAAU;AACfC,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;AAhBI,KAAP;AAkBD,GAnBQ,EAmBP,EAnBO,CAAT;AAwBA,sBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKf,UAAU,CAACgB,GAAX,CAAeC,IAAI,iBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAE,4BAA0BA,IAAI,CAACC,YAAL,CAAkB,CAAlB,EAAqBC,EAA/C,GAAkD,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,IAAIC,IAAJ,CAASC,QAAQ,CAACJ,IAAI,CAACK,UAAL,GAAgB,IAAjB,CAAjB,CAAD,CAA2CC,kBAA3C,CAA8D,OAA9D,EAAuE;AAAEC,IAAAA,OAAO,EAAE,OAAX;AAAoBC,IAAAA,IAAI,EAAE,SAA1B;AAAqCC,IAAAA,KAAK,EAAE,OAA5C;AAAqDC,IAAAA,GAAG,EAAE;AAA1D,GAAvE,EAA8IC,QAA9I,EAAJ,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADD,CAFL,CAFF,CAHF;AAsBD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"../AppLibrary/AppLibrary.css\";\nimport VideoElement from \"../VideoElement/VideoElement\";\nimport $ from 'jquery';\n\n\n\nexport default function AppLibrary() {\n\n  const [videoArray, setVideoArray] = useState([]);\n\n  useEffect(()=>{\n    $.ajax({\n      url: \"https://api.mux.com/video/v1/assets\",\n      beforeSend: function(xhr) { \n      xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(\"768959a2-7b04-44c2-b584-5800ffc71297:7fB9Fa8rXoCKI3MNDloDusslbS6gwZMoHj6dZldFBNoFEhUTT/pr+c/aI+4S5kImvDtCrBkk14a\")); //testing\n        // xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(\"4100efdb-e648-4287-ad0a-50e9875a238b:TyiPEfPzEcz/tl/0sYh5ndPpNIwaom0mQaLRiDQ4E+pX1nH1Xl9XDJWXiPYtgx5QRfi/8ukakFh\"));  //livestorm\n\n      },\n      type: 'GET',\n      contentType: 'application/json',\n      success: function (data) {\n        // alert(JSON.stringify(data));\n        window.test=data.data;\n        setVideoArray(data.data);\n      },\n      error: function(){\n        alert(\"Cannot get recordings\");\n      }\n  });\n  },[])\n\n                      \n  \n\n  return (\n\n\n    <div>\n      <h1>Video library</h1>\n      <div className='gallery'>\n       \n          {videoArray.map(item => \n            <div >\n              <VideoElement src={'https://stream.mux.com/'+item.playback_ids[0].id+'.m3u8'}/>\n              <p>{(new Date(parseInt(item.created_at*1000))).toLocaleDateString(\"en-US\", { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }).toString()}</p>\n              <p>download</p>\n            </div>\n          )}\n      </div>\n        \n     \n      \n    </div>\n\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}