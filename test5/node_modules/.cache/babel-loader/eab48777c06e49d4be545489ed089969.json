{"ast":null,"code":"var _jsxFileName = \"/Users/arlosb/Documents/GitHub/new react app/test2/src/components/InputSelector/InputSelector.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nimport './InputSelector.css';\nexport default React.forwardRef((props, ref) => {\n  const callObject = useContext(CallObjectContext);\n  const audioInputSelect = React.createRef();\n\n  const handleClick = e => {\n    let selectionID = e.target.value;\n    props.type == 'audio' && callObject.setInputDevicesAsync({\n      audioSource: selectionID\n    });\n    props.type == 'video' && callObject.setInputDevicesAsync({\n      videoSource: selectionID\n    });\n    console.log('New input: ' + e.target.text);\n  };\n\n  if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n    navigator.mediaDevices.enumerateDevices().then(function (deviceInfos) {\n      for (var i = 0; i !== deviceInfos.length; ++i) {\n        var deviceInfo = deviceInfos[i];\n        var option = document.createElement('option');\n        option.className = 'item';\n        option.value = deviceInfo.deviceId;\n\n        if (deviceInfo.kind === 'audioinput') {\n          option.text = deviceInfo.label || 'Microphone ' + (audioInputSelect.length + 1);\n          audioInputSelect.current.appendChild(option); // } else if (deviceInfo.kind === 'audiooutput') {\n          //   option.text = deviceInfo.label || 'Speaker ' +\n          //     (audioOutputSelect.length + 1);\n          //   audioOutputSelect.appendChild(option);\n          // } else if (deviceInfo.kind === 'videoinput') {\n          //   option.text = deviceInfo.label || 'Camera ' +\n          //     (videoSelect.length + 1);\n          //   videoSelect.appendChild(option);\n        }\n      }\n\n      ;\n    }).catch(function (err) {\n      console.log(err.name + \": \" + err.message);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-selector\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    ref: audioInputSelect,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test2/src/components/InputSelector/InputSelector.js"],"names":["React","useContext","useEffect","useState","CallObjectContext","forwardRef","props","ref","callObject","audioInputSelect","createRef","handleClick","e","selectionID","target","value","type","setInputDevicesAsync","audioSource","videoSource","console","log","text","navigator","mediaDevices","enumerateDevices","then","deviceInfos","i","length","deviceInfo","option","document","createElement","className","deviceId","kind","label","current","appendChild","catch","err","name","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,OAAO,qBAAP;AAGA,eAAeJ,KAAK,CAACK,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAe;AAC/C,QAAMC,UAAU,GAAGP,UAAU,CAACG,iBAAD,CAA7B;AACA,QAAMK,gBAAgB,GAAGT,KAAK,CAACU,SAAN,EAAzB;;AAEA,QAAMC,WAAW,GAAEC,CAAD,IAAO;AACrB,QAAIC,WAAW,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA3B;AACAT,IAAAA,KAAK,CAACU,IAAN,IAAc,OAAd,IAAyBR,UAAU,CAACS,oBAAX,CAAgC;AAACC,MAAAA,WAAW,EAAEL;AAAd,KAAhC,CAAzB;AACAP,IAAAA,KAAK,CAACU,IAAN,IAAc,OAAd,IAAyBR,UAAU,CAACS,oBAAX,CAAgC;AAACE,MAAAA,WAAW,EAAEN;AAAd,KAAhC,CAAzB;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBT,CAAC,CAACE,MAAF,CAASQ,IAArC;AACH,GAND;;AASG,MAAGC,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACC,YAAV,CAAuBC,gBAApD,EAAsE;AACrEF,IAAAA,SAAS,CAACC,YAAV,CAAuBC,gBAAvB,GACCC,IADD,CACM,UAASC,WAAT,EAAsB;AACxB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAKD,WAAW,CAACE,MAAlC,EAA0C,EAAED,CAA5C,EAA+C;AAC3C,YAAIE,UAAU,GAAGH,WAAW,CAACC,CAAD,CAA5B;AACA,YAAIG,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,QAAAA,MAAM,CAACG,SAAP,GAAiB,MAAjB;AACAH,QAAAA,MAAM,CAAChB,KAAP,GAAee,UAAU,CAACK,QAA1B;;AACA,YAAIL,UAAU,CAACM,IAAX,KAAoB,YAAxB,EAAsC;AACpCL,UAAAA,MAAM,CAACT,IAAP,GAAcQ,UAAU,CAACO,KAAX,IACZ,iBAAiB5B,gBAAgB,CAACoB,MAAjB,GAA0B,CAA3C,CADF;AAEApB,UAAAA,gBAAgB,CAAC6B,OAAjB,CAAyBC,WAAzB,CAAqCR,MAArC,EAHoC,CAItC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACN;;AAAA;AACF,KArBD,EAsBCS,KAtBD,CAsBO,UAASC,GAAT,EAAc;AACnBrB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,GAAG,CAACC,IAAJ,GAAW,IAAX,GAAkBD,GAAG,CAACE,OAAlC;AACD,KAxBD;AAyBA;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,GAAG,EAAEpC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAI,IAAA,GAAG,EAAEE,gBAAT;AAA2B,IAAA,OAAO,EAAEE,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADJ;AAOH,CAnDc,CAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nimport './InputSelector.css';\n\n\nexport default React.forwardRef((props, ref)=> {\nconst callObject = useContext(CallObjectContext);\nconst audioInputSelect = React.createRef();\n\nconst handleClick=(e) => {\n    let selectionID = e.target.value;\n    props.type == 'audio' && callObject.setInputDevicesAsync({audioSource: selectionID});\n    props.type == 'video' && callObject.setInputDevicesAsync({videoSource: selectionID});\n\n    console.log('New input: ' + e.target.text)\n}\n\n\n   if(navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n    navigator.mediaDevices.enumerateDevices()\n    .then(function(deviceInfos) {\n        for (var i = 0; i !== deviceInfos.length; ++i) {\n            var deviceInfo = deviceInfos[i];\n            var option = document.createElement('option');\n            option.className='item';\n            option.value = deviceInfo.deviceId;\n            if (deviceInfo.kind === 'audioinput') {\n              option.text = deviceInfo.label ||\n                'Microphone ' + (audioInputSelect.length + 1);\n              audioInputSelect.current.appendChild(option);\n            // } else if (deviceInfo.kind === 'audiooutput') {\n            //   option.text = deviceInfo.label || 'Speaker ' +\n            //     (audioOutputSelect.length + 1);\n            //   audioOutputSelect.appendChild(option);\n            // } else if (deviceInfo.kind === 'videoinput') {\n            //   option.text = deviceInfo.label || 'Camera ' +\n            //     (videoSelect.length + 1);\n            //   videoSelect.appendChild(option);\n            }\n      };\n    })\n    .catch(function(err) {\n      console.log(err.name + \": \" + err.message);\n    });\n   } \n    \n\n\n\n    return (\n        <div className=\"dropdown-selector\" ref={ref}>\n                <ul ref={audioInputSelect} onClick={handleClick}>\n                </ul>\n        </div>\n    );\n\n})\n"]},"metadata":{},"sourceType":"module"}