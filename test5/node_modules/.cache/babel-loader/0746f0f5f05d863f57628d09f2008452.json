{"ast":null,"code":"var _jsxFileName = \"/Users/arlosb/Documents/GitHub/new react app/test3/src/components/RoleSelector/RoleSelector.js\";\nimport React from 'react';\nimport './RoleSelector.css';\nimport setSubscriptions from '../../hooks/setSubscriptions';\nimport CallObjectContext from '../../CallObjectContext';\nexport default function StartButton(props) {\n  const callObject = useContext(CallObjectContext);\n\n  const setSubs = () => {\n    setSubscriptions(callObject);\n  };\n\n  let handleRoleChange = e => {\n    window.sessionState.roleOf[e.target.id] = e.target.value;\n    console.log(e.target.id + ' is now: ' + window.sessionState.roleOf[e.target.id]);\n    sendState();\n    let myNewRole = 'Attendee'; //default, if no role assigned\n\n    for (const key in window.sessionState.roleOf) {\n      if (window.sessionState.roleOf[key] == window.myName) {\n        myNewRole = key;\n      }\n    }\n\n    if (myNewRole != window.myRole) {\n      window.myRole = myNewRole;\n\n      if (window.myRole.includes('1')) {\n        window.myNumber = 1;\n      } else if (window.myRole.includes('2')) {\n        window.myNumber = 2;\n      }\n    }\n\n    if (window.sessionState.isActive) {// activateSession();  //rebuild UI for the newly assigned role, mid-session\n    }\n\n    setSubs();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RoleName-and-Dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RoleName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, \"Actor B:\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"selector\",\n    id: \"Actor2\",\n    onChange: handleRoleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), window.userList && window.userList.length > 0 && window.userList.map(user => /*#__PURE__*/React.createElement(\"option\", {\n    value: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 99\n    }\n  }, user)))))));\n}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test3/src/components/RoleSelector/RoleSelector.js"],"names":["React","setSubscriptions","CallObjectContext","StartButton","props","callObject","useContext","setSubs","handleRoleChange","e","window","sessionState","roleOf","target","id","value","console","log","sendState","myNewRole","key","myName","myRole","includes","myNumber","isActive","userList","length","map","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AAKA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACvC,QAAMC,UAAU,GAAGC,UAAU,CAACJ,iBAAD,CAA7B;;AACA,QAAMK,OAAO,GAAG,MAAM;AAACN,IAAAA,gBAAgB,CAACI,UAAD,CAAhB;AAA6B,GAApD;;AAGA,MAAIG,gBAAgB,GAAIC,CAAD,IAAO;AAC1BC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2BH,CAAC,CAACI,MAAF,CAASC,EAApC,IAAwCL,CAAC,CAACI,MAAF,CAASE,KAAjD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAaR,CAAC,CAACI,MAAF,CAASC,EAAT,GAAc,WAAd,GAA4BJ,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2BH,CAAC,CAACI,MAAF,CAASC,EAApC,CAAzC;AACAI,IAAAA,SAAS;AAET,QAAIC,SAAS,GAAG,UAAhB,CAL0B,CAKE;;AAC5B,SAAK,MAAMC,GAAX,IAAkBV,MAAM,CAACC,YAAP,CAAoBC,MAAtC,EAA8C;AAC1C,UAAGF,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2BQ,GAA3B,KAAiCV,MAAM,CAACW,MAA3C,EAAmD;AAC/CF,QAAAA,SAAS,GAAGC,GAAZ;AACH;AACJ;;AACD,QAAID,SAAS,IAAET,MAAM,CAACY,MAAtB,EAA8B;AAC1BZ,MAAAA,MAAM,CAACY,MAAP,GAAgBH,SAAhB;;AACE,UAAIT,MAAM,CAACY,MAAP,CAAcC,QAAd,CAAuB,GAAvB,CAAJ,EAAiC;AAC7Bb,QAAAA,MAAM,CAACc,QAAP,GAAgB,CAAhB;AACH,OAFD,MAEO,IAAId,MAAM,CAACY,MAAP,CAAcC,QAAd,CAAuB,GAAvB,CAAJ,EAAiC;AACpCb,QAAAA,MAAM,CAACc,QAAP,GAAgB,CAAhB;AACH;AACJ;;AACC,QAAGd,MAAM,CAACC,YAAP,CAAoBc,QAAvB,EAAgC,CAC5B;AACH;;AACDlB,IAAAA,OAAO;AACZ,GAvBH;;AA0BA,sBAEI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACY;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADZ,eAOQ;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,EAAE,EAAC,QAAhC;AAAyC,IAAA,QAAQ,EAAEC,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEKE,MAAM,CAACgB,QAAP,IAAmBhB,MAAM,CAACgB,QAAP,CAAgBC,MAAhB,GAAuB,CAA1C,IAA+CjB,MAAM,CAACgB,QAAP,CAAgBE,GAAhB,CAAqBC,IAAD,iBAAU;AAAQ,IAAA,KAAK,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,IAAtB,CAA9B,CAFpD,CADA,CADA,CADA,CAPR,CAFJ;AAsBD","sourcesContent":["import React from 'react';\nimport './RoleSelector.css';\nimport setSubscriptions from '../../hooks/setSubscriptions';\nimport CallObjectContext from '../../CallObjectContext';\n\n\n\n\nexport default function StartButton(props) {\n    const callObject = useContext(CallObjectContext);\n    const setSubs = () => {setSubscriptions(callObject)};  \n\n\n    let handleRoleChange = (e) => {\n        window.sessionState.roleOf[e.target.id]=e.target.value;\n        console.log (e.target.id + ' is now: ' + window.sessionState.roleOf[e.target.id]);\n        sendState();\n    \n        let myNewRole = 'Attendee'; //default, if no role assigned\n        for (const key in window.sessionState.roleOf) {\n            if(window.sessionState.roleOf[key]==window.myName) {\n                myNewRole = key;\n            }\n        }\n        if (myNewRole!=window.myRole) {\n            window.myRole = myNewRole;\n              if (window.myRole.includes('1')) {\n                  window.myNumber=1;\n              } else if (window.myRole.includes('2')) {\n                  window.myNumber=2;\n              }\n          }\n            if(window.sessionState.isActive){\n                // activateSession();  //rebuild UI for the newly assigned role, mid-session\n            } \n            setSubs();\n      }\n\n\n    return (\n\n        <div className='RoleName-and-Dropdown'>\n                    <div className='RoleName'>\n                      <p>\n                        Actor B:\n                      </p>\n                    </div>\n\n                <div className='dropdown'>\n                <p>\n                <form>\n                <select className='selector' id=\"Actor2\" onChange={handleRoleChange}>                    \n                <option value={null}></option>\n                    {window.userList && window.userList.length>0 && window.userList.map((user) => <option value={user}>{user}</option>)}\n                    </select>\n                  </form>\n                </p>\n              </div>\n          </div>\n      \n    );\n  }\n\n        "]},"metadata":{},"sourceType":"module"}