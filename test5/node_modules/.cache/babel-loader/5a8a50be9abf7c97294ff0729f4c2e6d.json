{"ast":null,"code":"var _jsxFileName = \"/Users/arlosb/Documents/GitHub/new react app/test4/src/components/RoleSelector/RoleSelector.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './RoleSelector.css';\nimport setSubscriptions from '../../hooks/setSubscriptions';\nimport CallObjectContext from '../../CallObjectContext';\nimport SessionStateContext from '../../SessionStateContext';\nimport MyContext from '../../MyContext';\nexport default function RoleSelector(props) {\n  const callObject = useContext(CallObjectContext);\n  const {\n    session\n  } = useContext(SessionStateContext);\n  const [sessionState, setSessionState] = session;\n  const role = props.role;\n  const {\n    myStateArray,\n    //   setName, \n    //   setRole,\n    //   setUserList,\n    //   setViewMode,\n    //   setCamOn,\n    //   setMicOn,\n    //   setAdminPresent,\n    //   setAmAdmin, \n    setNumber\n  } = useContext(MyContext);\n  const [myState, setMyState] = myStateArray; // const sendState = () => {\n  //     console.log (\"Sending current state...\");\n  //     callObject.sendAppMessage(sessionState, '*'); \n  // }\n\n  let handleRoleChange = e => {\n    window.role = role;\n    window.test = e.target.id;\n    let newRole = e.target.id;\n    let newName = e.target.value;\n    setSessionState(prevState => ({ ...prevState,\n      roleOf: { ...prevState.roleOf,\n        [newRole]: newName\n      }\n    }));\n    console.log(e.target.id + ' is now: ' + e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"selector\",\n    id: role,\n    onChange: handleRoleChange,\n    value: sessionState.roleOf[role],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), myState.userList.names && myState.userList.names.length > 0 && myState.userList.names.map(user => /*#__PURE__*/React.createElement(\"option\", {\n    value: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 116\n    }\n  }, user.includes('_Admin') ? user.split('_Admin').join('') : user))));\n}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test4/src/components/RoleSelector/RoleSelector.js"],"names":["React","useContext","useEffect","useState","setSubscriptions","CallObjectContext","SessionStateContext","MyContext","RoleSelector","props","callObject","session","sessionState","setSessionState","role","myStateArray","setNumber","myState","setMyState","handleRoleChange","e","window","test","target","id","newRole","newName","value","prevState","roleOf","console","log","userList","names","length","map","user","includes","split","join"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,oBAAP;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAKA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,QAAMC,UAAU,GAAGT,UAAU,CAACI,iBAAD,CAA7B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAcV,UAAU,CAACK,mBAAD,CAA9B;AACA,QAAM,CAAEM,YAAF,EAAeC,eAAf,IAAkCF,OAAxC;AACA,QAAMG,IAAI,GAAGL,KAAK,CAACK,IAAnB;AACA,QAAM;AAAEC,IAAAA,YAAF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA;AATA,MAUEf,UAAU,CAACM,SAAD,CAVlB;AAWF,QAAM,CAAEU,OAAF,EAAUC,UAAV,IAAyBH,YAA/B,CAhB0C,CAkBxC;AACA;AACA;AACA;;AAGA,MAAII,gBAAgB,GAAIC,CAAD,IAAO;AAC1BC,IAAAA,MAAM,CAACP,IAAP,GAAYA,IAAZ;AACAO,IAAAA,MAAM,CAACC,IAAP,GAAYF,CAAC,CAACG,MAAF,CAASC,EAArB;AACA,QAAIC,OAAO,GAACL,CAAC,CAACG,MAAF,CAASC,EAArB;AACA,QAAIE,OAAO,GAACN,CAAC,CAACG,MAAF,CAASI,KAArB;AACAd,IAAAA,eAAe,CAAEe,SAAD,KACZ,EACA,GAAGA,SADH;AAEAC,MAAAA,MAAM,EAAE,EACA,GAAGD,SAAS,CAACC,MADb;AAEA,SAACJ,OAAD,GAAWC;AAFX;AAFR,KADY,CAAD,CAAf;AASAI,IAAAA,OAAO,CAACC,GAAR,CAAaX,CAAC,CAACG,MAAF,CAASC,EAAT,GAAc,WAAd,GAA4BJ,CAAC,CAACG,MAAF,CAASI,KAAlD;AAEH,GAhBD;;AAoBA,sBAKA;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,EAAE,EAAEb,IAAjC;AAAuC,IAAA,QAAQ,EAAEK,gBAAjD;AAAmE,IAAA,KAAK,EAAEP,YAAY,CAACiB,MAAb,CAAoBf,IAApB,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEKG,OAAO,CAACe,QAAR,CAAiBC,KAAjB,IAA0BhB,OAAO,CAACe,QAAR,CAAiBC,KAAjB,CAAuBC,MAAvB,GAA8B,CAAxD,IAA6DjB,OAAO,CAACe,QAAR,CAAiBC,KAAjB,CAAuBE,GAAvB,CAA4BC,IAAD,iBAAU;AAAQ,IAAA,KAAK,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,IAAI,CAACC,QAAL,CAAc,QAAd,IAA0BD,IAAI,CAACE,KAAL,CAAW,QAAX,EAAqBC,IAArB,CAA0B,EAA1B,CAA1B,GAA0DH,IAAhF,CAArC,CAFlE,CADR,CALA;AAcD","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport './RoleSelector.css';\nimport setSubscriptions from '../../hooks/setSubscriptions';\nimport CallObjectContext from '../../CallObjectContext';\nimport SessionStateContext from '../../SessionStateContext';\nimport MyContext from '../../MyContext';\n\n\n\n\nexport default function RoleSelector(props) {\n    const callObject = useContext(CallObjectContext);\n    const { session } = useContext(SessionStateContext);\n    const [ sessionState,setSessionState] = session;\n    const role = props.role;\n    const { myStateArray, \n        //   setName, \n        //   setRole,\n        //   setUserList,\n        //   setViewMode,\n        //   setCamOn,\n        //   setMicOn,\n        //   setAdminPresent,\n        //   setAmAdmin, \n          setNumber,\n        } = useContext(MyContext);\n  const [ myState,setMyState ] = myStateArray;\n    \n    // const sendState = () => {\n    //     console.log (\"Sending current state...\");\n    //     callObject.sendAppMessage(sessionState, '*'); \n    // }\n\n\n    let handleRoleChange = (e) => {\n        window.role=role;\n        window.test=e.target.id;\n        let newRole=e.target.id;\n        let newName=e.target.value;\n        setSessionState((prevState)=>(\n            {\n            ...prevState,\n            roleOf: {\n                    ...prevState.roleOf,\n                    [newRole]: newName,\n                    }\n            }\n            ))\n        console.log (e.target.id + ' is now: ' + e.target.value);\n    \n    }\n\n\n\n    return (\n\n\n\n\n    <form className='dropdown'>\n            <select className='selector' id={role} onChange={handleRoleChange} value={sessionState.roleOf[role]}>            \n            <option value={null}></option>\n                {myState.userList.names && myState.userList.names.length>0 && myState.userList.names.map((user) => <option value={user}>{user.includes('_Admin') ? user.split('_Admin').join('') : user}</option>)}\n            </select>\n    </form>\n                    \n\n    );\n  }\n\n        "]},"metadata":{},"sourceType":"module"}