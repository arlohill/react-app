{"ast":null,"code":"var _jsxFileName = \"/Users/arlosb/Documents/GitHub/new react app/test5/src/components/Library/VideoElement/HLSSource.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport Hls from 'hls.js';\nexport default function VideoPlayer() {\n  const videoRef = useRef(null);\n  const src = \"https://stream.mux.com/{PLAYBACK_ID}.m3u8\";\n  useEffect(() => {\n    let hls;\n\n    if (videoRef.current) {\n      const video = videoRef.current;\n\n      if (video.canPlayType(\"application/vnd.apple.mpegurl\")) {\n        // Some browers (safari and ie edge) support HLS natively\n        video.src = src;\n      } else if (Hls.isSupported()) {\n        // This will run in all other modern browsers\n        hls = new Hls();\n        hls.loadSource(src);\n        hls.attachMedia(video);\n      } else {\n        console.error(\"This is a legacy browser that doesn't support MSE\");\n      }\n    }\n\n    return () => {\n      if (hls) {\n        hls.destroy();\n      }\n    };\n  }, [videoRef]);\n  return /*#__PURE__*/React.createElement(\"video\", {\n    controls: true,\n    ref: videoRef,\n    style: {\n      width: \"100%\",\n      maxWidth: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test5/src/components/Library/VideoElement/HLSSource.js"],"names":["React","useEffect","useRef","Hls","VideoPlayer","videoRef","src","hls","current","video","canPlayType","isSupported","loadSource","attachMedia","console","error","destroy","width","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAMC,QAAQ,GAAGH,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMI,GAAG,GAAG,2CAAZ;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,GAAJ;;AACA,QAAIF,QAAQ,CAACG,OAAb,EAAsB;AACpB,YAAMC,KAAK,GAAGJ,QAAQ,CAACG,OAAvB;;AAEA,UAAIC,KAAK,CAACC,WAAN,CAAkB,+BAAlB,CAAJ,EAAwD;AACtD;AACAD,QAAAA,KAAK,CAACH,GAAN,GAAYA,GAAZ;AACD,OAHD,MAGO,IAAIH,GAAG,CAACQ,WAAJ,EAAJ,EAAuB;AAC5B;AACAJ,QAAAA,GAAG,GAAG,IAAIJ,GAAJ,EAAN;AACAI,QAAAA,GAAG,CAACK,UAAJ,CAAeN,GAAf;AACAC,QAAAA,GAAG,CAACM,WAAJ,CAAgBJ,KAAhB;AACD,OALM,MAKA;AACLK,QAAAA,OAAO,CAACC,KAAR,CAAc,mDAAd;AACD;AACF;;AAED,WAAO,MAAM;AACX,UAAIR,GAAJ,EAAS;AACPA,QAAAA,GAAG,CAACS,OAAJ;AACD;AACF,KAJD;AAKD,GAvBQ,EAuBN,CAACX,QAAD,CAvBM,CAAT;AAyBA,sBACE;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,GAAG,EAAEA,QAFP;AAGE,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,QAAQ,EAAE;AAA3B,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Hls from 'hls.js';\n\nexport default function VideoPlayer() {\n  const videoRef = useRef(null);\n  const src = \"https://stream.mux.com/{PLAYBACK_ID}.m3u8\";\n\n  useEffect(() => {\n    let hls;\n    if (videoRef.current) {\n      const video = videoRef.current;\n\n      if (video.canPlayType(\"application/vnd.apple.mpegurl\")) {\n        // Some browers (safari and ie edge) support HLS natively\n        video.src = src;\n      } else if (Hls.isSupported()) {\n        // This will run in all other modern browsers\n        hls = new Hls();\n        hls.loadSource(src);\n        hls.attachMedia(video);\n      } else {\n        console.error(\"This is a legacy browser that doesn't support MSE\");\n      }\n    }\n\n    return () => {\n      if (hls) {\n        hls.destroy();\n      }\n    };\n  }, [videoRef]);\n\n  return (\n    <video\n      controls\n      ref={videoRef}\n      style={{ width: \"100%\", maxWidth: \"500px\" }}\n    />\n  );\n}  "]},"metadata":{},"sourceType":"module"}