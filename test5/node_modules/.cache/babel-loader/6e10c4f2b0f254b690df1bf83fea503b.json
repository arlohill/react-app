{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _objectSpread from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useCallback}from'react';import Call from'../Call/Call';import StartScreen from'../StartScreen/StartScreen';import api from'../../../api';import'./AppGeneral.css';import Tray from'../Tray/Tray';import CallObjectContext from'../../../CallObjectContext';import SessionStateContext from'../../../SessionStateContext';import MyContext from'../../../MyContext';import{roomUrlFromPageUrl,pageUrlFromRoomUrl}from'../../../urlUtils';import DailyIframe from'@daily-co/daily-js';import{logDailyEvent}from'../../../logUtils';import setSubscriptions from'../../../hooks/setSubscriptions';import audioPlayer from'../../../hooks/AudioPlayer';import AdminPanel from'../AdminPanel/AdminPanel';var STATE_IDLE='STATE_IDLE';var STATE_CREATING='STATE_CREATING';var STATE_JOINING='STATE_JOINING';var STATE_JOINED='STATE_JOINED';var STATE_LEAVING='STATE_LEAVING';var STATE_ERROR='STATE_ERROR';export default function AppGeneral(){var _useState=useState(STATE_IDLE),_useState2=_slicedToArray(_useState,2),appState=_useState2[0],setAppState=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),roomUrl=_useState4[0],setRoomUrl=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),callObject=_useState6[0],setCallObject=_useState6[1];var _useState7=useState({type:'sessionState',isKnown:false,isActive:false,AdminVisible:false,hasAnUpdate:false,roleOf:{Buyer1:'',Buyer2:'',Buyer3:'',Buyer4:'',Seller:'',Shadow1:'',Shadow2:'',Shadow3:'',Shadow4:''},chatHistory:[]}),_useState8=_slicedToArray(_useState7,2),sessionState=_useState8[0],setSessionState=_useState8[1];var _useState9=useState({name:'Your first name',role:window.myRole,amAdmin:window.amAdmin,userList:{names:[],sessionIdFor:{}},adminPresent:false,viewMode:null,audioIsPlaying:false,camOnAtSessionStart:null,micOnAtSessionStart:null,number:null}),_useState10=_slicedToArray(_useState9,2),myState=_useState10[0],setMyState=_useState10[1];var setName=function setName(newName){setMyState(function(prev){return _objectSpread(_objectSpread({},prev),{},{name:newName});});};var setViewMode=function setViewMode(newViewMode){setMyState(function(prev){return _objectSpread(_objectSpread({},prev),{},{viewMode:newViewMode});});};var setRole=function setRole(newRole){setMyState(function(prev){return _objectSpread(_objectSpread({},prev),{},{role:newRole});});};var setUserList=function setUserList(newUserList){setMyState(function(prev){return _objectSpread(_objectSpread({},prev),{},{userList:newUserList});});};var setAmAdmin=function setAmAdmin(boolean){setMyState(function(prev){return _objectSpread(_objectSpread({},prev),{},{amAdmin:boolean});});};var setAdminPresent=function setAdminPresent(boolean){setMyState(function(prev){return _objectSpread(_objectSpread({},prev),{},{adminPresent:boolean});});};var setMicOnAtSessionStart=function setMicOnAtSessionStart(boolean){setMyState(function(prev){return _objectSpread(_objectSpread({},prev),{},{micOnAtSessionStart:boolean});});};var setCamOnAtSessionStart=function setCamOnAtSessionStart(boolean){setMyState(function(prev){return _objectSpread(_objectSpread({},prev),{},{camOnAtSessionStart:boolean});});};var setNumber=function setNumber(newNum){setMyState(function(prev){return _objectSpread(_objectSpread({},prev),{},{number:newNum});});};if(!window.pass.includes(window.myP)){//redirect if password is wrong\nwindow.location.href=\"http://secondbody.co\";}/**\n   * Creates a new call room.\n   */var createCall=useCallback(function(){setAppState(STATE_CREATING);return api.createRoom().then(function(room){return room.url;}).catch(function(error){console.log('Error creating room',error);setRoomUrl(null);setAppState(STATE_IDLE);});},[]);/**\n   * Starts joining an existing call.\n   *\n   * NOTE: In this demo we show how to completely clean up a call with destroy(),\n   * which requires creating a new call object before you can join() again.\n   * This isn't strictly necessary, but is good practice when you know you'll\n   * be done with the call object for a while and you're no longer listening to its\n   * events.\n   */var startJoiningCall=useCallback(function(url){// if(!initialInputs) {return}\nvar newCallObject=DailyIframe.createCallObject({subscribeToTracksAutomatically:false});setRoomUrl(url);setCallObject(newCallObject);setAppState(STATE_JOINING);if(window.initialInputs){console.log('initial audio: '+window.initialInputs[0]+'. Initial video: '+window.initialInputs[1]);newCallObject.join({userName:myState.name,url:url,audioSource:window.initialInputs[0],videoSource:window.initialInputs[1]});}else{navigator.mediaDevices.getUserMedia({audio:true,video:true}).then(function(mediaStream){if(mediaStream){var localAudio=mediaStream.getAudioTracks();var localVideo=mediaStream.getVideoTracks();if(localAudio&&localAudio.length>0&&localVideo&&localVideo.length>0){newCallObject.join({userName:myState.name,url:url,audioSource:localAudio[0],videoSource:localVideo[0]});}}else{//message e.g. you need a mic to join\n}});}console.log('joining the call as '+myState.name);var pageUrl=pageUrlFromRoomUrl(roomUrl)+'&N='+myState.name+'&R='+myState.role;},[myState.name]);/**\n   * Starts leaving the current call.\n   */var startLeavingCall=useCallback(function(){if(!callObject)return;callObject.stopRecording();// in case meeting is being recorded\n// If we're in the error state, we've already \"left\", so just clean up\nif(appState===STATE_ERROR){callObject.destroy().then(function(){setRoomUrl(null);setCallObject(null);setAppState(STATE_IDLE);window.initialize();});}else{setAppState(STATE_LEAVING);callObject.leave();window.initialize();}},[callObject,appState]);/**\n   * If a room's already specified in the page's URL when the component mounts,\n   * join the room.\n   */useEffect(function(){var url=roomUrlFromPageUrl();url&&window.initialInputs&&startJoiningCall(url);},[startJoiningCall]);/**\n   * Update the page's URL to reflect the active call when roomUrl changes.\n   *\n   * This demo uses replaceState rather than pushState in order to avoid a bit\n   * of state-management complexity. See the comments around enableCallButtons\n   * and enableStartButton for more information.\n   */useEffect(function(){var pageUrl=pageUrlFromRoomUrl(roomUrl);window.pageUrl=pageUrl;// if (myState.name) {\n//   if (pageUrl.indexOf('?') > -1){\n//     pageUrl += '&N=' + myState.name;\n//   }else{\n//     pageUrl += '?N=' + myState.name;\n//   }\n// }\nif(myState.role){if(pageUrl.indexOf('?')>-1){pageUrl+='&R='+window.myRole;}else{pageUrl+='?R='+window.myRole;}}if(window.myP){if(pageUrl.indexOf('?')>-1){pageUrl+='&P='+window.myP;}else{pageUrl+='?P='+window.myP;}}if(pageUrl===window.location.href)return;window.history.replaceState(null,null,pageUrl);},[roomUrl]);/**\n   * Attach call object to window for debugging purposes.\n   */useEffect(function(){window.callObject=callObject;},[callObject]);/**\n   * Attach myState object to window for debugging purposes.\n   */useEffect(function(){window.myState=myState;},[myState]);/**\n   * Attach userList to window for debugging\n   */useEffect(function(){window.userList=myState.userList;},[myState.userList]);/**\n   * Attach sessionState to window for debugging\n   */useEffect(function(){window.sessionState=sessionState;},[sessionState]);useEffect(function(){if(!callObject){return;}window.record=function(){callObject.startRecording();};window.stop=function(){callObject.stopRecording();};},[appState]);//Ask for State when Admin becomes present and State is not known\nuseEffect(function(){var stateRequest;if(!callObject){return;}if(!sessionState.isKnown&&myState.adminPresent){var getState=function getState(){if(sessionState.isKnown){clearInterval(stateRequest);return;}callObject.sendAppMessage(\"State please?\",'*');console.log('Requesting meeting state...');};stateRequest=setInterval(getState,1000);}//cleanup before useEffect runs the next time\nreturn function cleanup(){stateRequest&&clearInterval(stateRequest);};},[sessionState.isKnown,myState.adminPresent]);/**\n   * Update app state based on reported meeting state changes.\n   *\n   * NOTE: Here we're showing how to completely clean up a call with destroy().\n   * This isn't strictly necessary between join()s, but is good practice when\n   * you know you'll be done with the call object for a while and you're no\n   * longer listening to its events.\n   */useEffect(function(){if(!callObject)return;var events=['joined-meeting','left-meeting','error','participant-joined'];function handleNewMeetingState(event){event&&logDailyEvent(event);switch(callObject.meetingState()){case'joined-meeting':setAppState(STATE_JOINED);callObject.setNetworkTopology({topology:'sfu'});// window.userList.push(window.myName);\nconsole.log('*****JOINED MEETING');if(myState.name==\"\"){callObject.leave();}// useUpdateUserList().then((isAnAdminPresent)=>{\n//   if(window.myRole==\"Admin\") {\n//     setSessionState(prev=>({\n//       ...prev,\n//       isKnown: isAnAdminPresent ? false : true\n//     }))\n//   }\n// })\nif(!window.sessionState.isKnown){// if (window.myRole==\"Admin\") {\n//   checkIfAdminPresent().then((anAdminIsPresent)=> {\n//     setAdminPresent(anAdminIsPresent);\n//     setSessionState(prev=>({\n//       ...prev,\n//       isKnown: anAdminIsPresent ? false : true,\n//     }));                              //if there's already another admin, make session state 'not known'; otherwise make 'known'\n//     anAdminIsPresent ? console.log(`An admin is already present`) : console.log(`An admin is NOT already present`);\n//     // if (anAdminIsPresent) {\n//     //   window.stateRequest = setInterval(()=>{getState()},2500);\n//     // }\n//   })\n// } \n// else {\n//   // window.stateRequest = setInterval(()=>{getState()},2500);\n// }\n}break;case'left-meeting':callObject.destroy().then(function(){setRoomUrl(null);setCallObject(null);setAppState(STATE_IDLE);clearInterval(window.stateRequest);window.initialize();});break;case'participant-joined':break;case'error':setAppState(STATE_ERROR);break;default:break;}}// Use initial state\nhandleNewMeetingState();// Listen for changes in state\nfor(var _i=0,_events=events;_i<_events.length;_i++){var event=_events[_i];callObject.on(event,handleNewMeetingState);}// Stop listening for changes in state\nreturn function cleanup(){var _iterator=_createForOfIteratorHelper(events),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _event=_step.value;callObject.off(_event,handleNewMeetingState);}}catch(err){_iterator.e(err);}finally{_iterator.f();}};},[callObject]);/**\n   * Listen for app messages from other call participants.\n   */useEffect(function(){if(!callObject){return;}function handleAppMessage(e){if(e){logDailyEvent(e);console.log(\"received app message from \".concat(e.fromId,\": \"),e.data);//handle sessionState updates\nif(e.data.constructor===Object&&e.data.type==\"sessionState\"){var newSessionState=e.data;newSessionState.hasAnUpdate=false;//so it won't trigger another sendState() effect\nsetSessionState(newSessionState);}//TODO AUDIO TEST\nelse if(e.data.constructor===Object&&e.data.type==\"instructions\"&&e.data.recipient==callObject.participants().local.session_id){audioPlayer(e.data.target,e.data.action);}else if(e.data==\"State please?\"){console.log('*******Received state request, and sessionState.isKnown: '+sessionState.isKnown);if(myState.amAdmin&&sessionState.isKnown){console.log(\"Sending current state...\");callObject.sendAppMessage(sessionState,'*');}}}}//end handleAppMessage\ncallObject.on('app-message',handleAppMessage);return function cleanup(){callObject.off('app-message',handleAppMessage);};},[callObject,sessionState]);/**\n   * Show the call UI if we're either joining, already joined, or are showing\n   * an error.\n   */var showCall=[STATE_JOINING,STATE_JOINED,STATE_ERROR].includes(appState);return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(SessionStateContext.Provider,{value:{session:[sessionState,setSessionState]}},/*#__PURE__*/React.createElement(MyContext.Provider,{value:{myStateArray:[myState,setMyState],setName:setName,setRole:setRole,setUserList:setUserList,setViewMode:setViewMode,setCamOnAtSessionStart:setCamOnAtSessionStart,setMicOnAtSessionStart:setMicOnAtSessionStart,setAdminPresent:setAdminPresent,setAmAdmin:setAmAdmin,setNumber:setNumber}},showCall?/*#__PURE__*/ // NOTE: for an app this size, it's not obvious that using a Context\n// is the best choice. But for larger apps with deeply-nested components\n// that want to access call object state and bind event listeners to the\n// call object, this can be a helpful pattern.\nReact.createElement(CallObjectContext.Provider,{value:callObject},/*#__PURE__*/React.createElement(Call,{roomUrl:roomUrl}),/*#__PURE__*/React.createElement(Tray,{onClickLeaveCall:startLeavingCall}),myState.amAdmin&&/*#__PURE__*/React.createElement(AdminPanel,null)):/*#__PURE__*/React.createElement(StartScreen// disabled={!enableStartButton}\n,{onClick:function onClick(){createCall().then(function(url){return startJoiningCall(url);});}}))));}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test4/src/components/General/AppGeneral/AppGeneral.js"],"names":["React","useEffect","useState","useCallback","Call","StartScreen","api","Tray","CallObjectContext","SessionStateContext","MyContext","roomUrlFromPageUrl","pageUrlFromRoomUrl","DailyIframe","logDailyEvent","setSubscriptions","audioPlayer","AdminPanel","STATE_IDLE","STATE_CREATING","STATE_JOINING","STATE_JOINED","STATE_LEAVING","STATE_ERROR","AppGeneral","appState","setAppState","roomUrl","setRoomUrl","callObject","setCallObject","type","isKnown","isActive","AdminVisible","hasAnUpdate","roleOf","Buyer1","Buyer2","Buyer3","Buyer4","Seller","Shadow1","Shadow2","Shadow3","Shadow4","chatHistory","sessionState","setSessionState","name","role","window","myRole","amAdmin","userList","names","sessionIdFor","adminPresent","viewMode","audioIsPlaying","camOnAtSessionStart","micOnAtSessionStart","number","myState","setMyState","setName","newName","prev","setViewMode","newViewMode","setRole","newRole","setUserList","newUserList","setAmAdmin","boolean","setAdminPresent","setMicOnAtSessionStart","setCamOnAtSessionStart","setNumber","newNum","pass","includes","myP","location","href","createCall","createRoom","then","room","url","catch","error","console","log","startJoiningCall","newCallObject","createCallObject","subscribeToTracksAutomatically","initialInputs","join","userName","audioSource","videoSource","navigator","mediaDevices","getUserMedia","audio","video","mediaStream","localAudio","getAudioTracks","localVideo","getVideoTracks","length","pageUrl","startLeavingCall","stopRecording","destroy","initialize","leave","indexOf","history","replaceState","record","startRecording","stop","stateRequest","getState","clearInterval","sendAppMessage","setInterval","cleanup","events","handleNewMeetingState","event","meetingState","setNetworkTopology","topology","on","off","handleAppMessage","e","fromId","data","constructor","Object","newSessionState","recipient","participants","local","session_id","target","action","showCall","session","myStateArray"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport Call from '../Call/Call';\nimport StartScreen from '../StartScreen/StartScreen';\nimport api from '../../../api';\nimport './AppGeneral.css';\nimport Tray from '../Tray/Tray';\nimport CallObjectContext from '../../../CallObjectContext';\nimport SessionStateContext from '../../../SessionStateContext';\nimport MyContext from '../../../MyContext'\nimport { roomUrlFromPageUrl, pageUrlFromRoomUrl } from '../../../urlUtils';\nimport DailyIframe from '@daily-co/daily-js';\nimport { logDailyEvent } from '../../../logUtils';\nimport setSubscriptions from '../../../hooks/setSubscriptions';\nimport audioPlayer from '../../../hooks/AudioPlayer';\nimport AdminPanel from '../AdminPanel/AdminPanel';\n\n\n\n\nconst STATE_IDLE = 'STATE_IDLE';\nconst STATE_CREATING = 'STATE_CREATING';\nconst STATE_JOINING = 'STATE_JOINING';\nconst STATE_JOINED = 'STATE_JOINED';\nconst STATE_LEAVING = 'STATE_LEAVING';\nconst STATE_ERROR = 'STATE_ERROR';\n\n\n\n\nexport default function AppGeneral() {\n  const [appState, setAppState] = useState(STATE_IDLE);\n  const [roomUrl, setRoomUrl] = useState(null);\n  const [callObject, setCallObject] = useState(null);\n  const [sessionState, setSessionState] = useState({\n                                                    type: 'sessionState',\n                                                    isKnown:false,\n                                                    isActive:false,\n                                                    AdminVisible:false,\n                                                    hasAnUpdate: false,\n                                                    roleOf: {\n                                                              Buyer1: '',\n                                                              Buyer2: '',\n                                                              Buyer3: '',\n                                                              Buyer4: '',\n                                                              Seller: '',\n                                                              Shadow1: '',\n                                                              Shadow2: '',\n                                                              Shadow3: '',\n                                                              Shadow4: '',\n                                                            },\n                                                    chatHistory:[],\n                                                    });\n\n\n  const [myState, setMyState] = useState({\n                                name: 'Your first name',\n                                role: window.myRole,\n                                amAdmin: window.amAdmin,\n                                userList: {\n                                  names:[],\n                                  sessionIdFor: {},\n                                },\n                                adminPresent: false,\n                                viewMode: null,\n                                audioIsPlaying: false,\n                                camOnAtSessionStart: null,\n                                micOnAtSessionStart: null,\n                                number: null,\n                              });\n\n  const setName = (newName) => {\n    setMyState(prev=>({\n      ...prev,\n      name: newName,\n    }));\n  };\n\n  const setViewMode = (newViewMode) => {\n    setMyState(prev=>({\n      ...prev,\n      viewMode:newViewMode,\n    }));\n  };\n\n  const setRole = (newRole) => {\n    setMyState(prev=>({\n      ...prev,\n      role:newRole,\n    }));\n  };\n\n  const setUserList = (newUserList) => {\n    setMyState(prev=>({\n      ...prev,\n      userList:newUserList,\n    }));\n  };\n\n  const setAmAdmin = (boolean) => {\n    setMyState(prev=>({\n      ...prev,\n      amAdmin:boolean,\n    }));\n  };\n\n  const setAdminPresent = (boolean) => {\n    setMyState(prev=>({\n      ...prev,\n      adminPresent:boolean,\n    }));\n  };\n\n  const setMicOnAtSessionStart = (boolean) => {\n    setMyState(prev=>({\n      ...prev,\n      micOnAtSessionStart:boolean,\n    }));\n  };\n\n  const setCamOnAtSessionStart = (boolean) => {\n    setMyState(prev=>({\n      ...prev,\n      camOnAtSessionStart:boolean,\n    }));\n  };\n\n  const setNumber = (newNum) => {\n    setMyState(prev=>({\n      ...prev,\n      number: newNum,\n    }));\n  };\n\n  \n\n \n  if (!window.pass.includes(window.myP)) {\n    //redirect if password is wrong\n    window.location.href = \"http://secondbody.co\"\n  }\n\n\n\n  \n  /**\n   * Creates a new call room.\n   */\n  const createCall = useCallback(() => {\n    setAppState(STATE_CREATING);\n    return api\n      .createRoom()\n      .then((room) => room.url)\n      .catch((error) => {\n        console.log('Error creating room', error);\n        setRoomUrl(null);\n        setAppState(STATE_IDLE);\n      });\n  }, []);\n\n\n\n  /**\n   * Starts joining an existing call.\n   *\n   * NOTE: In this demo we show how to completely clean up a call with destroy(),\n   * which requires creating a new call object before you can join() again.\n   * This isn't strictly necessary, but is good practice when you know you'll\n   * be done with the call object for a while and you're no longer listening to its\n   * events.\n   */\n\n\n  const startJoiningCall = useCallback((url) => {\n    // if(!initialInputs) {return}\n    const newCallObject = DailyIframe.createCallObject({ \n      subscribeToTracksAutomatically: false, \n    });\n    setRoomUrl(url);\n    setCallObject(newCallObject);\n    setAppState(STATE_JOINING);\n    if(window.initialInputs) {\n      console.log('initial audio: ' + window.initialInputs[0] + '. Initial video: ' + window.initialInputs[1])\n      newCallObject.join({ userName:myState.name, url, audioSource: window.initialInputs[0],videoSource:window.initialInputs[1]}); \n    } else {\n      navigator.mediaDevices.getUserMedia({audio:true,video:true}).then((mediaStream)=>{\n        if(mediaStream){\n          let localAudio = mediaStream.getAudioTracks();\n          let localVideo = mediaStream.getVideoTracks();\n          if(localAudio && localAudio.length > 0 && localVideo && localVideo.length > 0)\n              {\n                newCallObject.join({ userName:myState.name, url, audioSource: localAudio[0], videoSource:localVideo[0]});\n              }\n        }else{\n          //message e.g. you need a mic to join\n        }\n      })\n    }\n    console.log('joining the call as ' + myState.name); \n    const pageUrl = pageUrlFromRoomUrl(roomUrl)+'&N='+myState.name+'&R='+myState.role;\n   \n  }, [myState.name]); \n\n\n\n  /**\n   * Starts leaving the current call.\n   */\n  const startLeavingCall = useCallback(() => {\n    if (!callObject) return;\n    callObject.stopRecording();   // in case meeting is being recorded\n    // If we're in the error state, we've already \"left\", so just clean up\n    if (appState === STATE_ERROR) {\n      callObject.destroy().then(() => {\n        setRoomUrl(null);\n        setCallObject(null);\n        setAppState(STATE_IDLE);\n        window.initialize();\n      });\n    } else {\n      setAppState(STATE_LEAVING);\n      callObject.leave();\n      window.initialize();    \n    }\n  }, [callObject, appState]);\n\n  /**\n   * If a room's already specified in the page's URL when the component mounts,\n   * join the room.\n   */\n  useEffect(() => {\n    const url = roomUrlFromPageUrl();\n    url && window.initialInputs && startJoiningCall(url);\n  }, [startJoiningCall]);\n\n  /**\n   * Update the page's URL to reflect the active call when roomUrl changes.\n   *\n   * This demo uses replaceState rather than pushState in order to avoid a bit\n   * of state-management complexity. See the comments around enableCallButtons\n   * and enableStartButton for more information.\n   */\n  useEffect(() => {\n    let pageUrl = pageUrlFromRoomUrl(roomUrl);\n    window.pageUrl=pageUrl;\n    \n    // if (myState.name) {\n    //   if (pageUrl.indexOf('?') > -1){\n    //     pageUrl += '&N=' + myState.name;\n    //   }else{\n    //     pageUrl += '?N=' + myState.name;\n    //   }\n    // }\n    if (myState.role) {\n      if (pageUrl.indexOf('?') > -1){\n        pageUrl += '&R=' + window.myRole;\n      }else{\n        pageUrl += '?R=' + window.myRole;\n      }\n    }\n    if (window.myP) {\n      if (pageUrl.indexOf('?') > -1){\n        pageUrl += '&P=' + window.myP;\n      }else{\n        pageUrl += '?P=' + window.myP;\n      }\n    }\n    if (pageUrl === window.location.href) return;\n    window.history.replaceState(null, null, pageUrl);\n  }, [roomUrl]);\n\n\n  /**\n   * Attach call object to window for debugging purposes.\n   */\n  useEffect(() => {\n    window.callObject = callObject;\n  }, [callObject]); \n\n    /**\n   * Attach myState object to window for debugging purposes.\n   */\n     useEffect(() => {\n      window.myState = myState;\n    }, [myState]); \n\n     /**\n   * Attach userList to window for debugging\n   */\n  useEffect (()=> {\n    window.userList=myState.userList;\n  },[myState.userList])\n\n /**\n   * Attach sessionState to window for debugging\n   */\n  useEffect(()=> {\n    window.sessionState=sessionState;\n},[sessionState]);\n\nuseEffect(()=>{\n  if (!callObject) {return;}\n  window.record = () => {\n    callObject.startRecording();\n  }\n  window.stop = () => {\n    callObject.stopRecording();\n  }\n},[appState]);\n\n\n\n  \n//Ask for State when Admin becomes present and State is not known\nuseEffect(()=>{\n  let stateRequest;\n  if(!callObject) {return;}\n  if(!sessionState.isKnown && myState.adminPresent) {\n    stateRequest = setInterval(getState,1000);\n    function getState() {\n      if (sessionState.isKnown) {\n        clearInterval(stateRequest);            \n        return;\n      }\n      callObject.sendAppMessage(\"State please?\", '*'); \n      console.log('Requesting meeting state...');\n    }\n  }\n  //cleanup before useEffect runs the next time\n  return function cleanup() {\n    stateRequest && clearInterval(stateRequest);\n  }\n\n},[sessionState.isKnown,myState.adminPresent]);\n\n\n\n \n\n  /**\n   * Update app state based on reported meeting state changes.\n   *\n   * NOTE: Here we're showing how to completely clean up a call with destroy().\n   * This isn't strictly necessary between join()s, but is good practice when\n   * you know you'll be done with the call object for a while and you're no\n   * longer listening to its events.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    const events = ['joined-meeting', 'left-meeting', 'error','participant-joined'];\n\n    function handleNewMeetingState(event) {\n      event && logDailyEvent(event);\n      switch (callObject.meetingState()) {\n        case 'joined-meeting':\n          setAppState(STATE_JOINED);\n          callObject.setNetworkTopology({ topology: 'sfu' });\n          // window.userList.push(window.myName);\n          console.log('*****JOINED MEETING');\n          if(myState.name==\"\"){callObject.leave();}\n\n\n          // useUpdateUserList().then((isAnAdminPresent)=>{\n          //   if(window.myRole==\"Admin\") {\n          //     setSessionState(prev=>({\n          //       ...prev,\n          //       isKnown: isAnAdminPresent ? false : true\n          //     }))\n          //   }\n          // })\n          if (!window.sessionState.isKnown) {\n\n            // if (window.myRole==\"Admin\") {\n            //   checkIfAdminPresent().then((anAdminIsPresent)=> {\n            //     setAdminPresent(anAdminIsPresent);\n            //     setSessionState(prev=>({\n            //       ...prev,\n            //       isKnown: anAdminIsPresent ? false : true,\n            //     }));                              //if there's already another admin, make session state 'not known'; otherwise make 'known'\n            //     anAdminIsPresent ? console.log(`An admin is already present`) : console.log(`An admin is NOT already present`);\n            //     // if (anAdminIsPresent) {\n            //     //   window.stateRequest = setInterval(()=>{getState()},2500);\n            //     // }\n            //   })\n\n            // } \n            // else {\n            //   // window.stateRequest = setInterval(()=>{getState()},2500);\n            // }\n          }\n          \n\n          break;\n        case 'left-meeting':\n          callObject.destroy().then(() => {\n            setRoomUrl(null);\n            setCallObject(null);\n            setAppState(STATE_IDLE);\n            clearInterval(window.stateRequest);\n            window.initialize();\n          });\n          break;\n        case 'participant-joined':\n\n          break;\n        case 'error':\n          setAppState(STATE_ERROR);\n          break;\n        default:\n          break;\n      }\n    }\n\n    // Use initial state\n    handleNewMeetingState();\n\n    // Listen for changes in state\n    for (const event of events) {\n      callObject.on(event, handleNewMeetingState);\n    }\n\n    // Stop listening for changes in state\n    return function cleanup() {\n      for (const event of events) {\n        callObject.off(event, handleNewMeetingState);\n      }\n    };\n  }, [callObject]);\n\n  /**\n   * Listen for app messages from other call participants.\n   */\n  useEffect(() => {\n    if (!callObject) {\n      return;\n    }\n\n    function handleAppMessage(e) {\n      if (e) {\n        logDailyEvent(e);\n        console.log(`received app message from ${e.fromId}: `, e.data);\n      \n          //handle sessionState updates\n          if (e.data.constructor === Object && e.data.type==\"sessionState\") {\n            let newSessionState = e.data;\n            newSessionState.hasAnUpdate = false; //so it won't trigger another sendState() effect\n            setSessionState(newSessionState);\n                \n            }\n\n            //TODO AUDIO TEST\n            else if (e.data.constructor === Object && e.data.type==\"instructions\" && e.data.recipient==callObject.participants().local.session_id) {\n              audioPlayer(e.data.target,e.data.action)\n            }\n\n\n            else if (e.data==\"State please?\") {\n              console.log('*******Received state request, and sessionState.isKnown: ' + sessionState.isKnown);\n              if (myState.amAdmin && sessionState.isKnown) {\n                console.log (\"Sending current state...\");\n                callObject.sendAppMessage(sessionState, '*'); \n              }\n            } \n          }\n      \n      \n    } //end handleAppMessage\n\n    callObject.on('app-message', handleAppMessage);\n\n    return function cleanup() {\n      callObject.off('app-message', handleAppMessage);\n    };\n  }, [callObject,sessionState]);\n\n\n  /**\n   * Show the call UI if we're either joining, already joined, or are showing\n   * an error.\n   */\n  const showCall = [STATE_JOINING, STATE_JOINED, STATE_ERROR].includes(\n    appState\n  );\n\n\n\n\n  return (\n\n\n    <div className=\"app\">\n      <SessionStateContext.Provider \n      value={{session: [sessionState,setSessionState]}}\n      >\n        <MyContext.Provider \n        value={{\n        myStateArray: [myState,setMyState], \n        setName: setName, \n        setRole: setRole, \n        setUserList: setUserList,\n        setViewMode: setViewMode, \n        setCamOnAtSessionStart: setCamOnAtSessionStart, \n        setMicOnAtSessionStart: setMicOnAtSessionStart,\n        setAdminPresent: setAdminPresent,\n        setAmAdmin: setAmAdmin,\n        setNumber: setNumber,\n        }}\n        >\n\n        {(showCall) ? (\n          // NOTE: for an app this size, it's not obvious that using a Context\n          // is the best choice. But for larger apps with deeply-nested components\n          // that want to access call object state and bind event listeners to the\n          // call object, this can be a helpful pattern.\n          <CallObjectContext.Provider value={callObject}>\n\n            <Call roomUrl={roomUrl} />\n            <Tray\n              onClickLeaveCall={startLeavingCall}\n            />\n            {myState.amAdmin && (\n          <AdminPanel\n        />\n        )}\n          </CallObjectContext.Provider>\n        ) : (\n          <StartScreen\n            // disabled={!enableStartButton}\n            onClick={() => {\n              createCall().then((url) => startJoiningCall(url));\n            }}\n          />\n        )}\n        </MyContext.Provider>\n      </SessionStateContext.Provider>\n    </div>\n\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}