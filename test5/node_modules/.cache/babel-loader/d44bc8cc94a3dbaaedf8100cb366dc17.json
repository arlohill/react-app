{"ast":null,"code":"import _regeneratorRuntime from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var newRoomEndpoint='`${window.location.origin}/api/rooms`';/**\n * Create a short-lived room for demo purposes.\n *\n * It uses the redirect proxy as specified in netlify.toml`\n * This will work locally if you following the Netlify specific instructions\n * in README.md\n *\n * See https://docs.daily.co/reference#create-room for more information on how\n * to use the Daily REST API to create rooms and what options are available. \n */function createRoom(){return _createRoom.apply(this,arguments);}function _createRoom(){_createRoom=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",{url:\"https://secondbody.daily.co/react-test-room-2\"});case 1:case\"end\":return _context.stop();}}},_callee);}));return _createRoom.apply(this,arguments);}export default{createRoom:createRoom};","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test4/src/api.js"],"names":["newRoomEndpoint","createRoom","url"],"mappings":"+UAAA,GAAMA,CAAAA,eAAe,CACnB,uCADF,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,QACeC,CAAAA,U,wIAAf,mKAkBS,CAAEC,GAAG,CAAE,+CAAP,CAlBT,wD,6CAqBA,cAAe,CAAED,UAAU,CAAVA,UAAF,CAAf","sourcesContent":["const newRoomEndpoint =\n  '`${window.location.origin}/api/rooms`';\n\n/**\n * Create a short-lived room for demo purposes.\n *\n * It uses the redirect proxy as specified in netlify.toml`\n * This will work locally if you following the Netlify specific instructions\n * in README.md\n *\n * See https://docs.daily.co/reference#create-room for more information on how\n * to use the Daily REST API to create rooms and what options are available. \n */\nasync function createRoom() {\n\n  // const exp = Math.round(Date.now() / 1000) + 60 * 30;\n  // const options = {\n  //   properties: {\n  //     exp: exp,\n  //     enable_recording: true,\n  //   },\n  // };\n  // let response = await fetch(newRoomEndpoint, {\n  //   method: \"POST\",\n  //   body: JSON.stringify(options),\n  //   mode: 'cors',\n  // }),\n  //   room = await response.json();\n  // return room;\n\n  // Comment out the above and uncomment the below, using your own URL\n  return { url: \"https://secondbody.daily.co/react-test-room-2\" };\n}\n\nexport default { createRoom };"]},"metadata":{},"sourceType":"module"}