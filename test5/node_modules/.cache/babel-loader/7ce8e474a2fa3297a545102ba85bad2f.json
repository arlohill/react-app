{"ast":null,"code":"import { useContext, useEffect } from \"react\";\nimport SessionStateContext from '../SessionStateContext';\nimport MyContext from '../MyContext';\nimport CallObjectContext from '../CallObjectContext';\nexport default function useUpdateUserList() {\n  let userListIncludesAdmin = false; //default\n\n  let ps = callObject.participants();\n  let workingUserList = {\n    names: [],\n    sessionIdFor: {}\n  };\n\n  for (const p in ps) {\n    let thisUserName = ps[p].user_name;\n    let thisSessionId = ps[p].session_id;\n    workingUserList.names.push(thisUserName); //add each user_name with its sessionID to UserList\n\n    workingUserList.sessionIdFor[thisUserName] = thisSessionId;\n\n    if (thisUserName.includes('_Admin') && p !== 'local') {\n      userListIncludesAdmin = true;\n    }\n  }\n\n  ;\n  userListIncludesAdmin ? console.log('Admin IS present') : console.log('Admin IS NOT present'); // setAdminPresent(userListIncludesAdmin);\n\n  workingUserList.names.sort(); //alphebetize that list \n\n  console.log(`now the userList is: ${workingUserList.names}`); //print userList\n  // setUserList(workingUserList);\n\n  return userListIncludesAdmin;\n}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test4/src/hooks/useUpdateUserList.js"],"names":["useContext","useEffect","SessionStateContext","MyContext","CallObjectContext","useUpdateUserList","userListIncludesAdmin","ps","callObject","participants","workingUserList","names","sessionIdFor","p","thisUserName","user_name","thisSessionId","session_id","push","includes","console","log","sort"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAKxC,MAAIC,qBAAqB,GAAC,KAA1B,CALwC,CAKL;;AACnC,MAAIC,EAAE,GAACC,UAAU,CAACC,YAAX,EAAP;AACA,MAAIC,eAAe,GAAG;AAClBC,IAAAA,KAAK,EAAE,EADW;AAElBC,IAAAA,YAAY,EAAE;AAFI,GAAtB;;AAKA,OAAK,MAAMC,CAAX,IAAgBN,EAAhB,EAAoB;AAChB,QAAIO,YAAY,GAAGP,EAAE,CAACM,CAAD,CAAF,CAAME,SAAzB;AACA,QAAIC,aAAa,GAAGT,EAAE,CAACM,CAAD,CAAF,CAAMI,UAA1B;AACAP,IAAAA,eAAe,CAACC,KAAhB,CAAsBO,IAAtB,CAA2BJ,YAA3B,EAHgB,CAG+B;;AAC/CJ,IAAAA,eAAe,CAACE,YAAhB,CAA6BE,YAA7B,IAA6CE,aAA7C;;AACA,QAAIF,YAAY,CAACK,QAAb,CAAsB,QAAtB,KAAmCN,CAAC,KAAG,OAA3C,EAAoD;AAChDP,MAAAA,qBAAqB,GAAG,IAAxB;AACH;AACJ;;AAAA;AAEDA,EAAAA,qBAAqB,GAAGc,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAH,GAAqCD,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAA1D,CAtBwC,CAuBxC;;AACAX,EAAAA,eAAe,CAACC,KAAhB,CAAsBW,IAAtB,GAxBwC,CAwBJ;;AACpCF,EAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBX,eAAe,CAACC,KAAM,EAA1D,EAzBwC,CAyBuB;AAC/D;;AAEA,SAAOL,qBAAP;AAEH","sourcesContent":["import { useContext, useEffect } from \"react\";\nimport SessionStateContext from '../SessionStateContext';\nimport MyContext from '../MyContext';\nimport CallObjectContext from '../CallObjectContext'\n\nexport default function useUpdateUserList() {\n\n    \n\n\n    let userListIncludesAdmin=false;   //default\n    let ps=callObject.participants(); \n    let workingUserList = {\n        names: [],\n        sessionIdFor: {},\n        }\n\n    for (const p in ps) {\n        let thisUserName = ps[p].user_name;\n        let thisSessionId = ps[p].session_id;\n        workingUserList.names.push(thisUserName);      //add each user_name with its sessionID to UserList\n        workingUserList.sessionIdFor[thisUserName] = thisSessionId;\n        if (thisUserName.includes('_Admin') && p!=='local') {\n            userListIncludesAdmin = true;\n        } \n    };\n\n    userListIncludesAdmin ? console.log('Admin IS present') : console.log('Admin IS NOT present');\n    // setAdminPresent(userListIncludesAdmin);\n    workingUserList.names.sort();       //alphebetize that list \n    console.log(`now the userList is: ${workingUserList.names}`);  //print userList\n    // setUserList(workingUserList);\n    \n    return(userListIncludesAdmin);\n\n} "]},"metadata":{},"sourceType":"module"}