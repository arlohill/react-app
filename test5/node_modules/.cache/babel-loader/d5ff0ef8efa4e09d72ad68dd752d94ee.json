{"ast":null,"code":"var _jsxFileName = \"/Users/arlosb/Documents/GitHub/new react app/test5/src/components/Livestorm/Tray/Tray.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './Tray.css';\nimport TrayButton, { TYPE_MUTE_CAMERA, TYPE_MUTE_MIC, TYPE_SCREEN, TYPE_LEAVE, TYPE_CHAT, TYPE_REC } from '../TrayButton/TrayButton';\nimport InputSelector from '../InputSelector/InputSelector';\nimport Chat from '../Chat/Chat';\nimport CallObjectContext from '../../../CallObjectContext';\nimport { logDailyEvent } from '../../../logUtils';\nimport DailyIframe from '@daily-co/daily-js';\nimport MyContext from '../../../MyContext';\nimport SessionStateContext from '../../../SessionStateContext';\n\nfunction useForceUpdate() {\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => value + 1); // update the state to force render\n}\n/**\n * Gets [isCameraMuted, isMicMuted, isSharingScreen].\n * This function is declared outside Tray() so it's not recreated every render\n * (which would require us to declare it as a useEffect dependency).\n */\n\n\nfunction getStreamStates(callObject) {\n  let isCameraMuted,\n      isMicMuted,\n      isSharingScreen = false;\n\n  if (callObject && callObject.participants() && callObject.participants().local) {\n    const localParticipant = callObject.participants().local;\n    isCameraMuted = !localParticipant.video;\n    isMicMuted = !localParticipant.audio;\n    isSharingScreen = localParticipant.screen;\n  }\n\n  return [isCameraMuted, isMicMuted, isSharingScreen];\n}\n/**\n * Props:\n * - onClickLeaveCall: () => ()\n * - disabled: boolean\n */\n\n\nexport default function Tray(props) {\n  const callObject = useContext(CallObjectContext);\n  const {\n    session\n  } = useContext(SessionStateContext);\n  const [sessionState, setSessionState] = session;\n  const {\n    myStateArray,\n    setName,\n    setRole,\n    setUserList,\n    setViewMode,\n    setCamOnAtSessionStart,\n    setMicOnAtSessionStart,\n    setAmAdmin\n  } = useContext(MyContext);\n  const [myState, setMyState] = myStateArray;\n  const [isCameraMuted, setCameraMuted] = useState(false);\n  const [isMicMuted, setMicMuted] = useState(false);\n  const [isSharingScreen, setSharingScreen] = useState(false);\n  const [displayChat, setChatDisplay] = useState(false);\n  const [highlightedChat, setChatHighlight] = useState(false);\n  const forceUpdate = useForceUpdate();\n  const micCaret = React.createRef();\n  const micSettings = React.createRef();\n  const camCaret = React.createRef();\n  const camSettings = React.createRef();\n\n  window.updateTray = () => {\n    forceUpdate();\n  };\n\n  const [showMicSettings, setShowMicSettings] = useState(false);\n  const [showCamSettings, setShowCamSettings] = useState(false);\n\n  function toggleCamera() {\n    callObject.setLocalVideo(isCameraMuted);\n  }\n\n  function toggleMic() {\n    callObject.setLocalAudio(isMicMuted);\n  }\n\n  function screenAlreadyShared() {\n    let screenShareExists = false;\n    let ps = callObject.participants();\n\n    for (const p in ps) {\n      if (!!ps[p].screenVideoTrack) {\n        screenShareExists = true;\n      }\n\n      ;\n    }\n\n    return screenShareExists;\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return function cleanup() {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  const handleClickOutside = event => {\n    console.log('handling click');\n\n    if (micSettings.current && !micSettings.current.contains(event.target) && !micCaret.current.contains(event.target)) {\n      setShowMicSettings(false);\n    } else if (camSettings.current && !camSettings.current.contains(event.target) && !camCaret.current.contains(event.target)) {\n      setShowCamSettings(false);\n    }\n  };\n\n  function toggleSharingScreen() {\n    if (!isSharingScreen && screenAlreadyShared()) {\n      alert(`There is already a screenshare in progress`);\n      return;\n    }\n\n    isSharingScreen ? callObject.stopScreenShare() : callObject.startScreenShare();\n  }\n\n  function leaveCall() {\n    props.onClickLeaveCall && props.onClickLeaveCall();\n  }\n\n  function toggleChat() {\n    setChatDisplay(!displayChat);\n\n    if (highlightedChat) {\n      setChatHighlight(!highlightedChat);\n    }\n  }\n\n  function handleNewChat() {\n    setChatHighlight(!highlightedChat);\n  }\n\n  function openScreenShareWindow() {\n    window.open(\"http://\" + window.location.host + \"/share\", \"test\", \"width=300, height=300\");\n  }\n  /**\n  * Start listening for changes on sessionState, to turn cam + mic on and off\n  //  */\n\n\n  useEffect(() => {\n    if (sessionState.isActive) {\n      if (!myState.role.includes('Shadow') && !myState.role.includes('Seller') && !myState.role.includes('Buyer')) {\n        setMicOnAtSessionStart(callObject.localAudio()); //\"remember\" if cam + mic were on or off before session started\n\n        setCamOnAtSessionStart(callObject.localVideo());\n        callObject.setLocalAudio(false);\n        callObject.setLocalVideo(false);\n      }\n    } else if (!sessionState.isActive) {\n      !callObject.localAudio() && callObject.setLocalAudio(myState.micOnAtSessionStart);\n      !callObject.localVideo() && callObject.setLocalVideo(myState.camOnAtSessionStart);\n      setMicOnAtSessionStart(null);\n      setCamOnAtSessionStart(null);\n    }\n  }, [sessionState.isActive, myState.role]);\n  /**\n  * Turn mic on and off when \n  //  */\n\n  /**\n   * Start listening for participant changes when callObject is set (i.e. when the component mounts).\n   * This event will capture any changes to your audio/video mute state.\n   */\n\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleNewParticipantsState(event) {\n      event && logDailyEvent(event);\n      const [isCameraMuted, isMicMuted, isSharingScreen] = getStreamStates(callObject);\n      setCameraMuted(isCameraMuted);\n      setMicMuted(isMicMuted);\n      setSharingScreen(isSharingScreen);\n    } // Use initial state\n\n\n    handleNewParticipantsState(); // Listen for changes in state\n\n    callObject.on('participant-updated', handleNewParticipantsState); // Stop listening for changes in state\n\n    return function cleanup() {\n      callObject.off('participant-updated', handleNewParticipantsState);\n    };\n  }, [callObject]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: myState.amAdmin && myState.sidebar ? \"tray-with-sidebar\" : \"tray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TrayButton, {\n    type: TYPE_MUTE_CAMERA // disabled={props.camDisabled}\n    ,\n    highlighted: isCameraMuted,\n    onClick: toggleCamera,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => {\n      setShowCamSettings(!showCamSettings);\n    },\n    style: {\n      position: 'absolute',\n      left: '57px',\n      bottom: '23px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"caret\",\n    ref: camCaret,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, \"^\"), showCamSettings ? /*#__PURE__*/React.createElement(InputSelector, {\n    type: \"video\",\n    page: \"main\",\n    ref: camSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 18\n    }\n  }) : null), /*#__PURE__*/React.createElement(TrayButton, {\n    type: TYPE_MUTE_MIC // disabled={props.micDisabled}\n    ,\n    highlighted: isMicMuted,\n    onClick: toggleMic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => {\n      setShowMicSettings(!showMicSettings);\n    },\n    style: {\n      position: 'absolute',\n      left: '123px',\n      bottom: '23px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"caret\",\n    ref: micCaret,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, \"^\"), showMicSettings ? /*#__PURE__*/React.createElement(InputSelector, {\n    type: \"audio\",\n    page: \"main\",\n    ref: micSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 18\n    }\n  }) : null), DailyIframe.supportedBrowser().supportsScreenShare && myState.amAdmin && /*#__PURE__*/React.createElement(TrayButton, {\n    type: TYPE_SCREEN // disabled={props.disabled}\n    ,\n    highlighted: isSharingScreen // onClick={openScreenShareWindow} //LIVESTORM PILOT CHANGE: deleted video share\n    ,\n    onClick: toggleSharingScreen //LIVESTORM PILOT CHANGE: added normal screenshare\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TrayButton, {\n    type: TYPE_CHAT // disabled={props.disabled}\n    ,\n    highlighted: highlightedChat,\n    onClick: toggleChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Chat, {\n    onClickDisplay: displayChat,\n    notification: handleNewChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, \"Roleplay:  \\xA0\", sessionState.isActive ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display-card active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 31\n    }\n  }, \"Live\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display-card paused\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 31\n    }\n  }, \"Paused\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vertical-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }), !sessionState.isActive || myState.role !== 'Admin' && myState.role !== 'Attendee' ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 23\n    }\n  }, \"My Role: \\xA0\", myState.role == 'Admin' || myState.role == 'Attendee' ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"display-card role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 31\n    }\n  }, \"Viewer\") : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"display-card role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 31\n    }\n  }, myState.role.match(/\\D/g).join(''))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }, \"My View: \\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    style: {\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"my-view-selector\",\n    value: myState.viewMode,\n    onChange: e => setViewMode(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Seller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 41\n    }\n  }, \"Seller\"), sessionState.roleOf.Shadow1 && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Shadow1\",\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 73\n    }\n  }, \"Shadow 1\"), sessionState.roleOf.Shadow2 && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Shadow2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 73\n    }\n  }, \"Shadow 2\"), sessionState.roleOf.Shadow3 && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Shadow3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 73\n    }\n  }, \"Shadow 3\"), sessionState.roleOf.Shadow4 && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Shadow4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 73\n    }\n  }, \"Shadow 4\"), sessionState.roleOf.Shadow5 && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Shadow5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 73\n    }\n  }, \"Shadow 5\"), sessionState.roleOf.Shadow6 && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Shadow6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 73\n    }\n  }, \"Shadow 6\"), sessionState.roleOf.Seller && sessionState.roleOf.Shadow1 && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 103\n    }\n  }, \"All\"), sessionState.roleOf.Shadow1 || sessionState.roleOf.Shadow2 || sessionState.roleOf.Shadow3 || sessionState.roleOf.Shadow4 || sessionState.roleOf.Shadow5 || sessionState.roleOf.Shadow6 && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 43\n    }\n  }, \"All\"))))))), /*#__PURE__*/React.createElement(TrayButton, {\n    type: TYPE_REC,\n    disabled: props.disabled,\n    newButtonGroup: true,\n    highlighted: true,\n    onClick: leaveCall,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test5/src/components/Livestorm/Tray/Tray.js"],"names":["React","useContext","useEffect","useState","TrayButton","TYPE_MUTE_CAMERA","TYPE_MUTE_MIC","TYPE_SCREEN","TYPE_LEAVE","TYPE_CHAT","TYPE_REC","InputSelector","Chat","CallObjectContext","logDailyEvent","DailyIframe","MyContext","SessionStateContext","useForceUpdate","value","setValue","getStreamStates","callObject","isCameraMuted","isMicMuted","isSharingScreen","participants","local","localParticipant","video","audio","screen","Tray","props","session","sessionState","setSessionState","myStateArray","setName","setRole","setUserList","setViewMode","setCamOnAtSessionStart","setMicOnAtSessionStart","setAmAdmin","myState","setMyState","setCameraMuted","setMicMuted","setSharingScreen","displayChat","setChatDisplay","highlightedChat","setChatHighlight","forceUpdate","micCaret","createRef","micSettings","camCaret","camSettings","window","updateTray","showMicSettings","setShowMicSettings","showCamSettings","setShowCamSettings","toggleCamera","setLocalVideo","toggleMic","setLocalAudio","screenAlreadyShared","screenShareExists","ps","p","screenVideoTrack","document","addEventListener","handleClickOutside","cleanup","removeEventListener","event","console","log","current","contains","target","toggleSharingScreen","alert","stopScreenShare","startScreenShare","leaveCall","onClickLeaveCall","toggleChat","handleNewChat","openScreenShareWindow","open","location","host","isActive","role","includes","localAudio","localVideo","micOnAtSessionStart","camOnAtSessionStart","handleNewParticipantsState","on","off","amAdmin","sidebar","position","left","bottom","supportedBrowser","supportsScreenShare","height","match","join","border","viewMode","e","roleOf","Shadow1","Shadow2","Shadow3","Shadow4","Shadow5","Shadow6","Seller","disabled"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport './Tray.css';\nimport TrayButton, {\n  TYPE_MUTE_CAMERA,\n  TYPE_MUTE_MIC,\n  TYPE_SCREEN,\n  TYPE_LEAVE,\n  TYPE_CHAT,\n  TYPE_REC,\n} from '../TrayButton/TrayButton';\nimport InputSelector from '../InputSelector/InputSelector';\nimport Chat from '../Chat/Chat';\nimport CallObjectContext from '../../../CallObjectContext';\nimport { logDailyEvent } from '../../../logUtils';\nimport DailyIframe from '@daily-co/daily-js';\nimport MyContext from '../../../MyContext';\nimport SessionStateContext from '../../../SessionStateContext';\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n/**\n * Gets [isCameraMuted, isMicMuted, isSharingScreen].\n * This function is declared outside Tray() so it's not recreated every render\n * (which would require us to declare it as a useEffect dependency).\n */\nfunction getStreamStates(callObject) {\n  let isCameraMuted,\n    isMicMuted,\n    isSharingScreen = false;\n  if (\n    callObject &&\n    callObject.participants() &&\n    callObject.participants().local\n  ) {\n    const localParticipant = callObject.participants().local;\n    isCameraMuted = !localParticipant.video;\n    isMicMuted = !localParticipant.audio;\n    isSharingScreen = localParticipant.screen;\n  }\n  return [isCameraMuted, isMicMuted, isSharingScreen];\n}\n\n\n/**\n * Props:\n * - onClickLeaveCall: () => ()\n * - disabled: boolean\n */\nexport default function Tray(props) {\n  const callObject = useContext(CallObjectContext);\n  const { session } = useContext(SessionStateContext);\n  const [ sessionState,setSessionState] = session;\n  const { myStateArray, \n    setName, \n    setRole,\n    setUserList,\n    setViewMode,\n    setCamOnAtSessionStart,\n    setMicOnAtSessionStart,\n    setAmAdmin, \n  } = useContext(MyContext);\nconst [ myState,setMyState ] = myStateArray;\n  const [isCameraMuted, setCameraMuted] = useState(false);\n  const [isMicMuted, setMicMuted] = useState(false);\n  const [isSharingScreen, setSharingScreen] = useState(false);\n  const [displayChat, setChatDisplay] = useState(false);\n  const [highlightedChat, setChatHighlight] = useState(false);\n  const forceUpdate = useForceUpdate();\n  const micCaret = React.createRef();\n  const micSettings = React.createRef();\n  const camCaret = React.createRef();\n  const camSettings = React.createRef();\n  \n\n  window.updateTray = () => {\n    forceUpdate();\n  }\n\n  const [showMicSettings,setShowMicSettings] = useState(false);\n  const [showCamSettings,setShowCamSettings] = useState(false);\n\n\n  function toggleCamera() {\n    callObject.setLocalVideo(isCameraMuted);\n  }\n\n  function toggleMic() {\n    callObject.setLocalAudio(isMicMuted);\n  }\n\n  function screenAlreadyShared() {\n    let screenShareExists = false;\n    let ps = callObject.participants();\n    for (const p in ps) {\n      if(!!ps[p].screenVideoTrack) {screenShareExists=true};\n    }\n    return screenShareExists;\n  }\n  \n\n\n  useEffect(()=> {\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n\n return function cleanup() {\n    document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  })\n\n  const handleClickOutside = (event) => {\n    console.log('handling click');\n    if (micSettings.current &&\n      !micSettings.current.contains(event.target) &&\n      !micCaret.current.contains(event.target)\n    ) {\n      setShowMicSettings(false);\n    } else if (camSettings.current &&\n      !camSettings.current.contains(event.target) &&\n      !camCaret.current.contains(event.target)\n    ) {\n      setShowCamSettings(false);\n    } \n    \n  }\n\n  function toggleSharingScreen() {\n    if(!isSharingScreen && screenAlreadyShared()) {\n      alert(`There is already a screenshare in progress`);\n      return;\n    }\n    isSharingScreen\n      ? callObject.stopScreenShare()\n      : callObject.startScreenShare();\n  }\n\n    \n\n  function leaveCall() {\n    props.onClickLeaveCall && props.onClickLeaveCall();\n  }\n\n  function toggleChat() {\n    setChatDisplay(!displayChat);\n    if (highlightedChat) {\n      setChatHighlight(!highlightedChat);\n    }\n  }\n\n  function handleNewChat() {\n    setChatHighlight(!highlightedChat);\n  }\n\n  function openScreenShareWindow () {\n    window.open(\"http://\" + window.location.host + \"/share\",\"test\",\"width=300, height=300\");\n  }\n\n\n   /**\n   * Start listening for changes on sessionState, to turn cam + mic on and off\n  //  */\n  useEffect(()=> {\n   if (sessionState.isActive) {\n      if (!myState.role.includes('Shadow') && !myState.role.includes('Seller') && !myState.role.includes('Buyer')) {\n        setMicOnAtSessionStart(callObject.localAudio());   //\"remember\" if cam + mic were on or off before session started\n        setCamOnAtSessionStart(callObject.localVideo());\n        callObject.setLocalAudio(false);\n        callObject.setLocalVideo(false);\n      }\n   } else if (!sessionState.isActive) {\n        !callObject.localAudio() && callObject.setLocalAudio(myState.micOnAtSessionStart);\n        !callObject.localVideo() && callObject.setLocalVideo(myState.camOnAtSessionStart);\n        setMicOnAtSessionStart(null);\n        setCamOnAtSessionStart(null);\n   }\n\n  },[sessionState.isActive,myState.role]);\n\n    /**\n   * Turn mic on and off when \n  //  */\n\n  /**\n   * Start listening for participant changes when callObject is set (i.e. when the component mounts).\n   * This event will capture any changes to your audio/video mute state.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleNewParticipantsState(event) {\n      event && logDailyEvent(event);\n      const [isCameraMuted, isMicMuted, isSharingScreen] = getStreamStates(\n        callObject\n      );\n      setCameraMuted(isCameraMuted);\n      setMicMuted(isMicMuted);\n      setSharingScreen(isSharingScreen);\n    }\n\n    // Use initial state\n    handleNewParticipantsState();\n\n    // Listen for changes in state\n    callObject.on('participant-updated', handleNewParticipantsState);\n\n    // Stop listening for changes in state\n    return function cleanup() {\n      callObject.off('participant-updated', handleNewParticipantsState);\n    };\n  }, [callObject]);\n\n\n\n  return (\n    <div className={myState.amAdmin && myState.sidebar ? \"tray-with-sidebar\" : \"tray\"}>\n\n      <TrayButton\n        type={TYPE_MUTE_CAMERA}\n        // disabled={props.camDisabled}\n        highlighted={isCameraMuted}\n        onClick={toggleCamera}\n      />\n      \n      {/* {!props.camDisabled && */}\n      <div onClick={()=>{setShowCamSettings(!showCamSettings)}}  style={{position:'absolute',left:'57px', bottom:'23px'}}>\n        <p className=\"caret\" ref={camCaret}>^</p>\n                {showCamSettings ? \n                (<InputSelector type='video' page='main' ref={camSettings}/>)\n                : \n                null}\n      </div>\n      {/* } */}\n      \n      <TrayButton\n        type={TYPE_MUTE_MIC}\n        // disabled={props.micDisabled}\n        highlighted={isMicMuted}\n        onClick={toggleMic}\n      />\n      {/* {!props.micDisabled && */}\n        <div onClick={()=>{setShowMicSettings(!showMicSettings)}}  style={{position:'absolute',left:'123px', bottom:'23px'}}>\n        \n\n        <p className=\"caret\" ref={micCaret}>^</p>\n                {showMicSettings ? \n                (<InputSelector type='audio' page='main' ref={micSettings}/>)\n                : \n                null}\n                \n        </div>\n      {/* } */}\n\n      {DailyIframe.supportedBrowser().supportsScreenShare && myState.amAdmin && (\n        <TrayButton\n          type={TYPE_SCREEN}\n          // disabled={props.disabled}\n          highlighted={isSharingScreen}\n          // onClick={openScreenShareWindow} //LIVESTORM PILOT CHANGE: deleted video share\n          onClick={toggleSharingScreen}      //LIVESTORM PILOT CHANGE: added normal screenshare\n        />\n      )}\n      <TrayButton\n        type={TYPE_CHAT}\n        // disabled={props.disabled}\n        highlighted={highlightedChat}\n        onClick={toggleChat}\n      />\n      <Chat onClickDisplay={displayChat} notification={handleNewChat} />\n      \n        \n\n\n\n      {/* Display room status and either my role or room selector +  */}\n          <div className='status-display'>\n\n            <div style={{height:'30px'}}>\n               Roleplay:  &nbsp;            \n                            {sessionState.isActive ? \n                              <div className='display-card active'>Live</div>\n                              :\n                              <div className='display-card paused'>Paused</div>\n                            }\n              </div>\n\n            <div className='vertical-line'></div>\n\n            {/* if session is paused or I have a role, display my role, otherwise show room selector */}\n            {!sessionState.isActive || (myState.role!=='Admin' && myState.role!=='Attendee')\n            \n                ?   ( <div style={{height:'30px'}}>\n                            My Role: &nbsp;\n                            {myState.role=='Admin' || myState.role=='Attendee' \n\n                            ? <span className='display-card role'> \n                                Viewer\n                              </span>\n                            : <span className='display-card role'> \n                                {myState.role.match(/\\D/g).join('')} \n                              </span>\n                            \n                            }\n                       </div>\n                    )\n            : ( <div className='my-view'>\n                        My View: &nbsp;\n                            <span > \n                              <form action = ''>\n                                <fieldset style={{border:'none'}}>\n                                    <select className='my-view-selector' value={myState.viewMode} onChange = {(e)=>setViewMode(e.target.value)}>\n                                        <option value = 'Seller'>Seller</option>\n                                        {sessionState.roleOf.Shadow1 && <option value = 'Shadow1' selected>Shadow 1</option>}\n                                        {sessionState.roleOf.Shadow2 && <option value = 'Shadow2'>Shadow 2</option>}\n                                        {sessionState.roleOf.Shadow3 && <option value = 'Shadow3'>Shadow 3</option>}\n                                        {sessionState.roleOf.Shadow4 && <option value = 'Shadow4'>Shadow 4</option>}\n                                        {sessionState.roleOf.Shadow5 && <option value = 'Shadow5'>Shadow 5</option>}\n                                        {sessionState.roleOf.Shadow6 && <option value = 'Shadow6'>Shadow 6</option>}\n                                        {sessionState.roleOf.Seller && sessionState.roleOf.Shadow1 && <option value = 'All'>All</option>}\n                                        {sessionState.roleOf.Shadow1 ||\n                                          sessionState.roleOf.Shadow2 ||\n                                          sessionState.roleOf.Shadow3 ||\n                                          sessionState.roleOf.Shadow4 ||\n                                          sessionState.roleOf.Shadow5 ||\n                                          sessionState.roleOf.Shadow6 &&\n                                          <option value = 'All'>All</option>}\n                                    </select>\n                                </fieldset>\n                              </form>\n                            </span>\n                  </div>\n              )\n            \n              \n            }\n                            \n          \n             \n\n\n          </div>\n     \n      {/* <div className='right-buttons'> */}\n            <TrayButton\n              type={TYPE_REC}\n              disabled={props.disabled}\n              newButtonGroup={true}\n              highlighted={true}\n              onClick={leaveCall}\n            />\n\n            {/* <TrayButton\n              type={TYPE_LEAVE}\n              disabled={props.disabled}\n              newButtonGroup={true}\n              highlighted={true}\n              onClick={leaveCall}\n            /> */}\n\n      {/* </div> */}\n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}