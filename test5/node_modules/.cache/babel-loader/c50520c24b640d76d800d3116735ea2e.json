{"ast":null,"code":"/*!\n * Mux Data\n * Copyright(c) 2018 Mux Inc.\n */\nconst Base = require('../base');\n\nconst Errors = require('../../src/data/resources/errors');\n\nconst Exports = require('../../src/data/resources/exports');\n\nconst Filters = require('../../src/data/resources/filters');\n\nconst Incidents = require('../../src/data/resources/incidents');\n\nconst Metrics = require('../../src/data/resources/metrics');\n\nconst RealTime = require('../../src/data/resources/real_time');\n\nconst VideoViews = require('../../src/data/resources/video_views');\n/**\n * @ignore\n * @extends Base\n * Data Class - Provides access to the Mux Data API\n *\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Data } = muxClient;\n *\n */\n\n\nclass Data extends Base {\n  /**\n   * Data Constructor\n   *\n   * @param {string} accessToken - Mux API Access Token\n   * @param {string} secret - Mux API secret\n   * @constructor\n   */\n  constructor(...params) {\n    super(...params);\n    /** @type {Errors} */\n\n    this.Errors = new Errors(this);\n    /** @type {Exports} */\n\n    this.Exports = new Exports(this);\n    /** @type {Filters} */\n\n    this.Filters = new Filters(this);\n    /** @type {Incidents} */\n\n    this.Incidents = new Incidents(this);\n    /** @type {Metrics} */\n\n    this.Metrics = new Metrics(this);\n    /** @type {RealTime} */\n\n    this.RealTime = new RealTime(this);\n    /** @type {VideoViews} */\n\n    this.VideoViews = new VideoViews(this);\n  }\n\n}\n\nmodule.exports = Data;","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test5/node_modules/@mux/mux-node/src/data/data.js"],"names":["Base","require","Errors","Exports","Filters","Incidents","Metrics","RealTime","VideoViews","Data","constructor","params","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,iCAAD,CAAtB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,kCAAD,CAAvB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,kCAAD,CAAvB;;AACA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,oCAAD,CAAzB;;AACA,MAAMK,OAAO,GAAGL,OAAO,CAAC,kCAAD,CAAvB;;AACA,MAAMM,QAAQ,GAAGN,OAAO,CAAC,oCAAD,CAAxB;;AACA,MAAMO,UAAU,GAAGP,OAAO,CAAC,sCAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMQ,IAAN,SAAmBT,IAAnB,CAAwB;AACtB;AACF;AACA;AACA;AACA;AACA;AACA;AACEU,EAAAA,WAAW,CAAC,GAAGC,MAAJ,EAAY;AACrB,UAAM,GAAGA,MAAT;AAEA;;AACA,SAAKT,MAAL,GAAc,IAAIA,MAAJ,CAAW,IAAX,CAAd;AAEA;;AACA,SAAKC,OAAL,GAAe,IAAIA,OAAJ,CAAY,IAAZ,CAAf;AAEA;;AACA,SAAKC,OAAL,GAAe,IAAIA,OAAJ,CAAY,IAAZ,CAAf;AAEA;;AACA,SAAKC,SAAL,GAAiB,IAAIA,SAAJ,CAAc,IAAd,CAAjB;AAEA;;AACA,SAAKC,OAAL,GAAe,IAAIA,OAAJ,CAAY,IAAZ,CAAf;AAEA;;AACA,SAAKC,QAAL,GAAgB,IAAIA,QAAJ,CAAa,IAAb,CAAhB;AAEA;;AACA,SAAKC,UAAL,GAAkB,IAAIA,UAAJ,CAAe,IAAf,CAAlB;AACD;;AA/BqB;;AAkCxBI,MAAM,CAACC,OAAP,GAAiBJ,IAAjB","sourcesContent":["/*!\n * Mux Data\n * Copyright(c) 2018 Mux Inc.\n */\n\nconst Base = require('../base');\nconst Errors = require('../../src/data/resources/errors');\nconst Exports = require('../../src/data/resources/exports');\nconst Filters = require('../../src/data/resources/filters');\nconst Incidents = require('../../src/data/resources/incidents');\nconst Metrics = require('../../src/data/resources/metrics');\nconst RealTime = require('../../src/data/resources/real_time');\nconst VideoViews = require('../../src/data/resources/video_views');\n\n/**\n * @ignore\n * @extends Base\n * Data Class - Provides access to the Mux Data API\n *\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Data } = muxClient;\n *\n */\nclass Data extends Base {\n  /**\n   * Data Constructor\n   *\n   * @param {string} accessToken - Mux API Access Token\n   * @param {string} secret - Mux API secret\n   * @constructor\n   */\n  constructor(...params) {\n    super(...params);\n\n    /** @type {Errors} */\n    this.Errors = new Errors(this);\n\n    /** @type {Exports} */\n    this.Exports = new Exports(this);\n\n    /** @type {Filters} */\n    this.Filters = new Filters(this);\n\n    /** @type {Incidents} */\n    this.Incidents = new Incidents(this);\n\n    /** @type {Metrics} */\n    this.Metrics = new Metrics(this);\n\n    /** @type {RealTime} */\n    this.RealTime = new RealTime(this);\n\n    /** @type {VideoViews} */\n    this.VideoViews = new VideoViews(this);\n  }\n}\n\nmodule.exports = Data;\n"]},"metadata":{},"sourceType":"script"}