{"ast":null,"code":"import _objectSpread from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _createForOfIteratorHelper from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from'react';import CallObjectContext from'../../CallObjectContext';import{logDailyEvent}from'../../logUtils';import'./AdminPanel.css';import audioPlayer from'../../hooks/AudioPlayer';import RoleSelector from'../RoleSelector/RoleSelector';import SessionStateContext from'../../SessionStateContext';import MyContext from'../../MyContext';function useForceUpdate(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];// integer state\nreturn function(){return setValue(function(value){return value+1;});};// update the state to force render\n}/**\n * Gets [isCameraMuted, isMicMuted, isSharingScreen].\n * This function is declared outside Tray() so it's not recreated every render\n * (which would require us to declare it as a useEffect dependency).\n */function getStreamStates(callObject){var isCameraMuted,isMicMuted,isSharingScreen=false;if(callObject&&callObject.participants()&&callObject.participants().local){var localParticipant=callObject.participants().local;isCameraMuted=!localParticipant.video;isMicMuted=!localParticipant.audio;isSharingScreen=localParticipant.screen;}return[isCameraMuted,isMicMuted,isSharingScreen];}/**\n * Props:\n * - onClickLeaveCall: () => ()\n * - disabled: boolean\n */export default function AdminPanel(props){var callObject=useContext(CallObjectContext);// const [sessionState, setSessionState ] = useContext(SessionContext);\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isCameraMuted=_useState4[0],setCameraMuted=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isMicMuted=_useState6[0],setMicMuted=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isSharingScreen=_useState8[0],setSharingScreen=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),displayChat=_useState10[0],setChatDisplay=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),highlightedChat=_useState12[0],setChatHighlight=_useState12[1];var _useContext=useContext(SessionStateContext),session=_useContext.session;var _session=_slicedToArray(session,2),sessionState=_session[0],setSessionState=_session[1];var _useContext2=useContext(MyContext),myStateArray=_useContext2.myStateArray,setName=_useContext2.setName,setRole=_useContext2.setRole,setUserList=_useContext2.setUserList,setViewMode=_useContext2.setViewMode,setCamOnAtSessionStart=_useContext2.setCamOnAtSessionStart,setMicOnAtSessionStart=_useContext2.setMicOnAtSessionStart,setAdminPresent=_useContext2.setAdminPresent,setAmAdmin=_useContext2.setAmAdmin;var _myStateArray=_slicedToArray(myStateArray,2),myState=_myStateArray[0],setMyState=_myStateArray[1];var forceUpdate=useForceUpdate();window.updateAdminPanel=forceUpdate;var _useState13=useState('Play'),_useState14=_slicedToArray(_useState13,2),playButtonText=_useState14[0],setPlayButtonText=_useState14[1];var _useState15=useState('monologue1'),_useState16=_slicedToArray(_useState15,2),targetRecording=_useState16[0],setTargetRecording=_useState16[1];///////HAVE TO CHANGE THIS IN TWO PLACES\nvar training=React.createRef();var trainingToggle=React.createRef();useEffect(function(){//listen for participants leaving or joining and update component\nif(!callObject)return;var events=['participant-joined','participant-left','joined-meeting'];for(var _i=0,_events=events;_i<_events.length;_i++){var event=_events[_i];callObject.on(event,function(){return setTimeout(function(){return forceUpdate();},100);});}return function cleanup(){var _iterator=_createForOfIteratorHelper(events),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _event=_step.value;callObject.off(_event,function(){return setTimeout(function(){return forceUpdate();},100);});}}catch(err){_iterator.e(err);}finally{_iterator.f();}};},[callObject]);///update other participants when state changes.\nuseEffect(function(){if(!sessionState.hasAnUpdate){return;}console.log('****HAS AN UPDATE');sendState();setSessionState(function(prev){return _objectSpread(_objectSpread({},prev),{},{hasAnUpdate:false});});},[sessionState.hasAnUpdate]);var sendState=function sendState(){console.log(\"Sending current state...\");callObject.sendAppMessage(sessionState,'*');};function toggleSessionActive(){setSessionState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isActive:!prevState.isActive});});setSessionState(function(prev){return _objectSpread(_objectSpread({},prev),{},{hasAnUpdate:true});});}function togglePractice(){var recipientA=sessionState.roleOf.Shadow1&&myState.userList.sessionIdFor[sessionState.roleOf.Shadow1];var recipientB=sessionState.roleOf.Shadow2&&myState.userList.sessionIdFor[sessionState.roleOf.Shadow2];if(sessionState.roleOf.Shadow1==myState.name){recipientA='me';}if(sessionState.roleOf.Shadow2==myState.name){recipientB='me';}if(!recipientA&&!recipientB){console.log('no recipients.');return;}var action=window.audioIsPlaying?'pause':'play';var instructionsA={type:'instructions',target:targetRecording,action:action,recipient:recipientA};var instructionsB={type:'instructions',target:targetRecording+'B',action:action,recipient:recipientB};if(recipientA){if(recipientA!='me'){callObject.sendAppMessage(instructionsA,recipientA);}else if(recipientA=='me'){audioPlayer(targetRecording,action);}console.log(\"Sent \".concat(action,\" request to \").concat(sessionState.roleOf.Shadow1));}if(recipientB){if(recipientB!='me'){callObject.sendAppMessage(instructionsB,recipientB);}else if(recipientB=='me'){audioPlayer(targetRecording+'B',action);}console.log(\"Sent \".concat(action,\" request to \").concat(sessionState.roleOf.Shadow2));}window.audioIsPlaying=!window.audioIsPlaying;setPlayButtonText(!window.audioIsPlaying?'Play':'Pause');}function toggleTrainingMode(){training.current.classList.toggle('hidden');trainingToggle.current.innerText=training.current.classList.contains('hidden')?'Show Practice':'X';}/**\n   * Start listening for participant changes when callObject is set (i.e. when the component mounts).\n   * This event will capture any changes to your audio/video mute state.\n   */useEffect(function(){if(!callObject)return;function handleNewParticipantsState(event){event&&logDailyEvent(event);var _getStreamStates=getStreamStates(callObject),_getStreamStates2=_slicedToArray(_getStreamStates,3),isCameraMuted=_getStreamStates2[0],isMicMuted=_getStreamStates2[1],isSharingScreen=_getStreamStates2[2];setCameraMuted(isCameraMuted);setMicMuted(isMicMuted);setSharingScreen(isSharingScreen);}// Use initial state\nhandleNewParticipantsState();// Listen for changes in state\ncallObject.on('participant-updated',handleNewParticipantsState);// Stop listening for changes in state\nreturn function cleanup(){callObject.off('participant-updated',handleNewParticipantsState);};},[callObject]);/* // Play practice audio for users */return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"admin-panel\"},/*#__PURE__*/React.createElement(\"div\",{className:\"role-selector-section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"selector-box\"},\"Buyer(s)\",/*#__PURE__*/React.createElement(RoleSelector,{role:\"Buyer1\",selectedRoles:\"selectedRoles\"}),/*#__PURE__*/React.createElement(RoleSelector,{role:\"Buyer2\",selectedRoles:\"selectedRoles\"}),/*#__PURE__*/React.createElement(RoleSelector,{role:\"Buyer3\",selectedRoles:\"selectedRoles\"}),/*#__PURE__*/React.createElement(RoleSelector,{role:\"Buyer4\",selectedRoles:\"selectedRoles\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"selector-box\"},\"Seller\",/*#__PURE__*/React.createElement(RoleSelector,{role:\"Seller\",selectedRoles:\"selectedRoles\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"selector-box\"},\"Seller's shadow(s)\",/*#__PURE__*/React.createElement(RoleSelector,{role:\"Shadow1\",selectedRoles:\"selectedRoles\"}),/*#__PURE__*/React.createElement(RoleSelector,{role:\"Shadow2\",selectedRoles:\"selectedRoles\"}),/*#__PURE__*/React.createElement(RoleSelector,{role:\"Shadow3\",selectedRoles:\"selectedRoles\"}),/*#__PURE__*/React.createElement(RoleSelector,{role:\"Shadow4\",selectedRoles:\"selectedRoles\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"session-toggle\"},/*#__PURE__*/React.createElement(\"label\",{class:\"switch\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",id:\"state\",checked:sessionState.isActive,onChange:toggleSessionActive}),/*#__PURE__*/React.createElement(\"span\",{class:\"slider round\"})),/*#__PURE__*/React.createElement(\"p\",null,\"Session active\"))),\"// ***End admin panel***\",/*#__PURE__*/React.createElement(\"div\",{className:\"practice-audio hidden\",ref:training},\"Practice audio\",/*#__PURE__*/React.createElement(\"div\",{style:{height:'30px',margin:'auto'}},/*#__PURE__*/React.createElement(\"form\",{action:\"\"},/*#__PURE__*/React.createElement(\"fieldset\",{style:{border:'none'}},/*#__PURE__*/React.createElement(\"select\",{class:\"practice-audio-dropdown\",onChange:function onChange(e){setTargetRecording(e.target.value);console.log('***CHANGED TO '+e.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"monologue1\"},\"What makes CEB different (mono)\"),/*#__PURE__*/React.createElement(\"option\",{value:\"monologue2\"},\"Searching for PAGA Claims (mono)\"),/*#__PURE__*/React.createElement(\"option\",{value:\"monologue3\"},\"Audio Engineer (mono)\"),/*#__PURE__*/React.createElement(\"option\",{value:\"monologue4\"},\"IBM Garage (mono)\"),/*#__PURE__*/React.createElement(\"option\",{value:\"monologue5\"},\"Livestorm 1 (mono)\"),/*#__PURE__*/React.createElement(\"option\",{value:\"monologue6\"},\"Livestorm 2 (mono)\"))))),/*#__PURE__*/React.createElement(\"span\",{style:{color:'green',fontSize:'16px',fontFamily:'Verdana, Geneva, Tahoma, sans-serif'}},/*#__PURE__*/React.createElement(\"button\",{onClick:togglePractice,id:\"play-pause\"},playButtonText))),/*#__PURE__*/React.createElement(\"div\",{className:\"training-toggle\",ref:trainingToggle,onClick:toggleTrainingMode},\"Show Practice\"));}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test4/src/components/AdminPanel/AdminPanel.js"],"names":["React","useContext","useEffect","useState","CallObjectContext","logDailyEvent","audioPlayer","RoleSelector","SessionStateContext","MyContext","useForceUpdate","value","setValue","getStreamStates","callObject","isCameraMuted","isMicMuted","isSharingScreen","participants","local","localParticipant","video","audio","screen","AdminPanel","props","setCameraMuted","setMicMuted","setSharingScreen","displayChat","setChatDisplay","highlightedChat","setChatHighlight","session","sessionState","setSessionState","myStateArray","setName","setRole","setUserList","setViewMode","setCamOnAtSessionStart","setMicOnAtSessionStart","setAdminPresent","setAmAdmin","myState","setMyState","forceUpdate","window","updateAdminPanel","playButtonText","setPlayButtonText","targetRecording","setTargetRecording","training","createRef","trainingToggle","events","event","on","setTimeout","cleanup","off","hasAnUpdate","console","log","sendState","prev","sendAppMessage","toggleSessionActive","prevState","isActive","togglePractice","recipientA","roleOf","Shadow1","userList","sessionIdFor","recipientB","Shadow2","name","action","audioIsPlaying","instructionsA","type","target","recipient","instructionsB","toggleTrainingMode","current","classList","toggle","innerText","contains","handleNewParticipantsState","height","margin","border","e","color","fontSize","fontFamily"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nimport { logDailyEvent } from '../../logUtils';\nimport './AdminPanel.css';\nimport audioPlayer from '../../hooks/AudioPlayer';\nimport RoleSelector from '../RoleSelector/RoleSelector';\nimport SessionStateContext from '../../SessionStateContext';\nimport MyContext from '../../MyContext';\n\n\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n\n\n/**\n * Gets [isCameraMuted, isMicMuted, isSharingScreen].\n * This function is declared outside Tray() so it's not recreated every render\n * (which would require us to declare it as a useEffect dependency).\n */\nfunction getStreamStates(callObject) {\n  let isCameraMuted,\n    isMicMuted,\n    isSharingScreen = false;\n  if (\n    callObject &&\n    callObject.participants() &&\n    callObject.participants().local\n  ) {\n    const localParticipant = callObject.participants().local;\n    isCameraMuted = !localParticipant.video;\n    isMicMuted = !localParticipant.audio;\n    isSharingScreen = localParticipant.screen;\n  }\n  return [isCameraMuted, isMicMuted, isSharingScreen];\n}\n\n\n\n/**\n * Props:\n * - onClickLeaveCall: () => ()\n * - disabled: boolean\n */\nexport default function AdminPanel(props) {\n  const callObject = useContext(CallObjectContext);\n  // const [sessionState, setSessionState ] = useContext(SessionContext);\n  const [isCameraMuted, setCameraMuted] = useState(false);\n  const [isMicMuted, setMicMuted] = useState(false);\n  const [isSharingScreen, setSharingScreen] = useState(false);\n  const [displayChat, setChatDisplay] = useState(false);\n  const [highlightedChat, setChatHighlight] = useState(false);\n  const { session } = useContext(SessionStateContext);\n  const [ sessionState,setSessionState] = session;\n  const { myStateArray, \n    setName, \n    setRole,\n    setUserList,\n    setViewMode,\n    setCamOnAtSessionStart,\n    setMicOnAtSessionStart,\n    setAdminPresent,\n    setAmAdmin, \n    } = useContext(MyContext);\n  const [ myState,setMyState ] = myStateArray;\n\n  const forceUpdate = useForceUpdate();\n  window.updateAdminPanel=forceUpdate;\n  const [playButtonText, setPlayButtonText] = useState('Play');\n  const [targetRecording, setTargetRecording] = useState('monologue1') ///////HAVE TO CHANGE THIS IN TWO PLACES\n  const training = React.createRef();\n  const trainingToggle = React.createRef();\n\n  useEffect(() => {           //listen for participants leaving or joining and update component\n    if (!callObject) return;\n\n    const events = [\n      'participant-joined',\n      'participant-left',\n      'joined-meeting',\n    ];\n\n    for (const event of events) {\n      callObject.on(event, () => setTimeout(()=>forceUpdate(),100));\n    }\n\n    return function cleanup() {\n      for (const event of events) {\n        callObject.off(event, () => setTimeout(()=>forceUpdate(),100));\n      }\n    };\n\n  }, [callObject]);\n\n\n///update other participants when state changes.\nuseEffect(()=>{\n  if (!sessionState.hasAnUpdate) {return;}\n  console.log('****HAS AN UPDATE');\n  sendState(); \n  setSessionState(prev=>({\n    ...prev,\n    hasAnUpdate:false,\n  })); \n},[sessionState.hasAnUpdate]);\n\nconst sendState = () => {\n    console.log (\"Sending current state...\");\n    callObject.sendAppMessage(sessionState, '*'); \n}\n\n\n\n  function toggleSessionActive() {\n    setSessionState((prevState)=>({\n      ...prevState,\n      isActive: !prevState.isActive\n      }));\n      setSessionState(prev=>({\n        ...prev,\n        hasAnUpdate:true,\n      }));  }\n\n\n\n  function togglePractice() {\n    let recipientA = sessionState.roleOf.Shadow1 && myState.userList.sessionIdFor[sessionState.roleOf.Shadow1];\n    let recipientB = sessionState.roleOf.Shadow2 && myState.userList.sessionIdFor[sessionState.roleOf.Shadow2];\n    if(sessionState.roleOf.Shadow1==myState.name) {recipientA='me'}\n    if(sessionState.roleOf.Shadow2==myState.name) {recipientB='me'}\n\n    if (!recipientA && !recipientB) {console.log('no recipients.'); return}\n\n    const action = window.audioIsPlaying ? 'pause' : 'play';\n    const instructionsA = {\n      type: 'instructions',\n      target: targetRecording,\n      action: action,\n      recipient: recipientA,\n    }\n    const instructionsB = {\n      type: 'instructions',\n      target: targetRecording + 'B',\n      action: action,\n      recipient: recipientB\n    }\n\n    if (recipientA) {\n      if(recipientA!='me') {\n        callObject.sendAppMessage(instructionsA,recipientA);\n      }\n      else if(recipientA=='me') {\n        audioPlayer(targetRecording,action);\n      }\n      console.log(`Sent ${action} request to ${sessionState.roleOf.Shadow1}`);\n    }\n    if (recipientB) {\n      if(recipientB!='me') {\n        callObject.sendAppMessage(instructionsB,recipientB);\n      }\n      else if(recipientB=='me') {\n        audioPlayer(targetRecording+'B',action);\n      }\n      console.log(`Sent ${action} request to ${sessionState.roleOf.Shadow2}`);\n    }\n      \n    window.audioIsPlaying=(!window.audioIsPlaying);\n    setPlayButtonText(!window.audioIsPlaying ? 'Play' : 'Pause');\n\n\n  }\n\n\n  function toggleTrainingMode () {\n    training.current.classList.toggle('hidden');\n    trainingToggle.current.innerText = training.current.classList.contains('hidden') ? 'Show Practice' : 'X';\n  }\n\n\n\n  \n\n                  \n         \n\n\n  /**\n   * Start listening for participant changes when callObject is set (i.e. when the component mounts).\n   * This event will capture any changes to your audio/video mute state.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleNewParticipantsState(event) {\n      event && logDailyEvent(event);\n      const [isCameraMuted, isMicMuted, isSharingScreen] = getStreamStates(\n        callObject\n      );\n      setCameraMuted(isCameraMuted);\n      setMicMuted(isMicMuted);\n      setSharingScreen(isSharingScreen);\n    }\n\n    // Use initial state\n    handleNewParticipantsState();\n\n    // Listen for changes in state\n    callObject.on('participant-updated', handleNewParticipantsState);\n\n    // Stop listening for changes in state\n    return function cleanup() {\n      callObject.off('participant-updated', handleNewParticipantsState);\n    };\n  }, [callObject]);\n\n\n    /* // Play practice audio for users */\n\n    \n\n  return (\n<div>\n  <div className=\"admin-panel\">\n\n    {/* BEGIN ROLE SELECTORS SECTION*/}\n      <div className=\"role-selector-section\">\n\n\n          {/* Buyer selector */}\n          <div className=\"selector-box\">\n            Buyer(s)\n\n              <RoleSelector \n                role=\"Buyer1\"\n                selectedRoles='selectedRoles'\n              />\n              <RoleSelector \n                role=\"Buyer2\"\n                selectedRoles='selectedRoles'\n              />\n              <RoleSelector \n                role=\"Buyer3\"\n                selectedRoles='selectedRoles'\n              />\n          <RoleSelector \n                role=\"Buyer4\"\n                selectedRoles='selectedRoles'\n              />\n          </div>\n          \n          {/* Seller Selector */}\n          <div className=\"selector-box\">\n            Seller\n              <RoleSelector \n                  role=\"Seller\"\n                  selectedRoles='selectedRoles'\n                />\n          </div>\n\n          {/* Shadow selector */}\n          <div className=\"selector-box\">\n            Seller's shadow(s)\n              <RoleSelector \n                  role=\"Shadow1\"\n                  selectedRoles='selectedRoles'\n                />\n                <RoleSelector \n                  role=\"Shadow2\"\n                  selectedRoles='selectedRoles'\n                />\n                <RoleSelector \n                  role=\"Shadow3\"\n                  selectedRoles='selectedRoles'\n                />\n                <RoleSelector \n                  role=\"Shadow4\"\n                  selectedRoles='selectedRoles'\n                />\n            </div>\n\n          {/* Unassigned (working) */}\n          {/* <div className=\"selector-box\">\n            Unassigned\n            <RoleContainer\n            />\n           </div> */}\n\n\n        </div>\n    {/* END ROLE SELECTORS SECTION */}\n\n\n    \n\n\n\n\n\n    {/* <!-- BEGIN START / STOP TOGGLE --> */}\n        <div className='session-toggle'>\n                        <label class=\"switch\">\n                            <input type=\"checkbox\" id='state' checked={sessionState.isActive} onChange={toggleSessionActive}/>\n                            <span class=\"slider round\"></span>\n                        </label>\n                        <p>Session active</p>\n        </div>\n     {/* <!-- END START / STOP TOGGLE --> */}\n\n\n     \n\n    </div>\n// ***End admin panel***\n\n{/* START TRAINING AUDIO SECTION */}\n\n<div className='practice-audio hidden' ref={training}>\n    Practice audio\n        \n                    {/* Recordings for Seconding */}\n                    <div style={{height:'30px',margin:'auto'}}>\n                    <form action = ''>\n                        <fieldset style={{border:'none'}}>\n                        <select class='practice-audio-dropdown' onChange={(e) => {setTargetRecording (e.target.value); console.log('***CHANGED TO ' + e.target.value)}}\n                        >\n                        <option value = 'monologue1'>What makes CEB different (mono)</option>    \n                        {/* ///IMPORTANT: IF DEFAULT VALUE CHANGES ABOVE, ALSO HAVE TO CHANGE IT IN setTargetRecording HOOK */}\n                        <option value = 'monologue2'>Searching for PAGA Claims (mono)</option>\n                        <option value = 'monologue3'>Audio Engineer (mono)</option>\n                        <option value = 'monologue4'>IBM Garage (mono)</option>\n                        <option value = 'monologue5'>Livestorm 1 (mono)</option>\n                        <option value = 'monologue6'>Livestorm 2 (mono)</option>\n                    </select>\n                    </fieldset>\n                    </form>\n                </div> \n                  <span style={{color: 'green', fontSize: '16px', fontFamily:'Verdana, Geneva, Tahoma, sans-serif'}}>\n                      <button onClick={togglePractice} id='play-pause'>{playButtonText}</button>\n                    </span>\n    </div>\n\n    {/* END TRAINING AUDIO SECTION */}\n\n<div className='training-toggle' ref={trainingToggle} onClick={toggleTrainingMode}>Show Practice</div>\n</div>\n    \n  );\n  \n}\n"]},"metadata":{},"sourceType":"module"}