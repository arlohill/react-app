{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _objectSpread from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useContext,useReducer,useCallback,useState}from'react';import'./Call.css';import Tile from'../Tile/Tile';import CallObjectContext from'../../CallObjectContext';import MyContext from'../../MyContext';import SessionStateContext from'../../SessionStateContext';import CallMessage from'../CallMessage/CallMessage';import{initialCallState,CLICK_ALLOW_TIMEOUT,PARTICIPANTS_CHANGE,CAM_OR_MIC_ERROR,FATAL_ERROR,callReducer,isLocal,isScreenShare,containsScreenShare,getMessage}from'./callState';import{logDailyEvent}from'../../logUtils';import useSetSubscriptions from'../../hooks/setSubscriptions';function useForceUpdate(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];// integer state\nreturn function(){return setValue(function(value){return value+1;});};// update the state to force render\n}export default function Call(){useSetSubscriptions();var callObject=useContext(CallObjectContext);var _useContext=useContext(SessionStateContext),session=_useContext.session;var _session=_slicedToArray(session,2),sessionState=_session[0],setSessionState=_session[1];var _useReducer=useReducer(callReducer,initialCallState),_useReducer2=_slicedToArray(_useReducer,2),callState=_useReducer2[0],dispatch=_useReducer2[1];var forceUpdate=useForceUpdate();var _useContext2=useContext(MyContext),myStateArray=_useContext2.myStateArray,setName=_useContext2.setName,setRole=_useContext2.setRole,setUserList=_useContext2.setUserList,setViewMode=_useContext2.setViewMode,setCamOnAtSessionStart=_useContext2.setCamOnAtSessionStart,setMicOnAtSessionStart=_useContext2.setMicOnAtSessionStart,setAdminPresent=_useContext2.setAdminPresent,setAmAdmin=_useContext2.setAmAdmin,setNumber=_useContext2.setNumber;var _myStateArray=_slicedToArray(myStateArray,2),myState=_myStateArray[0],setMyState=_myStateArray[1];window.updateCall=function(){forceUpdate();};/**\n   * Set default viewmode and turn cam on/off when session begins or my role changes\n   */useEffect(function(){if(sessionState.isActive){switch(myState.role){case'Attendee':case'Admin'://reset to default viewMode\nif(sessionState.roleOf.Shadow1){setViewMode('Shadow1');}else if(sessionState.roleOf.Shadow2)//fallbacks in case shadow1 is not assigned\n{setViewMode('Shadow2');}else if(sessionState.roleOf.Shadow3){setViewMode('Shadow3');}else if(sessionState.roleOf.Shadow4){setViewMode('Shadow4');}else{setViewMode('Seller');}//when session starts up, \"remember\" if cam + mic were on or off\nif(myState.camOnAtSessionStart&&myState.camOnAtSessionStart===null){setMicOnAtSessionStart(callObject.localAudio());setCamOnAtSessionStart(callObject.localVideo());}//and turn off cam and mic \ncallObject.setLocalAudio(false);callObject.setLocalVideo(false);break;case'Seller':case'Buyer1':case'Buyer2':case'Buyer3':case'Shadow1':case'Shadow2':case'Shadow3':case'Shadow4'://when session starts, \"remember\" if cam + mic were on or off\nif(myState.camOnAtSessionStart===null){setMicOnAtSessionStart(callObject.localAudio());setCamOnAtSessionStart(callObject.localVideo());}//turn on cam and mic\ncallObject.setLocalAudio(true);callObject.setLocalVideo(true);}}else if(!sessionState.isActive){!callObject.localAudio()&&callObject.setLocalAudio(myState.micOnAtSessionStart);!callObject.localVideo()&&callObject.setLocalVideo(myState.camOnAtSessionStart);setMicOnAtSessionStart(null);setCamOnAtSessionStart(null);}},[sessionState.isActive,myState.role]);/**\n   * Update my role according to sessionState changes\n   */useEffect(function(){var myNewRole='Attendee';//default, if no role assigned\nfor(var key in sessionState.roleOf){if(sessionState.roleOf[key]==myState.name){myNewRole=key;}}if(myNewRole!==myState.role){setRole(myNewRole);if(myNewRole.includes('1')){setNumber(1);}else if(myNewRole.includes('2')){setNumber(2);}}},[sessionState.roleOf]);var getUserList=useCallback(function(){return new Promise(function(resolve){console.log('*****UPDATING PARTICIPANT LIST******');var userListIncludesAdmin=false;//default\nvar ps=callObject.participants();var workingUserList={names:[myState.name],sessionIdFor:{}};for(var p in ps){if(p!=='local'){var thisUserName=ps[p].user_name;var thisSessionId=ps[p].session_id;workingUserList.names.push(thisUserName);//add each user_name with its sessionID to UserList\nworkingUserList.sessionIdFor[thisUserName]=thisSessionId;console.log('***ADDING: '+thisUserName);if(thisUserName.includes('_Admin')){userListIncludesAdmin=true;}};};userListIncludesAdmin?console.log('Admin IS present'):console.log('Admin IS NOT present');workingUserList.names.sort();//alphebetize that list \nconsole.log(\"here's the userList: \".concat(workingUserList.names));resolve([workingUserList,userListIncludesAdmin]);});},[callObject.myState]);var checkIfAdminPresent=useCallback(function(){return new Promise(function(resolve){var adminAlreadyPresent=false;var ps=callObject.participants();var lookForMoreParticipants=setInterval(function(){//This interval should be redundant, but checking to make sure a dummy user doesn't pop up first\nif(Object.keys(ps).length>1||Object.keys(ps).length<=1&&ps.local.user_name==myState.name){clearInterval(lookForMoreParticipants);for(var p in ps){var thisUserName=ps[p].user_name;if(thisUserName.includes('_Admin')&&p!=='local'){adminAlreadyPresent=true;}console.log(\"Participant present: \".concat(thisUserName));}resolve(adminAlreadyPresent);}else{return;}},500);});},[callObject.myState]);/**\n   * Start listening for participant changes, when the callObject is set.\n   */useEffect(function(){if(!callObject)return;var events=['participant-joined','participant-updated','participant-left','joined-meeting'];function handleNewParticipantsState(e){e&&logDailyEvent(e);dispatch({type:PARTICIPANTS_CHANGE,participants:callObject.participants()});if(e&&e.action!='participant-updated'){if(e.action==\"participant-joined\"||e.action==\"participant-left\"){//wait is necessary to avoid 'dummy' userName\nvar update=function update(){getUserList().then(function(_ref){var _ref2=_slicedToArray(_ref,2),workingUserList=_ref2[0],userListIncludesAdmin=_ref2[1];setUserList(workingUserList);setAdminPresent(userListIncludesAdmin);// if (sessionState.isKnown === null) {\n//   if(myState.amAdmin) {   //determine if there's a prior session state\n//     setSessionState((prev)=>({\n//       ...prev,\n//       isKnown: userListIncludesAdmin ? false : true,   //if an admin is already present, make joining admin request a state update\n//     }));\n//     let isKnown = userListIncludesAdmin ? false : true;\n//     console.log('just set IS KNOWN to: ' + isKnown);\n//   }\n// } else {      //for non-admins\n//   setSessionState((prev)=>({\n//     ...prev,\n//     isKnown: false,\n//   }));\n// }\n});};window.event=e;setTimeout(update,50);}else if(e.action=='joined-meeting'){console.log('*****I JOINED THE MEETING');getUserList().then(function(_ref3){var _ref4=_slicedToArray(_ref3,2),workingUserList=_ref4[0],userListIncludesAdmin=_ref4[1];setUserList(workingUserList);if(myState.amAdmin&&!userListIncludesAdmin){checkIfAdminPresent().then(function(adminAlreadyPresent){setSessionState(function(prev){return _objectSpread(_objectSpread({},prev),{},{isKnown:adminAlreadyPresent?false:true//if an admin is already present, make joining admin request a state update\n});});});}});}}}// Use initial state\nhandleNewParticipantsState();// Listen for changes in state\nfor(var _i=0,_events=events;_i<_events.length;_i++){var event=_events[_i];callObject.on(event,handleNewParticipantsState);}// Stop listening for changes in state\nreturn function cleanup(){var _iterator=_createForOfIteratorHelper(events),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _event=_step.value;callObject.off(_event,handleNewParticipantsState);}}catch(err){_iterator.e(err);}finally{_iterator.f();}};},[callObject]);/**\n   * Start listening for call errors, when the callObject is set.\n   */useEffect(function(){if(!callObject)return;function handleCameraErrorEvent(event){logDailyEvent(event);dispatch({type:CAM_OR_MIC_ERROR,message:event&&event.errorMsg&&event.errorMsg.errorMsg||'Unknown'});}// We're making an assumption here: there is no camera error when callObject\n// is first assigned.\ncallObject.on('camera-error',handleCameraErrorEvent);return function cleanup(){callObject.off('camera-error',handleCameraErrorEvent);};},[callObject]);/**\n   * Start listening for fatal errors, when the callObject is set.\n   */useEffect(function(){if(!callObject)return;function handleErrorEvent(e){logDailyEvent(e);dispatch({type:FATAL_ERROR,message:e&&e.errorMsg||'Unknown'});}// We're making an assumption here: there is no error when callObject is\n// first assigned.\ncallObject.on('error',handleErrorEvent);return function cleanup(){callObject.off('error',handleErrorEvent);};},[callObject]);/**\n   * Start a timer to show the \"click allow\" message, when the component mounts.\n   */useEffect(function(){var t=setTimeout(function(){dispatch({type:CLICK_ALLOW_TIMEOUT});},2500);return function cleanup(){clearTimeout(t);};},[]);///todo: fix this\n// const numberOfSubs = window.currentSubs && window.currentSubs.filter(function (str) {return str.indexOf('_AUDIO') === -1}).filter(function (str) {return str.indexOf('_AUDIO') === -1}).filter(function (str) {return str.indexOf(window.myName) === -1}).length //number of subs, not counting audio-only or my name\n//   useEffect(()=>{\n// window.numberOfSubs =numberOfSubs;\n// console.log('*****NUMBER OF SUBS:'+numberOfSubs);\n//   },[numberOfSubs])\nfunction getTiles(){var largeTiles=[];var smallTiles=[];Object.entries(callState.callItems).forEach(function(_ref5){var _ref6=_slicedToArray(_ref5,2),id=_ref6[0],callItem=_ref6[1];var isAudioOnly=function isAudioOnly(){if(!callItem.audioTrackState||!callItem.videoTrackState){return;}return callItem.audioTrackState.subscribed&&!callItem.videoTrackState.subscribed;};var isLarge=isScreenShare(id)||!isLocal(id)&&!containsScreenShare(callState.callItems)||isLocal(id)&&window.numberOfSubs&&window.numberOfSubs>1&&!containsScreenShare(callState.callItems);//videoTrackState()\nvar tile=/*#__PURE__*/React.createElement(Tile,{key:id,videoTrackState:callItem.videoTrackState,audioTrackState:callItem.audioTrackState,isLocalPerson:isLocal(id),isAudioOnly:isAudioOnly(),isLarge:isLarge,disableCornerMessage:isScreenShare(id),isScreenShare:isScreenShare(id)// onClick={\n//   isLocal(id)\n//     ? null\n//     : () => {\n//         sendHello(id);\n//       }\n// }\n});if(isLarge){largeTiles.push(tile);}else{smallTiles.push(tile);}});return[largeTiles,smallTiles];}var _getTiles=getTiles(),_getTiles2=_slicedToArray(_getTiles,2),largeTiles=_getTiles2[0],smallTiles=_getTiles2[1];/**\n   * DELETE: Attached tiles objects to window for debugging purposes.\n   */useEffect(function(){// console.log('re-rendered');\n// console.log('Userlist: ' + window.userList);\nwindow.largeTiles=largeTiles;window.smallTales=smallTiles;window.add=function(){var n=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;for(var i=0;i<n;i++){callObject.addFakeParticipant();}};});// attach callState to window for debugging\nuseEffect(function(){window.callState=callState;},[callState]);var message=getMessage(callState);return/*#__PURE__*/React.createElement(\"div\",{className:myState.amAdmin?\"call-with-sidebar\":\"call\"},/*#__PURE__*/React.createElement(\"div\",{className:\"large-tiles count-\".concat(containsScreenShare(callState.callItems)&&'1'||window.numberOfSubs&&window.numberOfSubs+1)},!message?largeTiles:null/* Avoid showing large tiles to make room for the message */),/*#__PURE__*/React.createElement(\"div\",{className:\"small-tiles\"},smallTiles),message&&/*#__PURE__*/React.createElement(CallMessage,{header:message.header,detail:message.detail,isError:message.isError}));}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test4/src/components/Call/Call.js"],"names":["React","useEffect","useContext","useReducer","useCallback","useState","Tile","CallObjectContext","MyContext","SessionStateContext","CallMessage","initialCallState","CLICK_ALLOW_TIMEOUT","PARTICIPANTS_CHANGE","CAM_OR_MIC_ERROR","FATAL_ERROR","callReducer","isLocal","isScreenShare","containsScreenShare","getMessage","logDailyEvent","useSetSubscriptions","useForceUpdate","value","setValue","Call","callObject","session","sessionState","setSessionState","callState","dispatch","forceUpdate","myStateArray","setName","setRole","setUserList","setViewMode","setCamOnAtSessionStart","setMicOnAtSessionStart","setAdminPresent","setAmAdmin","setNumber","myState","setMyState","window","updateCall","isActive","role","roleOf","Shadow1","Shadow2","Shadow3","Shadow4","camOnAtSessionStart","localAudio","localVideo","setLocalAudio","setLocalVideo","micOnAtSessionStart","myNewRole","key","name","includes","getUserList","Promise","resolve","console","log","userListIncludesAdmin","ps","participants","workingUserList","names","sessionIdFor","p","thisUserName","user_name","thisSessionId","session_id","push","sort","checkIfAdminPresent","adminAlreadyPresent","lookForMoreParticipants","setInterval","Object","keys","length","local","clearInterval","events","handleNewParticipantsState","e","type","action","update","then","event","setTimeout","amAdmin","prev","isKnown","on","cleanup","off","handleCameraErrorEvent","message","errorMsg","handleErrorEvent","t","clearTimeout","getTiles","largeTiles","smallTiles","entries","callItems","forEach","id","callItem","isAudioOnly","audioTrackState","videoTrackState","subscribed","isLarge","numberOfSubs","tile","smallTales","add","n","i","addFakeParticipant","header","detail","isError"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useReducer, useCallback, useState } from 'react';\nimport './Call.css';\nimport Tile from '../Tile/Tile';\nimport CallObjectContext from '../../CallObjectContext';\nimport MyContext from '../../MyContext';\nimport SessionStateContext from '../../SessionStateContext';\nimport CallMessage from '../CallMessage/CallMessage';\nimport {\n  initialCallState,\n  CLICK_ALLOW_TIMEOUT,\n  PARTICIPANTS_CHANGE,\n  CAM_OR_MIC_ERROR,\n  FATAL_ERROR,\n  callReducer,\n  isLocal,\n  isScreenShare,\n  containsScreenShare,\n  getMessage,\n} from './callState';\nimport { logDailyEvent } from '../../logUtils';\nimport useSetSubscriptions from '../../hooks/setSubscriptions';\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nexport default function Call() {\n  useSetSubscriptions();\n\n  const callObject = useContext(CallObjectContext);\n  const { session } = useContext(SessionStateContext);\n  const [ sessionState,setSessionState] = session;\n  const [callState, dispatch] = useReducer(callReducer, initialCallState);\n  const forceUpdate = useForceUpdate();\n  const { myStateArray, \n          setName, \n          setRole,\n          setUserList,\n          setViewMode,\n          setCamOnAtSessionStart,\n          setMicOnAtSessionStart,\n          setAdminPresent,\n          setAmAdmin, \n          setNumber,\n        } = useContext(MyContext);\n  const [ myState,setMyState ] = myStateArray;\n\n\n\n  window.updateCall = () => {\n    forceUpdate();\n  }\n\n\n\n /**\n   * Set default viewmode and turn cam on/off when session begins or my role changes\n   */\n  useEffect(()=> {\n\n\n    if (sessionState.isActive) {\n\n        switch (myState.role) {\n          case 'Attendee':\n          case 'Admin':\n              //reset to default viewMode\n              if (sessionState.roleOf.Shadow1)\n              {setViewMode('Shadow1');}\n              else if (sessionState.roleOf.Shadow2)    //fallbacks in case shadow1 is not assigned\n                {setViewMode('Shadow2');}\n              else if (sessionState.roleOf.Shadow3)\n                {setViewMode('Shadow3');}\n              else if (sessionState.roleOf.Shadow4)\n                {setViewMode('Shadow4');}\n              else\n                {setViewMode('Seller');}\n              \n              //when session starts up, \"remember\" if cam + mic were on or off\n              if(myState.camOnAtSessionStart && myState.camOnAtSessionStart===null) {\n                setMicOnAtSessionStart(callObject.localAudio());\n                setCamOnAtSessionStart(callObject.localVideo());\n              }\n              //and turn off cam and mic \n              callObject.setLocalAudio(false);\n              callObject.setLocalVideo(false);\n              break;\n          case 'Seller':\n          case 'Buyer1':\n          case 'Buyer2':\n          case 'Buyer3':\n          case 'Shadow1':\n          case 'Shadow2':\n          case 'Shadow3':\n          case 'Shadow4':\n            //when session starts, \"remember\" if cam + mic were on or off\n            if(myState.camOnAtSessionStart===null) {\n              setMicOnAtSessionStart(callObject.localAudio());\n              setCamOnAtSessionStart(callObject.localVideo());\n            }\n            //turn on cam and mic\n            callObject.setLocalAudio(true);\n            callObject.setLocalVideo(true);\n        }\n    }\n\n    else if (!sessionState.isActive) {\n      !callObject.localAudio() && callObject.setLocalAudio(myState.micOnAtSessionStart);\n      !callObject.localVideo() && callObject.setLocalVideo(myState.camOnAtSessionStart);\n      setMicOnAtSessionStart(null);\n      setCamOnAtSessionStart(null);\n    }\n\n  },[sessionState.isActive,myState.role]);\n\n\n   /**\n   * Update my role according to sessionState changes\n   */\n   useEffect(()=> {\n    let myNewRole = 'Attendee'; //default, if no role assigned\n    for (const key in sessionState.roleOf) {\n        if(sessionState.roleOf[key]==myState.name) {\n            myNewRole = key;\n        }\n    }\n    if (myNewRole!==myState.role) {\n        setRole(myNewRole);\n          if (myNewRole.includes('1')) {\n              setNumber(1);\n          } else if (myNewRole.includes('2')) {\n              setNumber(2);\n          }\n      }\n   },[sessionState.roleOf])\n      \n\n   const getUserList = useCallback(()=>{\n\n      return new Promise((resolve)=>{\n  \n          console.log('*****UPDATING PARTICIPANT LIST******');\n          let userListIncludesAdmin=false;   //default\n          let ps=callObject.participants(); \n          let workingUserList = {\n              names: [myState.name],\n              sessionIdFor: {},\n          }\n      \n          for (const p in ps) {\n              if (p!=='local') {\n                  let thisUserName = ps[p].user_name;\n                  let thisSessionId = ps[p].session_id;\n                  workingUserList.names.push(thisUserName);      //add each user_name with its sessionID to UserList\n                  workingUserList.sessionIdFor[thisUserName] = thisSessionId;\n                  console.log('***ADDING: ' + thisUserName);\n                  if (thisUserName.includes('_Admin')) {\n                      userListIncludesAdmin = true;\n                  } \n              };\n          };\n      \n          userListIncludesAdmin ? console.log('Admin IS present') : console.log('Admin IS NOT present');\n          workingUserList.names.sort();       //alphebetize that list \n          console.log(`here's the userList: ${workingUserList.names}`);\n          resolve([workingUserList,userListIncludesAdmin]);\n      });\n\n   },[callObject.myState]);\n\n\nconst checkIfAdminPresent = useCallback(()=> {\n\n    return new Promise((resolve) => {\n      let adminAlreadyPresent = false;\n      let ps=callObject.participants();\n      const lookForMoreParticipants = setInterval (()=>{  //This interval should be redundant, but checking to make sure a dummy user doesn't pop up first\n        if  (Object.keys(ps).length > 1\n              || (Object.keys(ps).length <= 1 && ps.local.user_name == myState.name)  \n        ) {\n              clearInterval(lookForMoreParticipants);\n              for (const p in ps) {\n                let thisUserName = ps[p].user_name;\n                if (thisUserName.includes('_Admin') && p!=='local') {\n                  adminAlreadyPresent = true;\n                }\n                console.log(`Participant present: ${thisUserName}`);\n              }\n              resolve (adminAlreadyPresent);\n        } else {return;}\n      },500)\n    })\n  },[callObject.myState]);\n\n  \n\n\n  /**\n   * Start listening for participant changes, when the callObject is set.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    const events = [\n      'participant-joined',\n      'participant-updated',\n      'participant-left',\n      'joined-meeting',\n    ];\n\n   \n\n    function handleNewParticipantsState(e) {\n      e && logDailyEvent(e);\n      dispatch({\n        type: PARTICIPANTS_CHANGE,\n        participants: callObject.participants(),\n      });\n\n      if(e && e.action!='participant-updated') {\n          \n          if (e.action==\"participant-joined\" || e.action==\"participant-left\") {\n            window.event=e;\n            \n            setTimeout(update,50);  //wait is necessary to avoid 'dummy' userName\n\n            function update() {\n              getUserList()\n              .then(([workingUserList,userListIncludesAdmin])=>{\n                  setUserList(workingUserList);\n                  setAdminPresent(userListIncludesAdmin);\n                  // if (sessionState.isKnown === null) {\n                  //   if(myState.amAdmin) {   //determine if there's a prior session state\n                  //     setSessionState((prev)=>({\n                  //       ...prev,\n                  //       isKnown: userListIncludesAdmin ? false : true,   //if an admin is already present, make joining admin request a state update\n                  //     }));\n\n                  //     let isKnown = userListIncludesAdmin ? false : true;\n                  //     console.log('just set IS KNOWN to: ' + isKnown);\n                  //   }\n                  // } else {      //for non-admins\n                  //   setSessionState((prev)=>({\n                  //     ...prev,\n                  //     isKnown: false,\n                  //   }));\n                  // }\n                });\n            }\n           \n\n          } else if(e.action=='joined-meeting') {\n            console.log('*****I JOINED THE MEETING');\n            getUserList()\n                .then(([workingUserList,userListIncludesAdmin])=>{\n                  setUserList(workingUserList);\n                  if(myState.amAdmin && !userListIncludesAdmin) {\n                    checkIfAdminPresent().then((adminAlreadyPresent)=>{\n                      setSessionState((prev)=>({\n                        ...prev,\n                        isKnown: adminAlreadyPresent ? false : true,   //if an admin is already present, make joining admin request a state update\n                      }));\n                    })\n                  }\n\n              });\n          }        \n      } \n    }\n\n    // Use initial state\n    handleNewParticipantsState();\n\n    // Listen for changes in state\n    for (const event of events) {\n      callObject.on(event, handleNewParticipantsState);\n    }\n\n    // Stop listening for changes in state\n    return function cleanup() {\n      for (const event of events) {\n        callObject.off(event, handleNewParticipantsState);\n      }\n    };\n  }, [callObject]);\n\n \n\n\n  /**\n   * Start listening for call errors, when the callObject is set.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleCameraErrorEvent(event) {\n      logDailyEvent(event);\n      dispatch({\n        type: CAM_OR_MIC_ERROR,\n        message:\n          (event && event.errorMsg && event.errorMsg.errorMsg) || 'Unknown',\n      });\n    }\n\n    // We're making an assumption here: there is no camera error when callObject\n    // is first assigned.\n\n    callObject.on('camera-error', handleCameraErrorEvent);\n\n    return function cleanup() {\n      callObject.off('camera-error', handleCameraErrorEvent);\n    };\n  }, [callObject]);\n\n\n  \n\n  /**\n   * Start listening for fatal errors, when the callObject is set.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleErrorEvent(e) {\n      logDailyEvent(e);\n      dispatch({\n        type: FATAL_ERROR,\n        message: (e && e.errorMsg) || 'Unknown',\n      });\n    }\n\n    // We're making an assumption here: there is no error when callObject is\n    // first assigned.\n\n    callObject.on('error', handleErrorEvent);\n\n    return function cleanup() {\n      callObject.off('error', handleErrorEvent);\n    };\n  }, [callObject]);\n\n  /**\n   * Start a timer to show the \"click allow\" message, when the component mounts.\n   */\n  useEffect(() => {\n    const t = setTimeout(() => {\n      dispatch({ type: CLICK_ALLOW_TIMEOUT });\n    }, 2500);\n\n    return function cleanup() {\n      clearTimeout(t);\n    };\n  }, []);\n\n  ///todo: fix this\n  // const numberOfSubs = window.currentSubs && window.currentSubs.filter(function (str) {return str.indexOf('_AUDIO') === -1}).filter(function (str) {return str.indexOf('_AUDIO') === -1}).filter(function (str) {return str.indexOf(window.myName) === -1}).length //number of subs, not counting audio-only or my name\n\n\n//   useEffect(()=>{\n// window.numberOfSubs =numberOfSubs;\n// console.log('*****NUMBER OF SUBS:'+numberOfSubs);\n//   },[numberOfSubs])\n\n\n\n \n\n  function getTiles() {\n    let largeTiles = [];\n    let smallTiles = [];\n    Object.entries(callState.callItems).forEach(([id, callItem]) => {\n\n\n      const isAudioOnly = () => {\n        if(!callItem.audioTrackState || !callItem.videoTrackState) {return}\n        return (callItem.audioTrackState.subscribed && !callItem.videoTrackState.subscribed);\n      }\n\n      const isLarge =\n        isScreenShare(id) ||\n        (!isLocal(id) && !containsScreenShare(callState.callItems)) \n        || (isLocal(id) && window.numberOfSubs && window.numberOfSubs>1 && !containsScreenShare(callState.callItems))   //videoTrackState()\n\n        \n      const tile = (\n        <Tile\n          key={id}\n          videoTrackState={callItem.videoTrackState}\n          audioTrackState={callItem.audioTrackState}\n          isLocalPerson={isLocal(id)}\n          isAudioOnly={isAudioOnly()}\n          isLarge={isLarge}\n          disableCornerMessage={isScreenShare(id)}\n          isScreenShare={isScreenShare(id)}\n          // onClick={\n          //   isLocal(id)\n          //     ? null\n          //     : () => {\n          //         sendHello(id);\n          //       }\n          // }\n        />\n      );\n      if (isLarge) {\n        largeTiles.push(tile);\n      } else {\n        smallTiles.push(tile);\n      }\n    });\n    \n    return [largeTiles, smallTiles];\n  }\n\n  const [largeTiles, smallTiles] = getTiles();\n\n  \n  /**\n   * DELETE: Attached tiles objects to window for debugging purposes.\n   */\n  useEffect(() => {\n    // console.log('re-rendered');\n    // console.log('Userlist: ' + window.userList);\n    window.largeTiles = largeTiles;\n    window.smallTales = smallTiles;\n    window.add = function(n=1) {\n      for(let i=0;i<n;i++) {\n        callObject.addFakeParticipant()\n      }\n    };\n    \n  }); \n\n\n   // attach callState to window for debugging\n   useEffect(() => {\n    window.callState = callState;\n  }, [callState]); \n\n\n  const message = getMessage(callState);\n  return (\n    <div className={myState.amAdmin ? \"call-with-sidebar\" : \"call\"}>\n                                      {/* add # of tiles to class name. alternative: {largeTiles.length}*/}\n      <div className={`large-tiles count-${(containsScreenShare(callState.callItems)&&'1')||window.numberOfSubs && window.numberOfSubs+1}`}>   \n        {\n          !message\n            ? largeTiles\n            : null /* Avoid showing large tiles to make room for the message */\n        }\n      </div>\n      <div className=\"small-tiles\">{smallTiles}</div>\n      {message && (\n        <CallMessage\n          header={message.header}\n          detail={message.detail}\n          isError={message.isError}\n        />\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}