{"ast":null,"code":"/*!\n * Mux\n * Copyright(c) 2018 Mux Inc.\n */\nconst Base = require('./base');\n\nconst Video = require('./video/video');\n\nconst Data = require('./data/data');\n\nconst Webhooks = require('./webhooks/webhooks');\n\nconst JWT = require('./utils/jwt');\n/**\n * Mux Class - Provides access to the Mux Video and Mux Data API\n *\n * @extends Base\n * @type {Video}\n * @property {Video} Mux.Video provides access to the Mux Video API\n * @type {Data}\n * @property {Data} Mux.Data provides access to the Mux Data API\n * @type {Webhooks}\n * @property {Webhooks} Mux.Webhooks provides access to verifying Webhooks signatures\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Video, Data, Webhooks } = muxClient;\n *\n * // Create an asset\n * // returns a Promise\n * Video.Assets.create({input: 'https://storage.googleapis.com/muxdemofiles/mux-video-intro.mp4'})\n *   .then((data) => {\n *     assetId = data.id;\n *   });\n *\n * // Create a playback Id for an asset\n * // returns a Promise\n * Video.Assets.createPlaybackId(assetId, { policy: 'public' });\n *\n * // List all of the values across every breakdown for the `aggregate_startup_time` metric\n * // returns a Promise\n * Data.Metrics.breakdown('aggregate_startup_time', { group_by: 'browser' });\n\n * // Verify a webhook signature\n * Webhooks.verifyHeader(body, signature, secret);\n */\n\n\nclass Mux extends Base {\n  /**\n   * Mux Constructor\n   *\n   * @param {string=process.env.MUX_TOKEN_ID} accessToken - Mux API Access Token\n   * @param {string=process.env.MUX_TOKEN_SECRET} secret - Mux API secret\n   * @param {object} options - Optional configuration object\n   * @param {string='https://api.mux.com'} options.baseUrl - Change the base URL for API requests.\n   * @constructor\n   */\n  constructor(accessTokenOrConfig, secret, config) {\n    super(accessTokenOrConfig, secret, config);\n    /** @type {Video} */\n\n    this.Video = new Video(this);\n    /** @type {Data} */\n\n    this.Data = new Data(this);\n  }\n\n}\n/**\n * @ {JWT}\n */\n\n\nMux.JWT = JWT;\nMux.Webhooks = Webhooks;\nMux.default = Mux;\nmodule.exports = Mux;","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test5/node_modules/@mux/mux-node/src/mux.js"],"names":["Base","require","Video","Data","Webhooks","JWT","Mux","constructor","accessTokenOrConfig","secret","config","default","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,eAAD,CAArB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,aAAD,CAApB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,qBAAD,CAAxB;;AACA,MAAMI,GAAG,GAAGJ,OAAO,CAAC,aAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMK,GAAN,SAAkBN,IAAlB,CAAuB;AACrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEO,EAAAA,WAAW,CAACC,mBAAD,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsC;AAC/C,UAAMF,mBAAN,EAA2BC,MAA3B,EAAmCC,MAAnC;AAEA;;AACA,SAAKR,KAAL,GAAa,IAAIA,KAAJ,CAAU,IAAV,CAAb;AAEA;;AACA,SAAKC,IAAL,GAAY,IAAIA,IAAJ,CAAS,IAAT,CAAZ;AACD;;AAlBoB;AAqBvB;AACA;AACA;;;AACAG,GAAG,CAACD,GAAJ,GAAUA,GAAV;AAEAC,GAAG,CAACF,QAAJ,GAAeA,QAAf;AAEAE,GAAG,CAACK,OAAJ,GAAcL,GAAd;AAEAM,MAAM,CAACC,OAAP,GAAiBP,GAAjB","sourcesContent":["/*!\n * Mux\n * Copyright(c) 2018 Mux Inc.\n */\n\nconst Base = require('./base');\nconst Video = require('./video/video');\nconst Data = require('./data/data');\nconst Webhooks = require('./webhooks/webhooks');\nconst JWT = require('./utils/jwt');\n\n/**\n * Mux Class - Provides access to the Mux Video and Mux Data API\n *\n * @extends Base\n * @type {Video}\n * @property {Video} Mux.Video provides access to the Mux Video API\n * @type {Data}\n * @property {Data} Mux.Data provides access to the Mux Data API\n * @type {Webhooks}\n * @property {Webhooks} Mux.Webhooks provides access to verifying Webhooks signatures\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Video, Data, Webhooks } = muxClient;\n *\n * // Create an asset\n * // returns a Promise\n * Video.Assets.create({input: 'https://storage.googleapis.com/muxdemofiles/mux-video-intro.mp4'})\n *   .then((data) => {\n *     assetId = data.id;\n *   });\n *\n * // Create a playback Id for an asset\n * // returns a Promise\n * Video.Assets.createPlaybackId(assetId, { policy: 'public' });\n *\n * // List all of the values across every breakdown for the `aggregate_startup_time` metric\n * // returns a Promise\n * Data.Metrics.breakdown('aggregate_startup_time', { group_by: 'browser' });\n\n * // Verify a webhook signature\n * Webhooks.verifyHeader(body, signature, secret);\n */\nclass Mux extends Base {\n  /**\n   * Mux Constructor\n   *\n   * @param {string=process.env.MUX_TOKEN_ID} accessToken - Mux API Access Token\n   * @param {string=process.env.MUX_TOKEN_SECRET} secret - Mux API secret\n   * @param {object} options - Optional configuration object\n   * @param {string='https://api.mux.com'} options.baseUrl - Change the base URL for API requests.\n   * @constructor\n   */\n  constructor(accessTokenOrConfig, secret, config) {\n    super(accessTokenOrConfig, secret, config);\n\n    /** @type {Video} */\n    this.Video = new Video(this);\n\n    /** @type {Data} */\n    this.Data = new Data(this);\n  }\n}\n\n/**\n * @ {JWT}\n */\nMux.JWT = JWT;\n\nMux.Webhooks = Webhooks;\n\nMux.default = Mux;\n\nmodule.exports = Mux;\n"]},"metadata":{},"sourceType":"script"}