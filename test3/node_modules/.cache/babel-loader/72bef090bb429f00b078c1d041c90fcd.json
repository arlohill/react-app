{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/arlosb/Documents/GitHub/new react app/test1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";// import { useEffect } from \"react\";\n// import SessionContext from '../../SessionContext';\nexport default function setSubscriptions(callObject){var viewMode=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!window.sessionState){return;}console.log('Setting subscriptions...');console.log('****My role is: '+window.myRole);var subscribedTo=0;window.currentSubs=[];//if session is active, set currentSubs according to my role\nif(!viewMode&&window.sessionState.isActive){switch(window.myRole){case'Participant1':window.currentSubs=[];window.sessionState.roleOf.Actor2&&window.currentSubs.push(window.sessionState.roleOf.Actor2);!window.sessionState.roleOf.Actor2&&window.sessionState.roleOf.Participant2&&window.currentSubs.push(window.sessionState.roleOf.Participant2);break;case'Participant2':window.currentSubs=[];window.sessionState.roleOf.Actor1&&window.currentSubs.push(window.sessionState.roleOf.Actor1);!window.sessionState.roleOf.Actor1&&window.sessionState.roleOf.Participant1&&window.currentSubs.push(window.sessionState.roleOf.Participant1);break;case'Actor1':window.currentSubs=[];window.sessionState.roleOf.Participant2&&window.currentSubs.push(window.sessionState.roleOf.Participant2);window.sessionState.roleOf.Participant1&&window.currentSubs.push(window.sessionState.roleOf.Participant1+'_AUDIO');break;case'Actor2':window.currentSubs=[];window.sessionState.roleOf.Participant1&&window.currentSubs.push(window.sessionState.roleOf.Participant1);window.sessionState.roleOf.Participant2&&window.currentSubs.push(window.sessionState.roleOf.Participant2+'_AUDIO');break;case'Attendee':window.currentSubs=[];break;default:window.currentSubs=[];break;}//Add Admin to currentSubs if applicable\nif(window.sessionState.AdminVisible){window.currentSubs.push(\"Admin\");}}if(viewMode){switch(viewMode){case'Room1':window.currentSubs=[];window.sessionState.roleOf.Participant1&&window.currentSubs.push(window.sessionState.roleOf.Participant1);window.sessionState.roleOf.Actor2&&window.currentSubs.push(window.sessionState.roleOf.Actor2);!window.sessionState.roleOf.Actor2&&window.sessionState.roleOf.Participant1&&window.sessionState.roleOf.Participant2&&window.sessionState.roleOf.Actor1&&window.currentSubs.push(window.sessionState.roleOf.Participant2);break;case'Room2':window.currentSubs=[];window.sessionState.roleOf.Participant2&&window.currentSubs.push(window.sessionState.roleOf.Participant2);window.sessionState.roleOf.Actor1&&window.currentSubs.push(window.sessionState.roleOf.Actor1);!window.sessionState.roleOf.Actor1&&window.sessionState.roleOf.Participant1&&window.sessionState.roleOf.Participant2&&window.sessionState.roleOf.Actor2&&window.currentSubs.push(window.sessionState.roleOf.Participant1);break;case'Participants':window.currentSubs=[];window.sessionState.roleOf.Participant1&&window.currentSubs.push(window.sessionState.roleOf.Participant1);window.sessionState.roleOf.Participant2&&window.currentSubs.push(window.sessionState.roleOf.Participant2);break;case'Actors':window.currentSubs=[];window.sessionState.roleOf.Actor1&&window.currentSubs.push(window.sessionState.roleOf.Actor1);window.sessionState.roleOf.Actor2&&window.currentSubs.push(window.sessionState.roleOf.Actor2);break;case'All':window.currentSubs=[];window.sessionState.roleOf.Participant1&&window.currentSubs.push(window.sessionState.roleOf.Participant1);window.sessionState.roleOf.Participant2&&window.currentSubs.push(window.sessionState.roleOf.Participant2);window.sessionState.roleOf.Actor1&&window.currentSubs.push(window.sessionState.roleOf.Actor1);window.sessionState.roleOf.Actor2&&window.currentSubs.push(window.sessionState.roleOf.Actor2);break;case'None':window.currentSubs=[];window.sessionState.roleOf.Participant1&&window.currentSubs.push(window.sessionState.roleOf.Participant1);window.sessionState.roleOf.Participant2&&window.currentSubs.push(window.sessionState.roleOf.Participant2);break;default:window.currentSubs=[];break;}}function setTracks(){return new Promise(function(resolve){//cycle through each participant in meeting\nvar ps=callObject.participants();Object.keys(ps).forEach(function(p){var participant=ps[p];var thisUserName=participant.user_name;if(p==='local'){return;}//if SESSION STATE NOT KNOWN, don't subscribe to anyone yet\nif(!window.sessionState.isKnown){callObject.updateParticipant(participant.session_id,{setSubscribedTracks:false});return;}console.log(\"This username is: \"+thisUserName);//If NOT ACTIVE (and not setting view mode), subscribe to everyone in the meeting\nif(!window.sessionState.isActive&&!viewMode){//audio only if currently Seconding\nif(window.myRole.includes('Actor')){switch(window.myRole){case'Actor1':if(thisUserName==window.sessionState.roleOf.Participant1||thisUserName=='InvisibleScreenShareWidget'){console.log('Subscribing to audio only for: '+thisUserName);callObject.updateParticipant(participant.session_id,{setSubscribedTracks:false});callObject.updateParticipant(participant.session_id,{setSubscribedTracks:{audio:true,video:false,screenVideo:true,screenAudio:true}});}else{console.log('Subscribing to: '+thisUserName);window.currentSubs.push(thisUserName);callObject.updateParticipant(participant.session_id,{setSubscribedTracks:true});subscribedTo++;}break;case'Actor2':if(thisUserName==window.sessionState.roleOf.Participant2||thisUserName=='InvisibleScreenShareWidget'){console.log('Subscribing to audio only for: '+thisUserName);callObject.updateParticipant(participant.session_id,{setSubscribedTracks:false});callObject.updateParticipant(participant.session_id,{setSubscribedTracks:{audio:true,video:false,screenVideo:true,screenAudio:true}});}else{console.log('Subscribing to: '+thisUserName);window.currentSubs.push(thisUserName);callObject.updateParticipant(participant.session_id,{setSubscribedTracks:true});subscribedTo++;}break;default:break;}}// audio and video for everyone else\nelse{// exclude screenshare's in-ear audio stream\nif(thisUserName=='InvisibleScreenShareWidget'){console.log('Not subscribing to: '+thisUserName);callObject.updateParticipant(participant.session_id,{setSubscribedTracks:{audio:false,video:false,screenVideo:true,screenAudio:true}});}else{console.log('Subscribing to: '+thisUserName);window.currentSubs.push(thisUserName);if(!callObject.participants()[participant.session_id].tracks.video.subscribed){callObject.updateParticipant(participant.session_id,{setSubscribedTracks:false});}callObject.updateParticipant(participant.session_id,{setSubscribedTracks:true});subscribedTo++;}}//  else if (thisUserName=='Admin' && window.sessionState.AdminVisible) {\n//     console.log('Subscribing to Admin:');\n//     callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n//     subscribedTo++;\n//     console.log('Subscribed to session id: ' + participant.session_id);\n// } \n}//IF ACTIVE (or selecting viewmode), just subscribe to those listed in currentSubs;\nelse if(window.sessionState.isActive||viewMode){if(window.currentSubs.includes(thisUserName+'_AUDIO')){console.log('Subscribing to audio only for: '+thisUserName);callObject.updateParticipant(participant.session_id,{setSubscribedTracks:{audio:true,video:false,screenVideo:false}});}else if(window.currentSubs.includes(thisUserName)){console.log('Subscribing to: '+thisUserName);callObject.updateParticipant(participant.session_id,{setSubscribedTracks:true});subscribedTo++;}else if(!window.currentSubs.includes(thisUserName)){console.log('NOT subscribing to: '+thisUserName);callObject.updateParticipant(participant.session_id,{setSubscribedTracks:false});}}});resolve();});}setTracks().then(function(){//remove screenshare widget from currentSubs array\nvar index=window.currentSubs.indexOf('InvisibleScreenShareWidget');if(index>-1){window.currentSubs.splice(index,1);}//print subscriptions\nvar iterator=window.currentSubs.values();console.log(\"Currently subscribed to:\");var _iterator=_createForOfIteratorHelper(iterator),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var elements=_step.value;console.log(elements);}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(window.currentSubs.length<1){console.log(\"No one.\");}window.updateCall();viewMode=null;window.updateTray();//if no admin (or admin has left), start asking for state\n// if (adminPresent==false) {\n//     window.sessionState.isKnown=false;\n//     if (typeof(stateRequest)!='undefined') {clearInterval(stateRequest);}\n//     stateRequest = setInterval(getState,2500);\n//     console.log('no Admin present');\n// }\n// if (subscribedTo==0) {\n//     window.isPopulated = false;\n//     document.getElementById('empty-room').style.opacity='1';\n//     if(!!document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\")){document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\").style.visibility='hidden';}\n//     if (window.sessionState.isActive==true) {\n//         document.getElementById('empty-text').innerHTML=\"Hold that thought! üòê <br><br> We're working to fix a connection problem.\"\n//     } else if (window.sessionState.isActive==false) {\n//         document.getElementById('empty-text').innerHTML=\"üëã <br>You're here!<br>Waiting for everyone else...\"\n//     }\n// } else if (subscribedTo>0) {\n//     window.isPopulated = true;\n//     document.getElementById('empty-room').style.opacity='0';\n//     if (document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\")){\n//         document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\").style.visibility='visible';\n//     }\n// }\n});};","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test1/src/hooks/setSubscriptions.js"],"names":["setSubscriptions","callObject","viewMode","window","sessionState","console","log","myRole","subscribedTo","currentSubs","isActive","roleOf","Actor2","push","Participant2","Actor1","Participant1","AdminVisible","setTracks","Promise","resolve","ps","participants","Object","keys","forEach","p","participant","thisUserName","user_name","isKnown","updateParticipant","session_id","setSubscribedTracks","includes","audio","video","screenVideo","screenAudio","tracks","subscribed","then","index","indexOf","splice","iterator","values","elements","length","updateCall","updateTray"],"mappings":"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","sourcesContent":["// import { useEffect } from \"react\";\n// import SessionContext from '../../SessionContext';\n\nexport default function setSubscriptions(callObject,viewMode=null) {\n\n    if (!window.sessionState) {return;}\n\n    console.log('Setting subscriptions...');\n    console.log('****My role is: ' + window.myRole);\n    let subscribedTo=0;\n    window.currentSubs=[];\n    \n    //if session is active, set currentSubs according to my role\n        if (!viewMode && window.sessionState.isActive) {\n            switch (window.myRole) {\n                case 'Participant1':\n                    window.currentSubs=[];\n                    window.sessionState.roleOf.Actor2 && window.currentSubs.push(window.sessionState.roleOf.Actor2);\n                    !window.sessionState.roleOf.Actor2 && window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                    break;\n                case 'Participant2':\n                    window.currentSubs=[];\n                    window.sessionState.roleOf.Actor1 && window.currentSubs.push(window.sessionState.roleOf.Actor1);\n                    !window.sessionState.roleOf.Actor1 && window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                    break;\n                case 'Actor1':\n                    window.currentSubs=[];\n                    window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                    window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1+'_AUDIO');\n                    break;\n                case 'Actor2':\n                    window.currentSubs=[];\n                    window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                    window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2+'_AUDIO');\n                    break;\n                case 'Attendee':\n                    window.currentSubs=[];\n                    break;\n                default:\n                    window.currentSubs=[];\n                    break;\n            }\n            //Add Admin to currentSubs if applicable\n            if (window.sessionState.AdminVisible) {\n            window.currentSubs.push (\"Admin\");\n        }\n    }\n\n    if(viewMode) {\n        switch (viewMode) {\n            case 'Room1':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                window.sessionState.roleOf.Actor2 && window.currentSubs.push(window.sessionState.roleOf.Actor2);\n                !window.sessionState.roleOf.Actor2 && window.sessionState.roleOf.Participant1 && window.sessionState.roleOf.Participant2 && window.sessionState.roleOf.Actor1 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                break;\n            case 'Room2':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                window.sessionState.roleOf.Actor1 && window.currentSubs.push(window.sessionState.roleOf.Actor1);\n                !window.sessionState.roleOf.Actor1 && window.sessionState.roleOf.Participant1 && window.sessionState.roleOf.Participant2 && window.sessionState.roleOf.Actor2 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                break;\n            case 'Participants':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                break;\n            case 'Actors':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Actor1 && window.currentSubs.push(window.sessionState.roleOf.Actor1);\n                window.sessionState.roleOf.Actor2 && window.currentSubs.push(window.sessionState.roleOf.Actor2);\n                break;\n            case 'All':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                window.sessionState.roleOf.Actor1 && window.currentSubs.push(window.sessionState.roleOf.Actor1);\n                window.sessionState.roleOf.Actor2 && window.currentSubs.push(window.sessionState.roleOf.Actor2);\n                break;\n            case 'None':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                break;\n            default:\n                window.currentSubs=[];\n                break;\n        }\n    }\n\n    \n    function setTracks() {\n\n        return new Promise( (resolve) => {\n\n            //cycle through each participant in meeting\n            let ps = callObject.participants();\n            Object.keys(ps).forEach((p) => {\n\n                let participant = ps[p];\n                let thisUserName = participant.user_name;\n\n                if (p === 'local') {\n                    return;\n                } \n\n                //if SESSION STATE NOT KNOWN, don't subscribe to anyone yet\n                if (!window.sessionState.isKnown) {\n                    callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                    return;\n                }\n\n\n\n                console.log(\"This username is: \" +thisUserName);\n                //If NOT ACTIVE (and not setting view mode), subscribe to everyone in the meeting\n                if (!window.sessionState.isActive && !viewMode) {\n\n                    //audio only if currently Seconding\n                    if (window.myRole.includes('Actor')) {\n                        switch (window.myRole) {\n                            case 'Actor1':\n                                    if (thisUserName==window.sessionState.roleOf.Participant1 || thisUserName=='InvisibleScreenShareWidget') {\n                                        console.log('Subscribing to audio only for: ' + thisUserName);\n                                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: true, video: false, screenVideo: true, screenAudio:true}});\n                                    } else {\n                                        console.log('Subscribing to: ' + thisUserName);\n                                        window.currentSubs.push(thisUserName);\n                                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                                        subscribedTo++;\n                                    }\n                                break;\n                            case 'Actor2':\n                                if (thisUserName==window.sessionState.roleOf.Participant2 || thisUserName=='InvisibleScreenShareWidget') {\n                                    console.log('Subscribing to audio only for: ' + thisUserName);\n                                    callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                                    callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: true, video: false, screenVideo: true, screenAudio:true}});\n                                } else {\n                                    console.log('Subscribing to: ' + thisUserName);\n                                    window.currentSubs.push(thisUserName);\n                                    callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                                    subscribedTo++;\n                                }\n                            break;\n                        \n                            default:\n                                break;\n                        }\n                    }\n\n                    // audio and video for everyone else\n                    else {  \n                        // exclude screenshare's in-ear audio stream\n                        if (thisUserName=='InvisibleScreenShareWidget') {\n                            console.log('Not subscribing to: ' + thisUserName);\n                            callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: false, video: false, screenVideo: true, screenAudio: true}});\n\n                        \n                        } else {\n                            console.log('Subscribing to: ' + thisUserName);\n                            window.currentSubs.push(thisUserName);\n                            if (!callObject.participants()[participant.session_id].tracks.video.subscribed){\n                                callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                            }\n                            callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                            subscribedTo++;\n                            }     \n                    }\n\n                    //  else if (thisUserName=='Admin' && window.sessionState.AdminVisible) {\n                    //     console.log('Subscribing to Admin:');\n                    //     callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                    //     subscribedTo++;\n                    //     console.log('Subscribed to session id: ' + participant.session_id);\n                    // } \n\n                } \n\n                //IF ACTIVE (or selecting viewmode), just subscribe to those listed in currentSubs;\n                else if (window.sessionState.isActive || viewMode) {\n                    if(window.currentSubs.includes(thisUserName+'_AUDIO')) {\n                        console.log('Subscribing to audio only for: ' + thisUserName);\n                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: true, video: false, screenVideo: false}});\n                    }\n                    else if(window.currentSubs.includes(thisUserName)) {\n                        console.log('Subscribing to: ' + thisUserName);\n                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                        subscribedTo++;\n                    }\n                    else if (!window.currentSubs.includes(thisUserName)) {\n                        console.log('NOT subscribing to: ' + thisUserName);\n                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                    }\n                }\n            });\n            resolve()\n        })\n    }\n    \n    setTracks().then(()=>{\n        //remove screenshare widget from currentSubs array\n        \n        const index = window.currentSubs.indexOf('InvisibleScreenShareWidget');\n        if (index > -1) {\n          window.currentSubs.splice(index, 1);\n        }\n    //print subscriptions\n\n    var iterator = window.currentSubs.values();\n    console.log(\"Currently subscribed to:\");\n    for (let elements of iterator) { \n        console.log(elements); \n    } \n    if (window.currentSubs.length < 1) {\n        console.log (\"No one.\")\n    }\n    window.updateCall();\n    viewMode=null;\n    window.updateTray();\n\n\n        //if no admin (or admin has left), start asking for state\n        // if (adminPresent==false) {\n        //     window.sessionState.isKnown=false;\n        //     if (typeof(stateRequest)!='undefined') {clearInterval(stateRequest);}\n        //     stateRequest = setInterval(getState,2500);\n        //     console.log('no Admin present');\n        // }\n        // if (subscribedTo==0) {\n        //     window.isPopulated = false;\n        //     document.getElementById('empty-room').style.opacity='1';\n        //     if(!!document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\")){document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\").style.visibility='hidden';}\n        //     if (window.sessionState.isActive==true) {\n        //         document.getElementById('empty-text').innerHTML=\"Hold that thought! üòê <br><br> We're working to fix a connection problem.\"\n        //     } else if (window.sessionState.isActive==false) {\n        //         document.getElementById('empty-text').innerHTML=\"üëã <br>You're here!<br>Waiting for everyone else...\"\n\n        //     }\n        // } else if (subscribedTo>0) {\n        //     window.isPopulated = true;\n        //     document.getElementById('empty-room').style.opacity='0';\n        //     if (document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\")){\n        //         document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\").style.visibility='visible';\n        //     }\n\n        // }\n\n    })\n\n    \n   \n};\n\n"]},"metadata":{},"sourceType":"module"}