{"ast":null,"code":"var _jsxFileName = \"/Users/arlosb/Documents/GitHub/new react app/test3/src/components/RoleSelector/RoleSelector.js\";\nimport React, { useContext, useState } from 'react';\nimport './RoleSelector.css';\nimport setSubscriptions from '../../hooks/setSubscriptions';\nimport CallObjectContext from '../../CallObjectContext';\nexport default function RoleSelector(props) {\n  const callObject = useContext(CallObjectContext);\n\n  const setSubs = () => {\n    setSubscriptions(callObject);\n  };\n\n  const role = props.role; // const [selectedOption, setSelectedOption] = useState('');\n\n  const sendState = () => {\n    console.log(\"Sending current state...\");\n    callObject.sendAppMessage(window.sessionState, '*');\n  };\n\n  let handleRoleChange = e => {\n    window.sessionState.roleOf[e.target.id] = e.target.value;\n    console.log(e.target.id + ' is now: ' + window.sessionState.roleOf[e.target.id]);\n    sendState();\n    let myNewRole = 'Attendee'; //default, if no role assigned\n\n    for (const key in window.sessionState.roleOf) {\n      if (window.sessionState.roleOf[key] == window.myName) {\n        myNewRole = key;\n      }\n    }\n\n    if (myNewRole != window.myRole) {\n      window.myRole = myNewRole;\n\n      if (window.myRole.includes('1')) {\n        window.myNumber = 1;\n      } else if (window.myRole.includes('2')) {\n        window.myNumber = 2;\n      }\n    }\n\n    if (window.sessionState.isActive) {// activateSession();  //rebuild UI for the newly assigned role, mid-session\n    }\n\n    setSubs();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"selector\",\n    id: role,\n    onChange: handleRoleChange,\n    value: window.sessionState.roleOf[role],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), window.userList && window.userList.length > 0 && window.userList.map(user => /*#__PURE__*/React.createElement(\"option\", {\n    value: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 95\n    }\n  }, user))));\n}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test3/src/components/RoleSelector/RoleSelector.js"],"names":["React","useContext","useState","setSubscriptions","CallObjectContext","RoleSelector","props","callObject","setSubs","role","sendState","console","log","sendAppMessage","window","sessionState","handleRoleChange","e","roleOf","target","id","value","myNewRole","key","myName","myRole","includes","myNumber","isActive","userList","length","map","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,oBAAP;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AAKA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,QAAMC,UAAU,GAAGN,UAAU,CAACG,iBAAD,CAA7B;;AACA,QAAMI,OAAO,GAAG,MAAM;AAACL,IAAAA,gBAAgB,CAACI,UAAD,CAAhB;AAA6B,GAApD;;AACA,QAAME,IAAI,GAAGH,KAAK,CAACG,IAAnB,CAHwC,CAIxC;;AAGA,QAAMC,SAAS,GAAG,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAa,0BAAb;AACAL,IAAAA,UAAU,CAACM,cAAX,CAA0BC,MAAM,CAACC,YAAjC,EAA+C,GAA/C;AACH,GAHD;;AAMA,MAAIC,gBAAgB,GAAIC,CAAD,IAAO;AAC1BH,IAAAA,MAAM,CAACC,YAAP,CAAoBG,MAApB,CAA2BD,CAAC,CAACE,MAAF,CAASC,EAApC,IAAwCH,CAAC,CAACE,MAAF,CAASE,KAAjD;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAaK,CAAC,CAACE,MAAF,CAASC,EAAT,GAAc,WAAd,GAA4BN,MAAM,CAACC,YAAP,CAAoBG,MAApB,CAA2BD,CAAC,CAACE,MAAF,CAASC,EAApC,CAAzC;AACAV,IAAAA,SAAS;AAET,QAAIY,SAAS,GAAG,UAAhB,CAL0B,CAKE;;AAC5B,SAAK,MAAMC,GAAX,IAAkBT,MAAM,CAACC,YAAP,CAAoBG,MAAtC,EAA8C;AAC1C,UAAGJ,MAAM,CAACC,YAAP,CAAoBG,MAApB,CAA2BK,GAA3B,KAAiCT,MAAM,CAACU,MAA3C,EAAmD;AAC/CF,QAAAA,SAAS,GAAGC,GAAZ;AACH;AACJ;;AACD,QAAID,SAAS,IAAER,MAAM,CAACW,MAAtB,EAA8B;AAC1BX,MAAAA,MAAM,CAACW,MAAP,GAAgBH,SAAhB;;AACE,UAAIR,MAAM,CAACW,MAAP,CAAcC,QAAd,CAAuB,GAAvB,CAAJ,EAAiC;AAC7BZ,QAAAA,MAAM,CAACa,QAAP,GAAgB,CAAhB;AACH,OAFD,MAEO,IAAIb,MAAM,CAACW,MAAP,CAAcC,QAAd,CAAuB,GAAvB,CAAJ,EAAiC;AACpCZ,QAAAA,MAAM,CAACa,QAAP,GAAgB,CAAhB;AACH;AACJ;;AACC,QAAGb,MAAM,CAACC,YAAP,CAAoBa,QAAvB,EAAgC,CAC5B;AACH;;AACDpB,IAAAA,OAAO;AACZ,GAvBH;;AA0BA,sBAKA;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,EAAE,EAAEC,IAAjC;AAAuC,IAAA,QAAQ,EAAEO,gBAAjD;AAAmE,IAAA,KAAK,EAAEF,MAAM,CAACC,YAAP,CAAoBG,MAApB,CAA2BT,IAA3B,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEKK,MAAM,CAACe,QAAP,IAAmBf,MAAM,CAACe,QAAP,CAAgBC,MAAhB,GAAuB,CAA1C,IAA+ChB,MAAM,CAACe,QAAP,CAAgBE,GAAhB,CAAqBC,IAAD,iBAAU;AAAQ,IAAA,KAAK,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,IAAtB,CAA9B,CAFpD,CADR,CALA;AAcD","sourcesContent":["import React, { useContext, useState } from 'react';\nimport './RoleSelector.css';\nimport setSubscriptions from '../../hooks/setSubscriptions';\nimport CallObjectContext from '../../CallObjectContext';\n\n\n\n\nexport default function RoleSelector(props) {\n    const callObject = useContext(CallObjectContext);\n    const setSubs = () => {setSubscriptions(callObject)};  \n    const role = props.role;\n    // const [selectedOption, setSelectedOption] = useState('');\n\n    \n    const sendState = () => {\n        console.log (\"Sending current state...\");\n        callObject.sendAppMessage(window.sessionState, '*'); \n    }\n\n\n    let handleRoleChange = (e) => {\n        window.sessionState.roleOf[e.target.id]=e.target.value;\n        console.log (e.target.id + ' is now: ' + window.sessionState.roleOf[e.target.id]);\n        sendState();\n    \n        let myNewRole = 'Attendee'; //default, if no role assigned\n        for (const key in window.sessionState.roleOf) {\n            if(window.sessionState.roleOf[key]==window.myName) {\n                myNewRole = key;\n            }\n        }\n        if (myNewRole!=window.myRole) {\n            window.myRole = myNewRole;\n              if (window.myRole.includes('1')) {\n                  window.myNumber=1;\n              } else if (window.myRole.includes('2')) {\n                  window.myNumber=2;\n              }\n          }\n            if(window.sessionState.isActive){\n                // activateSession();  //rebuild UI for the newly assigned role, mid-session\n            } \n            setSubs();\n      }\n\n\n    return (\n\n\n\n\n    <form className='dropdown'>\n            <select className='selector' id={role} onChange={handleRoleChange} value={window.sessionState.roleOf[role]}>                    \n            <option value={null}></option>\n                {window.userList && window.userList.length>0 && window.userList.map((user) => <option value={user}>{user}</option>)}\n                </select>\n    </form>\n                    \n\n    );\n  }\n\n        "]},"metadata":{},"sourceType":"module"}