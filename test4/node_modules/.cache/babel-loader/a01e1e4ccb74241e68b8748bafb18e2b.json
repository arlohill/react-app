{"ast":null,"code":"var _jsxFileName = \"/Users/arlosb/Documents/GitHub/new react app/test4/src/components/General/Haircheck/Haircheck.js\";\nimport React, { useEffect, useRef, useContext, useState, useMemo } from 'react'; // import './Haircheck.css';\n\nimport MyContext from '../../../MyContext';\nimport Button from '@custom/shared/components/Button';\nimport { DEVICE_MODAL } from './Shared/DeviceSelectModal';\nimport { TextInput } from './Shared/Input'; // import Loader from '@custom/shared/components/Loader';\n// import MuteButton from '@custom/shared/components/MuteButton';\n\nimport Tile from './Shared/Tile';\nimport { ACCESS_STATE_LOBBY } from './Shared/constants';\nimport { useCallState } from './Shared/CallProvider';\nimport { useMediaDevices } from './Shared/MediaDeviceProvider';\nimport { useParticipants } from './Shared/ParticipantsProvider';\nimport { useUIState } from './Shared/UIStateProvider';\nimport { DEVICE_STATE_BLOCKED, DEVICE_STATE_NOT_FOUND, DEVICE_STATE_IN_USE, DEVICE_STATE_PENDING, DEVICE_STATE_LOADING, DEVICE_STATE_GRANTED } from './Shared/useDevices';\nimport IconSettings from './Shared/settings-sm';\nimport { useDeepCompareMemo } from 'use-deep-compare';\n/**\n * Hair check\n * ---\n * - Setup local media devices to see how you look / sound\n * - Toggle mute state of camera and mic\n * - Set user name and join call / request access\n */\n\nexport const HairCheck = props => {\n  const {\n    callObject,\n    join\n  } = useCallState();\n  const {\n    localParticipant\n  } = useParticipants();\n  const {\n    deviceState,\n    camError,\n    micError,\n    isCamMuted,\n    isMicMuted\n  } = useMediaDevices();\n  const {\n    openModal\n  } = useUIState();\n  const [waiting, setWaiting] = useState(false);\n  const [joining, setJoining] = useState(false);\n  const [denied, setDenied] = useState();\n  const [userName, setUserName] = useState('');\n  const begin = props.onClick; // Initialise devices (even though we're not yet in a call)\n\n  useEffect(() => {\n    if (!callObject) return;\n    callObject.startCamera();\n  }, [callObject]);\n\n  const joinCall = async () => {\n    if (!callObject) return; // Disable join controls\n\n    setJoining(true); // Set the local participants name\n\n    await callObject.setUserName(userName); // Async request access (this will block until the call owner responds to the knock)\n\n    const {\n      access\n    } = callObject.accessState();\n    await callObject.join(); // If we we're in the lobby, wait for the owner to let us in\n\n    if ((access === null || access === void 0 ? void 0 : access.level) === ACCESS_STATE_LOBBY) {\n      setWaiting(true);\n      const {\n        granted\n      } = await callObject.requestAccess({\n        name: userName,\n        access: {\n          level: 'full'\n        }\n      });\n\n      if (granted) {\n        // Note: we don't have to do any thing here as the call state will mutate\n        console.log('👋 Access granted');\n      } else {\n        console.log('❌ Access denied');\n        setDenied(true);\n      }\n    }\n  }; // Memoize the to prevent unnecassary re-renders\n\n\n  const tileMemo = useDeepCompareMemo(() => /*#__PURE__*/React.createElement(Tile, {\n    participant: localParticipant,\n    mirrored: true,\n    showAvatar: true,\n    showName: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), [localParticipant]);\n  const isLoading = useMemo(() => deviceState === DEVICE_STATE_LOADING, [deviceState]);\n  const hasError = useMemo(() => {\n    if (!deviceState || [DEVICE_STATE_LOADING, DEVICE_STATE_PENDING, DEVICE_STATE_GRANTED].includes(deviceState)) {\n      return false;\n    }\n\n    return true;\n  }, [deviceState]);\n  const camErrorVerbose = useMemo(() => {\n    switch (camError) {\n      case DEVICE_STATE_BLOCKED:\n        return 'Camera blocked by user';\n\n      case DEVICE_STATE_NOT_FOUND:\n        return 'Camera not found';\n\n      case DEVICE_STATE_IN_USE:\n        return 'Device in use';\n\n      default:\n        return 'unknown';\n    }\n  }, [camError]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"haircheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/daily-logo.svg\",\n    alt: \"Daily.co\",\n    width: \"132\",\n    height: \"58\",\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Ready to join?\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"device-button\",\n    size: \"medium-square\",\n    variant: \"blur\",\n    onClick: () => openModal(DEVICE_MODAL),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconSettings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  })), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"Loading devices, please wait...\"), hasError && /*#__PURE__*/React.createElement(React.Fragment, null, camError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, camErrorVerbose), micError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, micError))), tileMemo), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, waiting ? {\n    /* <div className=\"waiting\">\n     <Loader />\n     {denied ? (\n       <span>Call owner denied request</span>\n     ) : (\n       <span>Waiting for host to grant access</span>\n     )}\n    </div> */\n  } : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextInput, {\n    placeholder: \"Enter display name\",\n    variant: \"dark\",\n    disabled: joining,\n    onChange: e => setUserName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: joining || userName.length < 3,\n    onClick: () => joinCall(userName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, \"Join call\"))))));\n};\nexport default HairCheck; //   if (parent.myRole=='Actor') {\n//     document.getElementById('instructions').remove();\n//     document.getElementById('actor-instructions').style.visibility='visible';\n//     let qrCode = '../images/Audio' + parent.myNumber + '.png';\n//     document.getElementById('QR-code').src=qrCode;\n//   }\n\n/**\n * Props:\n * -\n//  * -\n//  */\n//  export default function StartScreen(props) {\n//     const userIDEl = useRef(null);\n//     const [showMicSettings,setShowMicSettings] = useState(false);\n//     const [showCamSettings,setShowCamSettings] = useState(false);\n//     const begin = props.onClick;\n//     const lobbyVideo = useRef(null);\n//     const micCaret = React.createRef();\n//     const micSettings = React.createRef();\n//     const camCaret = React.createRef();\n//     const camSettings = React.createRef();\n//     const [initialInputs,setInitialInputs] = useState(null);\n//     const [hasUserMedia,setHasUserMedia] = useState(true);\n//     const { myStateArray, \n//       setName, \n//       setRole,\n//       setUserList,\n//       setViewMode,\n//       setCamOnAtSessionStart,\n//       setMicOnAtSessionStart,\n//       setAmAdmin, \n//       setNumber,\n//     } = useContext(MyContext);\n//     const [ myState,setMyState ] = myStateArray;\n//     useEffect(()=> {\n//       document.addEventListener(\"mousedown\", handleClickOutside);\n//       return function cleanup() {\n//           document.removeEventListener(\"mousedown\", handleClickOutside);\n//           };\n//     })\n//     const handleClickOutside = (event) => {\n//       console.log('handling click');\n//       if (micSettings.current &&\n//         !micSettings.current.contains(event.target) &&\n//         !micCaret.current.contains(event.target)\n//       ) {\n//         setShowMicSettings(false);\n//       } else if (camSettings.current &&\n//         !camSettings.current.contains(event.target) &&\n//         !camCaret.current.contains(event.target)\n//       ) {\n//         setShowCamSettings(false);\n//       } \n//     }\n//   function setMyName() {\n//       console.log('setting user ID as ' + myState.name);\n//       if (myState.name === '' || myState.name==='Your first name' || myState.name.length<=1) {\n//         alert('Please enter your name to help your partner identify you.')\n//       } else {\n//         myState.name = myState.role === 'Admin' ? myState.name + '_Admin' : myState.name; //apend '_Admin\" to my name if I'm an admin\n//         window.myName=myState.name; //todo: delete. for debugging purposes.\n//         begin();\n//       }\n//   }\n// useEffect(()=>{\n//   navigator.mediaDevices.getUserMedia({audio:true,video:{width: 1280,height: 720}}).then((mediaStream)=>{\n//     if(mediaStream){\n//       window.mediaStream = mediaStream;\n//       let localAudio = mediaStream.getAudioTracks()[0];\n//       let localVideo = mediaStream.getVideoTracks()[0];  \n//       setInitialInputs([localAudio,localVideo]);\n//       window.localAudio=localAudio;\n//       setHasUserMedia(true);\n//     } else {\n//       setHasUserMedia(false);\n//     }\n//   }).catch( err => {\n//     console.log(\"You got an error:\" + err);\n//     setHasUserMedia(false);\n// });\n// }\n// ,[])\n// useEffect(()=>{\n//   initialInputs && lobbyVideo.current && (lobbyVideo.current.srcObject=new MediaStream(initialInputs));\n//   lobbyVideo.current.muted=true;\n//   window.initialInputs=initialInputs;\n// },[initialInputs]);\n//         // if(localAudio && localAudio.length > 0)\n//         //     {\n//         //       newCallObject.join({ url, userName:window.myName, audioSource: localSrc[0]});\n//         //     }\n//         //     else {}:\n//   const handleChange = e => {\n//     let newName = e.target.value;\n//     setName(newName);\n// }\n//     return (\n//     <div className='container'>\n//         <div className='start-screen-background'></div>\n//         <div className='instructions'> \n//             <div className='fixed-width'>\n//                 <h2>Welcome to SecondBody.</h2>\n//                 <div style={{position:'relative', marginLeft:'180px', marginRight:'180px', padding: '20px', paddingTop:'40px', border: '4px solid whitesmoke', backgroundColor:'white'}}>\n//                       <div style={{background:'white',opacity:'1',zIndex:'1000'}}>\n//                 {hasUserMedia ? \n//                     <video className='lobby-video' autoPlay={true} ref={lobbyVideo}/>\n//                     :\n//                     <p style={{height:'198px',width:'352px',borderRadius:'20px',background:'black',margin:'auto',color:'white',fontWeight:'bolder', boxSizing:'border-box',padding:'24px',border:'2px yellow solid'}}>\n//                     ❌ Your camera / mic is blocked ❌<br/><br/>Please give this site access to your camera and mic, and then <u style={{cursor:'pointer'}} onClick={(()=>{window.location.reload()})}>refresh the page.</u>\n//                     <br/><br/>\n//                     How?\n//                     <br/>\n//                     <ul>\n//                       <li>\n//                           <a target='_blank' href='https://downloads.intercomcdn.com/i/o/193872927/17dc7d06694d2c9bcd47b17a/Web+Meeting+Permissions+Blocked+Modal.jpg?'>\n//                           Option 1\n//                           </a>\n//                       </li>\n//                       <li>\n//                           <a href={'https://youtu.be/GceAjizU5WU?t=39'}  target='_blank'>Option 2</a>\n//                       </li>\n//                       </ul>\n//                       </p>\n//                   }\n//              {/* <img src={Unblock} style={{width:'100px'}} /> */}\n//                       {lobbyVideo.current && hasUserMedia && (\n//                           <div style={{position:'relative',display:'flex',flexDirection:'row',justifyContent:'center',bottom:'40px', width:'250px',height:'0px',margin:'auto'}}>\n//                               <div >\n//                                 <p className=\"selector-button\" onClick={()=>{setShowCamSettings(!showCamSettings)}} ref={camCaret}>Select Camera ^</p>\n//                                     {showCamSettings ? \n//                                     (<div onClick={()=>setShowCamSettings(false)}style={{position:'relative',bottom:'0px',left:'80px'}}>\n//                                       <InputSelector type='video' page='intro' inputs={[initialInputs,setInitialInputs]} ref={camSettings} />\n//                                     </div>)\n//                                     : \n//                                     null}\n//                               </div>\n//                               <div style={{width:'15px'}}></div>\n//                               <div>\n//                                 <p className=\"selector-button\" onClick={()=>{setShowMicSettings(!showMicSettings)}} ref={micCaret}>Select Mic ^</p>\n//                                     {showMicSettings ? \n//                                       (<div onClick={()=>setShowMicSettings(false)} style={{position:'relative',bottom:'0px',left:'72px',overflowY:'visible'}}>\n//                                         <InputSelector type='audio' page='intro' ref={micSettings}  inputs={[initialInputs,setInitialInputs]}/>\n//                                       </div>)\n//                                     : \n//                                     null}\n//                               </div>\n//                           </div>\n//                       )}\n//                   </div>\n//                  { hasUserMedia && (\n//                     <h4 className='signin'>\n//                         <form onSubmit={(e)=>e.preventDefault()}>\n//                             <input type=\"text\" autoComplete=\"off\" style={{backgroundColor: 'rgb(230, 240, 249)', fontSize:'15px', width: '200px', height: '30px', textAlign:'center', fontFamily:'poppins'}} ref={userIDEl} value={myState.name} onFocus={()=> {if (myState.name==='Your first name') {setName('')}}} onChange={e=>handleChange(e)} /><br/><br/>\n//                             <input className='new-card' style={{width:'150px', color:'#1b8bc4', fontSize: '17px'}} type=\"submit\" type=\"submit\" value='Enter session' onClick={setMyName} />\n//                         </form>\n//                         <br/>\n//                     </h4>\n//                   )}\n//                 </div>\n//             </div>\n//         </div>\n//     </div>\n//     );\n//   }","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test4/src/components/General/Haircheck/Haircheck.js"],"names":["React","useEffect","useRef","useContext","useState","useMemo","MyContext","Button","DEVICE_MODAL","TextInput","Tile","ACCESS_STATE_LOBBY","useCallState","useMediaDevices","useParticipants","useUIState","DEVICE_STATE_BLOCKED","DEVICE_STATE_NOT_FOUND","DEVICE_STATE_IN_USE","DEVICE_STATE_PENDING","DEVICE_STATE_LOADING","DEVICE_STATE_GRANTED","IconSettings","useDeepCompareMemo","HairCheck","props","callObject","join","localParticipant","deviceState","camError","micError","isCamMuted","isMicMuted","openModal","waiting","setWaiting","joining","setJoining","denied","setDenied","userName","setUserName","begin","onClick","startCamera","joinCall","access","accessState","level","granted","requestAccess","name","console","log","tileMemo","isLoading","hasError","includes","camErrorVerbose","e","target","value","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useContext, useState, useMemo } from 'react';\n// import './Haircheck.css';\nimport MyContext from '../../../MyContext';\nimport Button from '@custom/shared/components/Button';\nimport { DEVICE_MODAL } from './Shared/DeviceSelectModal';\nimport { TextInput } from './Shared/Input';\n// import Loader from '@custom/shared/components/Loader';\n// import MuteButton from '@custom/shared/components/MuteButton';\nimport Tile from './Shared/Tile';\nimport { ACCESS_STATE_LOBBY } from './Shared/constants';\nimport { useCallState } from './Shared/CallProvider';\nimport { useMediaDevices } from './Shared/MediaDeviceProvider';\nimport { useParticipants } from './Shared/ParticipantsProvider';\nimport { useUIState } from './Shared/UIStateProvider';\nimport {\n  DEVICE_STATE_BLOCKED,\n  DEVICE_STATE_NOT_FOUND,\n  DEVICE_STATE_IN_USE,\n  DEVICE_STATE_PENDING,\n  DEVICE_STATE_LOADING,\n  DEVICE_STATE_GRANTED,\n} from './Shared/useDevices';\nimport IconSettings from './Shared/settings-sm';\n\nimport { useDeepCompareMemo } from 'use-deep-compare';\n/**\n * Hair check\n * ---\n * - Setup local media devices to see how you look / sound\n * - Toggle mute state of camera and mic\n * - Set user name and join call / request access\n */\n export const HairCheck = (props) => {\n  const { callObject, join } = useCallState();\n  const { localParticipant } = useParticipants();\n  const { deviceState, camError, micError, isCamMuted, isMicMuted } =\n    useMediaDevices();\n  const { openModal } = useUIState();\n  const [waiting, setWaiting] = useState(false);\n  const [joining, setJoining] = useState(false);\n  const [denied, setDenied] = useState();\n  const [userName, setUserName] = useState('');\n  const begin = props.onClick;\n\n\n  // Initialise devices (even though we're not yet in a call)\n  useEffect(() => {\n    if (!callObject) return;\n    callObject.startCamera();\n  }, [callObject]);\n\n  const joinCall = async () => {\n    if (!callObject) return;\n\n    // Disable join controls\n    setJoining(true);\n\n    // Set the local participants name\n    await callObject.setUserName(userName);\n\n    // Async request access (this will block until the call owner responds to the knock)\n    const { access } = callObject.accessState();\n    await callObject.join();\n\n    // If we we're in the lobby, wait for the owner to let us in\n    if (access?.level === ACCESS_STATE_LOBBY) {\n      setWaiting(true);\n      const { granted } = await callObject.requestAccess({\n        name: userName,\n        access: {\n          level: 'full',\n        },\n      });\n\n      if (granted) {\n        // Note: we don't have to do any thing here as the call state will mutate\n        console.log('👋 Access granted');\n      } else {\n        console.log('❌ Access denied');\n        setDenied(true);\n      }\n    }\n  };\n\n  // Memoize the to prevent unnecassary re-renders\n  const tileMemo = useDeepCompareMemo(\n    () => (\n      <Tile\n        participant={localParticipant}\n        mirrored\n        showAvatar\n        showName={false}\n      />\n    ),\n    [localParticipant]\n  );\n\n  const isLoading = useMemo(\n    () => deviceState === DEVICE_STATE_LOADING,\n    [deviceState]\n  );\n\n  const hasError = useMemo(() => {\n    if (\n      !deviceState ||\n      [\n        DEVICE_STATE_LOADING,\n        DEVICE_STATE_PENDING,\n        DEVICE_STATE_GRANTED,\n      ].includes(deviceState)\n    ) {\n      return false;\n    }\n    return true;\n  }, [deviceState]);\n\n  const camErrorVerbose = useMemo(() => {\n    switch (camError) {\n      case DEVICE_STATE_BLOCKED:\n        return 'Camera blocked by user';\n      case DEVICE_STATE_NOT_FOUND:\n        return 'Camera not found';\n      case DEVICE_STATE_IN_USE:\n        return 'Device in use';\n      default:\n        return 'unknown';\n    }\n  }, [camError]);\n\n  return (\n    <>\n      <main className=\"haircheck\">\n        <img\n          src=\"/assets/daily-logo.svg\"\n          alt=\"Daily.co\"\n          width=\"132\"\n          height=\"58\"\n          className=\"logo\"\n        />\n        <div className=\"panel\">\n          <header>\n            <h2>Ready to join?</h2>\n          </header>\n          <div className=\"tile-container\">\n            <div className=\"content\">\n              <Button\n                className=\"device-button\"\n                size=\"medium-square\"\n                variant=\"blur\"\n                onClick={() => openModal(DEVICE_MODAL)}\n              >\n                <IconSettings />\n              </Button>\n\n              {isLoading && (\n                <div className=\"overlay-message\">\n                  Loading devices, please wait...\n                </div>\n              )}\n              {hasError && (\n                <>\n                  {camError && (\n                    <div className=\"overlay-message\">{camErrorVerbose}</div>\n                  )}\n                  {micError && (\n                    <div className=\"overlay-message\">{micError}</div>\n                  )}\n                </>\n              )}\n            </div>\n            {/* <div className=\"mute-buttons\">\n              <MuteButton isMuted={isCamMuted} />\n              <MuteButton mic isMuted={isMicMuted} />\n            </div> */}\n            {tileMemo}\n          </div>\n          <footer>\n            {waiting ? (\n              {/* <div className=\"waiting\">\n                <Loader />\n                {denied ? (\n                  <span>Call owner denied request</span>\n                ) : (\n                  <span>Waiting for host to grant access</span>\n                )}\n              </div> */}\n            ) : (\n              <>\n                <TextInput\n                  placeholder=\"Enter display name\"\n                  variant=\"dark\"\n                  disabled={joining}\n                  onChange={(e) => setUserName(e.target.value)}\n                />\n                <Button\n                  disabled={joining || userName.length < 3}\n                  onClick={() => joinCall(userName)}\n                >\n                  Join call\n                </Button>\n              </>\n            )}\n          </footer>\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default HairCheck;\n\n\n//   if (parent.myRole=='Actor') {\n//     document.getElementById('instructions').remove();\n//     document.getElementById('actor-instructions').style.visibility='visible';\n//     let qrCode = '../images/Audio' + parent.myNumber + '.png';\n//     document.getElementById('QR-code').src=qrCode;\n//   }\n\n\n/**\n * Props:\n * -\n//  * -\n//  */\n//  export default function StartScreen(props) {\n//     const userIDEl = useRef(null);\n//     const [showMicSettings,setShowMicSettings] = useState(false);\n//     const [showCamSettings,setShowCamSettings] = useState(false);\n//     const begin = props.onClick;\n//     const lobbyVideo = useRef(null);\n//     const micCaret = React.createRef();\n//     const micSettings = React.createRef();\n//     const camCaret = React.createRef();\n//     const camSettings = React.createRef();\n//     const [initialInputs,setInitialInputs] = useState(null);\n//     const [hasUserMedia,setHasUserMedia] = useState(true);\n//     const { myStateArray, \n//       setName, \n//       setRole,\n//       setUserList,\n//       setViewMode,\n//       setCamOnAtSessionStart,\n//       setMicOnAtSessionStart,\n//       setAmAdmin, \n//       setNumber,\n//     } = useContext(MyContext);\n//     const [ myState,setMyState ] = myStateArray;\n  \n\n//     useEffect(()=> {\n\n//       document.addEventListener(\"mousedown\", handleClickOutside);\n  \n  \n//       return function cleanup() {\n//           document.removeEventListener(\"mousedown\", handleClickOutside);\n//           };\n//     })\n\n//     const handleClickOutside = (event) => {\n//       console.log('handling click');\n//       if (micSettings.current &&\n//         !micSettings.current.contains(event.target) &&\n//         !micCaret.current.contains(event.target)\n//       ) {\n//         setShowMicSettings(false);\n//       } else if (camSettings.current &&\n//         !camSettings.current.contains(event.target) &&\n//         !camCaret.current.contains(event.target)\n//       ) {\n//         setShowCamSettings(false);\n//       } \n      \n//     }\n \n    \n\n//   function setMyName() {\n//       console.log('setting user ID as ' + myState.name);\n//       if (myState.name === '' || myState.name==='Your first name' || myState.name.length<=1) {\n//         alert('Please enter your name to help your partner identify you.')\n//       } else {\n//         myState.name = myState.role === 'Admin' ? myState.name + '_Admin' : myState.name; //apend '_Admin\" to my name if I'm an admin\n//         window.myName=myState.name; //todo: delete. for debugging purposes.\n//         begin();\n//       }\n//   }\n// useEffect(()=>{\n//   navigator.mediaDevices.getUserMedia({audio:true,video:{width: 1280,height: 720}}).then((mediaStream)=>{\n//     if(mediaStream){\n//       window.mediaStream = mediaStream;\n//       let localAudio = mediaStream.getAudioTracks()[0];\n//       let localVideo = mediaStream.getVideoTracks()[0];  \n//       setInitialInputs([localAudio,localVideo]);\n//       window.localAudio=localAudio;\n//       setHasUserMedia(true);\n//     } else {\n//       setHasUserMedia(false);\n//     }\n//   }).catch( err => {\n//     console.log(\"You got an error:\" + err);\n//     setHasUserMedia(false);\n// });\n\n// }\n\n// ,[])\n\n// useEffect(()=>{\n//   initialInputs && lobbyVideo.current && (lobbyVideo.current.srcObject=new MediaStream(initialInputs));\n//   lobbyVideo.current.muted=true;\n//   window.initialInputs=initialInputs;\n// },[initialInputs]);\n    \n\n//         // if(localAudio && localAudio.length > 0)\n//         //     {\n//         //       newCallObject.join({ url, userName:window.myName, audioSource: localSrc[0]});\n//         //     }\n//         //     else {}:\n\n  \n//   const handleChange = e => {\n//     let newName = e.target.value;\n//     setName(newName);\n// }\n\n\n//     return (\n//     <div className='container'>\n\n//         <div className='start-screen-background'></div>\n  \n//         <div className='instructions'> \n//             <div className='fixed-width'>\n          \n//                 <h2>Welcome to SecondBody.</h2>\n\n               \n\n//                 <div style={{position:'relative', marginLeft:'180px', marginRight:'180px', padding: '20px', paddingTop:'40px', border: '4px solid whitesmoke', backgroundColor:'white'}}>\n//                       <div style={{background:'white',opacity:'1',zIndex:'1000'}}>\n                      \n                      \n//                 {hasUserMedia ? \n\n//                     <video className='lobby-video' autoPlay={true} ref={lobbyVideo}/>\n//                     :\n//                     <p style={{height:'198px',width:'352px',borderRadius:'20px',background:'black',margin:'auto',color:'white',fontWeight:'bolder', boxSizing:'border-box',padding:'24px',border:'2px yellow solid'}}>\n//                     ❌ Your camera / mic is blocked ❌<br/><br/>Please give this site access to your camera and mic, and then <u style={{cursor:'pointer'}} onClick={(()=>{window.location.reload()})}>refresh the page.</u>\n//                     <br/><br/>\n//                     How?\n//                     <br/>\n//                     <ul>\n//                       <li>\n//                           <a target='_blank' href='https://downloads.intercomcdn.com/i/o/193872927/17dc7d06694d2c9bcd47b17a/Web+Meeting+Permissions+Blocked+Modal.jpg?'>\n//                           Option 1\n//                           </a>\n//                       </li>\n//                       <li>\n//                           <a href={'https://youtu.be/GceAjizU5WU?t=39'}  target='_blank'>Option 2</a>\n//                       </li>\n//                       </ul>\n//                       </p>\n//                   }\n                      \n                      \n\n//              {/* <img src={Unblock} style={{width:'100px'}} /> */}\n                      \n                      \n//                       {lobbyVideo.current && hasUserMedia && (\n//                           <div style={{position:'relative',display:'flex',flexDirection:'row',justifyContent:'center',bottom:'40px', width:'250px',height:'0px',margin:'auto'}}>\n//                               <div >\n//                                 <p className=\"selector-button\" onClick={()=>{setShowCamSettings(!showCamSettings)}} ref={camCaret}>Select Camera ^</p>\n//                                     {showCamSettings ? \n//                                     (<div onClick={()=>setShowCamSettings(false)}style={{position:'relative',bottom:'0px',left:'80px'}}>\n//                                       <InputSelector type='video' page='intro' inputs={[initialInputs,setInitialInputs]} ref={camSettings} />\n//                                     </div>)\n//                                     : \n//                                     null}\n//                               </div>\n//                               <div style={{width:'15px'}}></div>\n\n//                               <div>\n//                                 <p className=\"selector-button\" onClick={()=>{setShowMicSettings(!showMicSettings)}} ref={micCaret}>Select Mic ^</p>\n//                                     {showMicSettings ? \n//                                       (<div onClick={()=>setShowMicSettings(false)} style={{position:'relative',bottom:'0px',left:'72px',overflowY:'visible'}}>\n//                                         <InputSelector type='audio' page='intro' ref={micSettings}  inputs={[initialInputs,setInitialInputs]}/>\n//                                       </div>)\n//                                     : \n//                                     null}\n//                               </div>\n//                           </div>\n//                       )}\n\n//                   </div>\n                    \n//                  { hasUserMedia && (\n//                     <h4 className='signin'>\n            \n//                         <form onSubmit={(e)=>e.preventDefault()}>\n//                             <input type=\"text\" autoComplete=\"off\" style={{backgroundColor: 'rgb(230, 240, 249)', fontSize:'15px', width: '200px', height: '30px', textAlign:'center', fontFamily:'poppins'}} ref={userIDEl} value={myState.name} onFocus={()=> {if (myState.name==='Your first name') {setName('')}}} onChange={e=>handleChange(e)} /><br/><br/>\n//                             <input className='new-card' style={{width:'150px', color:'#1b8bc4', fontSize: '17px'}} type=\"submit\" type=\"submit\" value='Enter session' onClick={setMyName} />\n//                         </form>\n\n//                         <br/>\n//                     </h4>\n//                   )}\n                    \n//                 </div>\n        \n  \n//             </div>\n//         </div>\n  \n    \n  \n       \n//     </div>\n//     );\n//   }\n\n              \n                \n\n\n\n\n"]},"metadata":{},"sourceType":"module"}