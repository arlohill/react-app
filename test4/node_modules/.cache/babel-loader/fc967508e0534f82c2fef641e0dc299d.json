{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/arlosb/Documents/GitHub/new react app/test1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/arlosb/Documents/GitHub/new react app/test1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useContext,useReducer,useCallback,useState}from'react';import'./Call.css';import Tile from'../Tile/Tile';import CallObjectContext from'../../CallObjectContext';// import MyInfoContext from '../../MyInfoContext';\n// import SessionContext from '../../SessionContext';\nimport CallMessage from'../CallMessage/CallMessage';import{initialCallState,CLICK_ALLOW_TIMEOUT,PARTICIPANTS_CHANGE,CAM_OR_MIC_ERROR,FATAL_ERROR,callReducer,isLocal,isScreenShare,containsScreenShare,getMessage}from'./callState';import{logDailyEvent}from'../../logUtils';import setSubscriptions from'../../hooks/setSubscriptions';function useForceUpdate(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];// integer state\nreturn function(){return setValue(function(value){return value+1;});};// update the state to force render\n}export default function Call(){var callObject=useContext(CallObjectContext);// const [ sessionState, setSessionState ] = useContext(SessionContext);\n// const [ myInfo, setMyInfo ] = useContext(MyInfoContext);\nvar _useReducer=useReducer(callReducer,initialCallState),_useReducer2=_slicedToArray(_useReducer,2),callState=_useReducer2[0],dispatch=_useReducer2[1];var forceUpdate=useForceUpdate();window.updateCall=function(){forceUpdate();};/**\n   * Start listening for participant changes, when the callObject is set.\n   */useEffect(function(){if(!callObject)return;var events=['participant-joined','participant-updated','participant-left'];function handleNewParticipantsState(e){e&&logDailyEvent(e);dispatch({type:PARTICIPANTS_CHANGE,participants:callObject.participants()});if(e&&e.action!='participant-updated'){setSubscriptions(callObject);console.log(\"setting subscriptions because: \"+e.action);var thisUserName=e.participant.user_name;var thisSessionID=e.participant.session_id;if(e.action==\"participant-joined\"){var SessionIDLabel=thisUserName+\"_SessionID\";window[SessionIDLabel]=thisSessionID;if(thisUserName=='InvisibleScreenShareWidget'){return;}window.userList.push(thisUserName);if(thisUserName=='Admin'){window.adminPresent=true;}}else if(e.action==\"participant-left\"){//remove from userList\nvar index=window.userList.indexOf(thisUserName);if(index>-1){window.userList.splice(index,1);}if(window.userList.indexOf('Admin')==-1){window.adminPresent=false;}}console.log('Admin present: '+window.adminPresent);console.log('UserList: '+window.userList);}}// Use initial state\nhandleNewParticipantsState();// Listen for changes in state\nfor(var _i=0,_events=events;_i<_events.length;_i++){var event=_events[_i];callObject.on(event,handleNewParticipantsState);}// Stop listening for changes in state\nreturn function cleanup(){var _iterator=_createForOfIteratorHelper(events),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _event=_step.value;callObject.off(_event,handleNewParticipantsState);}}catch(err){_iterator.e(err);}finally{_iterator.f();}};},[callObject]);/**\n   * Start listening for call errors, when the callObject is set.\n   */useEffect(function(){if(!callObject)return;function handleCameraErrorEvent(event){logDailyEvent(event);dispatch({type:CAM_OR_MIC_ERROR,message:event&&event.errorMsg&&event.errorMsg.errorMsg||'Unknown'});}// We're making an assumption here: there is no camera error when callObject\n// is first assigned.\ncallObject.on('camera-error',handleCameraErrorEvent);return function cleanup(){callObject.off('camera-error',handleCameraErrorEvent);};},[callObject]);/**\n   * Start listening for fatal errors, when the callObject is set.\n   */useEffect(function(){if(!callObject)return;function handleErrorEvent(e){logDailyEvent(e);dispatch({type:FATAL_ERROR,message:e&&e.errorMsg||'Unknown'});}// We're making an assumption here: there is no error when callObject is\n// first assigned.\ncallObject.on('error',handleErrorEvent);return function cleanup(){callObject.off('error',handleErrorEvent);};},[callObject]);/**\n   * Start a timer to show the \"click allow\" message, when the component mounts.\n   */useEffect(function(){var t=setTimeout(function(){dispatch({type:CLICK_ALLOW_TIMEOUT});},2500);return function cleanup(){clearTimeout(t);};},[]);var numberOfSubs=window.currentSubs&&window.currentSubs.filter(function(str){return str.indexOf('_AUDIO')===-1;}).length;//number of subs, not counting audio-only\n//   useEffect(()=>{\n// window.numberOfSubs && (window.numberOfSubs=window.currentSubs.length);\n//   },[window.currentSubs])\nfunction getTiles(){var largeTiles=[];var smallTiles=[];Object.entries(callState.callItems).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),id=_ref2[0],callItem=_ref2[1];var isAudioOnly=function isAudioOnly(){if(!callItem.audioTrackState||!callItem.videoTrackState){return;}return callItem.audioTrackState.subscribed&&!callItem.videoTrackState.subscribed;};var isLarge=isScreenShare(id)||!isLocal(id)&&!containsScreenShare(callState.callItems)||isLocal(id)&&numberOfSubs&&numberOfSubs>1&&!containsScreenShare(callState.callItems);//videoTrackState()\nvar tile=/*#__PURE__*/React.createElement(Tile,{key:id,videoTrackState:callItem.videoTrackState,audioTrackState:callItem.audioTrackState,isLocalPerson:isLocal(id),isAudioOnly:isAudioOnly(),isLarge:isLarge,disableCornerMessage:isScreenShare(id),isScreenShare:isScreenShare(id)// onClick={\n//   isLocal(id)\n//     ? null\n//     : () => {\n//         sendHello(id);\n//       }\n// }\n});if(isLarge){largeTiles.push(tile);}else{smallTiles.push(tile);}});return[largeTiles,smallTiles];}var _getTiles=getTiles(),_getTiles2=_slicedToArray(_getTiles,2),largeTiles=_getTiles2[0],smallTiles=_getTiles2[1];/**\n   * DELETE: Attached tiles objects to window for debugging purposes.\n   */useEffect(function(){console.log('re-rendered');// console.log('Userlist: ' + window.userList);\nwindow.largeTiles=largeTiles;window.smallTales=smallTiles;window.add=function(){var n=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;for(var i=0;i<n;i++){callObject.addFakeParticipant();}};});// attach callState to window for debugging\nuseEffect(function(){window.callState=callState;},[callState]);var message=getMessage(callState);return/*#__PURE__*/React.createElement(\"div\",{className:\"call\"},/*#__PURE__*/React.createElement(\"div\",{className:\"large-tiles count-\".concat(containsScreenShare(callState.callItems)&&'1'||numberOfSubs&&numberOfSubs+1)},!message?largeTiles:null/* Avoid showing large tiles to make room for the message */),/*#__PURE__*/React.createElement(\"div\",{className:\"small-tiles\"},smallTiles),message&&/*#__PURE__*/React.createElement(CallMessage,{header:message.header,detail:message.detail,isError:message.isError}));}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test1/src/components/Call/Call.js"],"names":["React","useEffect","useContext","useReducer","useCallback","useState","Tile","CallObjectContext","CallMessage","initialCallState","CLICK_ALLOW_TIMEOUT","PARTICIPANTS_CHANGE","CAM_OR_MIC_ERROR","FATAL_ERROR","callReducer","isLocal","isScreenShare","containsScreenShare","getMessage","logDailyEvent","setSubscriptions","useForceUpdate","value","setValue","Call","callObject","callState","dispatch","forceUpdate","window","updateCall","events","handleNewParticipantsState","e","type","participants","action","console","log","thisUserName","participant","user_name","thisSessionID","session_id","SessionIDLabel","userList","push","adminPresent","index","indexOf","splice","event","on","cleanup","off","handleCameraErrorEvent","message","errorMsg","handleErrorEvent","t","setTimeout","clearTimeout","numberOfSubs","currentSubs","filter","str","length","getTiles","largeTiles","smallTiles","Object","entries","callItems","forEach","id","callItem","isAudioOnly","audioTrackState","videoTrackState","subscribed","isLarge","tile","smallTales","add","n","i","addFakeParticipant","header","detail","isError"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useReducer, useCallback, useState } from 'react';\nimport './Call.css';\nimport Tile from '../Tile/Tile';\nimport CallObjectContext from '../../CallObjectContext';\n// import MyInfoContext from '../../MyInfoContext';\n// import SessionContext from '../../SessionContext';\nimport CallMessage from '../CallMessage/CallMessage';\nimport {\n  initialCallState,\n  CLICK_ALLOW_TIMEOUT,\n  PARTICIPANTS_CHANGE,\n  CAM_OR_MIC_ERROR,\n  FATAL_ERROR,\n  callReducer,\n  isLocal,\n  isScreenShare,\n  containsScreenShare,\n  getMessage,\n} from './callState';\nimport { logDailyEvent } from '../../logUtils';\nimport setSubscriptions from '../../hooks/setSubscriptions';\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nexport default function Call() {\n  const callObject = useContext(CallObjectContext);\n  // const [ sessionState, setSessionState ] = useContext(SessionContext);\n  // const [ myInfo, setMyInfo ] = useContext(MyInfoContext);\n  const [callState, dispatch] = useReducer(callReducer, initialCallState);\n  const forceUpdate = useForceUpdate();\n\n  window.updateCall = () => {\n    forceUpdate();\n  }\n\n  /**\n   * Start listening for participant changes, when the callObject is set.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    const events = [\n      'participant-joined',\n      'participant-updated',\n      'participant-left',\n    ];\n\n   \n\n    function handleNewParticipantsState(e) {\n      e && logDailyEvent(e);\n      dispatch({\n        type: PARTICIPANTS_CHANGE,\n        participants: callObject.participants(),\n      });\n      if(e && e.action!='participant-updated') {\n        setSubscriptions(callObject);\n        console.log(\"setting subscriptions because: \" + e.action);\n    \n          \n          let thisUserName = e.participant.user_name;\n          let thisSessionID = e.participant.session_id;\n          if (e.action==\"participant-joined\") {\n            let SessionIDLabel = thisUserName + \"_SessionID\";\n            window[SessionIDLabel] = thisSessionID;\n            if(thisUserName=='InvisibleScreenShareWidget') {return;}\n\n              window.userList.push(thisUserName);\n    \n\n            if (thisUserName=='Admin') {\n                window.adminPresent=true;\n            }\n            \n          } else if (e.action==\"participant-left\") {\n            //remove from userList\n            let index = window.userList.indexOf(thisUserName);\n            if (index > -1) {\n            window.userList.splice(index, 1);\n            }\n            if (window.userList.indexOf('Admin')==-1) {\n              window.adminPresent=false;\n            }\n           \n          }\n\n          console.log('Admin present: ' + window.adminPresent);\n          console.log('UserList: ' + window.userList);\n      }\n      \n    }\n\n    // Use initial state\n    handleNewParticipantsState();\n\n    // Listen for changes in state\n    for (const event of events) {\n      callObject.on(event, handleNewParticipantsState);\n    }\n\n    // Stop listening for changes in state\n    return function cleanup() {\n      for (const event of events) {\n        callObject.off(event, handleNewParticipantsState);\n      }\n    };\n  }, [callObject]);\n\n  /**\n   * Start listening for call errors, when the callObject is set.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleCameraErrorEvent(event) {\n      logDailyEvent(event);\n      dispatch({\n        type: CAM_OR_MIC_ERROR,\n        message:\n          (event && event.errorMsg && event.errorMsg.errorMsg) || 'Unknown',\n      });\n    }\n\n    // We're making an assumption here: there is no camera error when callObject\n    // is first assigned.\n\n    callObject.on('camera-error', handleCameraErrorEvent);\n\n    return function cleanup() {\n      callObject.off('camera-error', handleCameraErrorEvent);\n    };\n  }, [callObject]);\n\n  /**\n   * Start listening for fatal errors, when the callObject is set.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleErrorEvent(e) {\n      logDailyEvent(e);\n      dispatch({\n        type: FATAL_ERROR,\n        message: (e && e.errorMsg) || 'Unknown',\n      });\n    }\n\n    // We're making an assumption here: there is no error when callObject is\n    // first assigned.\n\n    callObject.on('error', handleErrorEvent);\n\n    return function cleanup() {\n      callObject.off('error', handleErrorEvent);\n    };\n  }, [callObject]);\n\n  /**\n   * Start a timer to show the \"click allow\" message, when the component mounts.\n   */\n  useEffect(() => {\n    const t = setTimeout(() => {\n      dispatch({ type: CLICK_ALLOW_TIMEOUT });\n    }, 2500);\n\n    return function cleanup() {\n      clearTimeout(t);\n    };\n  }, []);\n\n  const numberOfSubs = window.currentSubs && window.currentSubs.filter(function (str) {return str.indexOf('_AUDIO') === -1}).length //number of subs, not counting audio-only\n\n\n//   useEffect(()=>{\n// window.numberOfSubs && (window.numberOfSubs=window.currentSubs.length);\n//   },[window.currentSubs])\n\n\n\n \n\n  function getTiles() {\n    let largeTiles = [];\n    let smallTiles = [];\n    Object.entries(callState.callItems).forEach(([id, callItem]) => {\n\n\n      const isAudioOnly = () => {\n        if(!callItem.audioTrackState || !callItem.videoTrackState) {return}\n        return (callItem.audioTrackState.subscribed && !callItem.videoTrackState.subscribed);\n      }\n\n      const isLarge =\n        isScreenShare(id) ||\n        (!isLocal(id) && !containsScreenShare(callState.callItems)) \n        || (isLocal(id) && numberOfSubs && numberOfSubs>1 && !containsScreenShare(callState.callItems))   //videoTrackState()\n\n        \n      const tile = (\n        <Tile\n          key={id}\n          videoTrackState={callItem.videoTrackState}\n          audioTrackState={callItem.audioTrackState}\n          isLocalPerson={isLocal(id)}\n          isAudioOnly={isAudioOnly()}\n          isLarge={isLarge}\n          disableCornerMessage={isScreenShare(id)}\n          isScreenShare={isScreenShare(id)}\n          // onClick={\n          //   isLocal(id)\n          //     ? null\n          //     : () => {\n          //         sendHello(id);\n          //       }\n          // }\n        />\n      );\n      if (isLarge) {\n        largeTiles.push(tile);\n      } else {\n        smallTiles.push(tile);\n      }\n    });\n    \n    return [largeTiles, smallTiles];\n  }\n\n  const [largeTiles, smallTiles] = getTiles();\n\n  \n  /**\n   * DELETE: Attached tiles objects to window for debugging purposes.\n   */\n  useEffect(() => {\n    console.log('re-rendered');\n    // console.log('Userlist: ' + window.userList);\n    window.largeTiles = largeTiles;\n    window.smallTales = smallTiles;\n    window.add = function(n=1) {\n      for(let i=0;i<n;i++) {\n        callObject.addFakeParticipant()\n      }\n    };\n    \n  }); \n\n\n   // attach callState to window for debugging\n   useEffect(() => {\n    window.callState = callState;\n  }, [callState]); \n\n\n  const message = getMessage(callState);\n  return (\n    <div className=\"call\">\n                                      {/* add # of tiles to class name. alternative: {largeTiles.length}*/}\n      <div className={`large-tiles count-${(containsScreenShare(callState.callItems)&&'1')||numberOfSubs && numberOfSubs+1}`}>   \n        {\n          !message\n            ? largeTiles\n            : null /* Avoid showing large tiles to make room for the message */\n        }\n      </div>\n      <div className=\"small-tiles\">{smallTiles}</div>\n      {message && (\n        <CallMessage\n          header={message.header}\n          detail={message.detail}\n          isError={message.isError}\n        />\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}