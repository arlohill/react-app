{"ast":null,"code":"import React,{useEffect,useMemo,useRef}from'react';import'./Tile.css';function getTrackUnavailableMessage(kind,trackState){if(!trackState)return;switch(trackState.state){case'blocked':if(trackState.blocked.byPermissions){return\"\".concat(kind,\" permission denied\");}else if(trackState.blocked.byDeviceMissing){return\"\".concat(kind,\" device missing\");}return\"\".concat(kind,\" blocked\");case'off':if(trackState.off.byUser){return\"\".concat(kind,\" muted\");}else if(trackState.off.byBandwidth){return\"\".concat(kind,\" muted to save bandwidth\");}return\"\".concat(kind,\" off\");case'sendable':return\"\".concat(kind,\" not subscribed\");case'loading':return\"\".concat(kind,\" loading...\");case'interrupted':return\"\".concat(kind,\" interrupted\");case'playable':return null;}}/**\n * Props\n * - videoTrackState: DailyTrackState?\n * - audioTrackState: DailyTrackState?\n * - isLocalPerson: boolean\n * - isAudioOnly: boolean\n * - isLarge: boolean\n * - disableCornerMessage: boolean\n * - onClick: Function\n * \n */export default function Tile(props){var videoEl=useRef(null);var audioEl=useRef(null);var videoTrack=useMemo(function(){return props.videoTrackState&&props.videoTrackState.state==='playable'&&(props.isLocalPerson||props.videoTrackState.subscribed===true)?props.videoTrackState.track:null;},[props.videoTrackState]);var audioTrack=useMemo(function(){if(!props.audioTrackState||!props.audioTrackState.track||props.audioTrackState.state!=='playable'||props.audioTrackState.subscribed===false){return null;}if(props.isAudioOnly){props.audioTrackState.track.isFiltered=true;}else{props.audioTrackState.track.isFiltered=false;};return props.audioTrackState.track;},[props.audioTrackState]);var videoUnavailableMessage=useMemo(function(){return getTrackUnavailableMessage('video',props.videoTrackState);},[props.videoTrackState]);var audioUnavailableMessage=useMemo(function(){return getTrackUnavailableMessage('audio',props.audioTrackState);},[props.audioTrackState]);/**\n   * When video track changes, update video srcObject\n   */useEffect(function(){videoEl.current&&(videoEl.current.srcObject=new MediaStream([videoTrack]));},[videoTrack]);/**\n   * When audio track changes, update audio srcObject\n   */useEffect(function(){if(audioEl.current){window.test=audioTrack;if(audioTrack.isFiltered){console.log('***FILTERED***');//create audio stream\nvar stream=new MediaStream([audioTrack]);//workaround for bug in Chrome, see: https://bit.ly/3ryn1fW\nvar mutedAudio=new Audio();mutedAudio.muted=true;mutedAudio.srcObject=stream;mutedAudio.play();//create Audio Context and destination\nvar audioCtx=new(window.AudioContext||window.webkitAudioContext)();var audioSourceNode=audioCtx.createMediaStreamSource(stream);var destination=audioCtx.createMediaStreamDestination();//gain Node\nvar gainNode=audioCtx.createGain();gainNode.gain.value=1;//panner Node\nvar panNode=audioCtx.createStereoPanner();panNode.pan.value=1;//Pipe source through nodes to destination\naudioSourceNode.connect(gainNode).connect(panNode).connect(destination);//Attach to the audio element\naudioEl.current.srcObject=destination.stream;// for debugging\nwindow.destination=destination;window.audioTrack=audioTrack;window.audioEl=audioEl;}else{console.log('***NOT FILTERED***');audioEl.current.srcObject=new MediaStream([audioTrack]);}}},[audioTrack,window.sessionState]);function getVideoComponent(){return videoTrack&&/*#__PURE__*/React.createElement(\"video\",{autoPlay:true,muted:true,playsInline:true,ref:videoEl});}function getAudioComponent(){return!props.isLocalPerson&&audioTrack&&/*#__PURE__*/React.createElement(\"audio\",{autoPlay:true,playsInline:true,ref:audioEl},\" \");}function getOverlayComponent(){// Show overlay when video is unavailable. Audio may be unavailable too.\nreturn videoTrack&&videoUnavailableMessage&&/*#__PURE__*/React.createElement(\"p\",{className:\"overlay\"},videoUnavailableMessage);}function getCornerMessageComponent(){// Show corner message when only audio is unavailable.\nreturn!props.disableCornerMessage&&audioUnavailableMessage&&!videoUnavailableMessage&&/*#__PURE__*/React.createElement(\"p\",{className:\"corner\"},audioUnavailableMessage);}function getClassNames(){var classNames='tile';classNames+=props.isLarge?' large':' small';props.isLocalPerson&&(classNames+=' local');return classNames;}return/*#__PURE__*/ (///TODO change to block : none\nReact.createElement(\"div\",{className:getClassNames(),onClick:props.onClick,style:{display:videoTrack?\"block\":\"none\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"background\"}),getOverlayComponent(),getVideoComponent(),videoTrack&&getCornerMessageComponent(),getAudioComponent()));}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test1/src/components/Tile/Tile.js"],"names":["React","useEffect","useMemo","useRef","getTrackUnavailableMessage","kind","trackState","state","blocked","byPermissions","byDeviceMissing","off","byUser","byBandwidth","Tile","props","videoEl","audioEl","videoTrack","videoTrackState","isLocalPerson","subscribed","track","audioTrack","audioTrackState","isAudioOnly","isFiltered","videoUnavailableMessage","audioUnavailableMessage","current","srcObject","MediaStream","window","test","console","log","stream","mutedAudio","Audio","muted","play","audioCtx","AudioContext","webkitAudioContext","audioSourceNode","createMediaStreamSource","destination","createMediaStreamDestination","gainNode","createGain","gain","value","panNode","createStereoPanner","pan","connect","sessionState","getVideoComponent","getAudioComponent","getOverlayComponent","getCornerMessageComponent","disableCornerMessage","getClassNames","classNames","isLarge","onClick","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react';\nimport './Tile.css';\n\nfunction getTrackUnavailableMessage(kind, trackState) {\n  if (!trackState) return;\n  switch (trackState.state) {\n    case 'blocked':\n      if (trackState.blocked.byPermissions) {\n        return `${kind} permission denied`;\n      } else if (trackState.blocked.byDeviceMissing) {\n        return `${kind} device missing`;\n      }\n      return `${kind} blocked`;\n    case 'off':\n      if (trackState.off.byUser) {\n        return `${kind} muted`;\n      } else if (trackState.off.byBandwidth) {\n        return `${kind} muted to save bandwidth`;\n      }\n      return `${kind} off`;\n    case 'sendable':\n      return `${kind} not subscribed`;\n    case 'loading':\n      return `${kind} loading...`;\n    case 'interrupted':\n      return `${kind} interrupted`;\n    case 'playable':\n      return null;\n  }\n}\n\n/**\n * Props\n * - videoTrackState: DailyTrackState?\n * - audioTrackState: DailyTrackState?\n * - isLocalPerson: boolean\n * - isAudioOnly: boolean\n * - isLarge: boolean\n * - disableCornerMessage: boolean\n * - onClick: Function\n * \n */\nexport default function Tile(props) {\n  const videoEl = useRef(null);\n  const audioEl = useRef(null);\n\n  const videoTrack = useMemo(() => {\n    return props.videoTrackState && props.videoTrackState.state === 'playable' && (props.isLocalPerson || props.videoTrackState.subscribed === true)\n      ? props.videoTrackState.track\n      : null;\n  }, [props.videoTrackState]);\n\n  const audioTrack = useMemo(() => {\n\n    if (!props.audioTrackState || !props.audioTrackState.track || props.audioTrackState.state !== 'playable' || props.audioTrackState.subscribed === false) \n        {return null;}\n    if (props.isAudioOnly) {\n      props.audioTrackState.track.isFiltered=true;\n    } else {props.audioTrackState.track.isFiltered=false};\n    return props.audioTrackState.track\n  }, [props.audioTrackState]);\n\n  const videoUnavailableMessage = useMemo(() => {\n    return getTrackUnavailableMessage('video', props.videoTrackState);\n  }, [props.videoTrackState]);\n\n  const audioUnavailableMessage = useMemo(() => {\n    return getTrackUnavailableMessage('audio', props.audioTrackState);\n  }, [props.audioTrackState]);\n\n  /**\n   * When video track changes, update video srcObject\n   */\n  useEffect(() => {\n    videoEl.current &&\n      (videoEl.current.srcObject = new MediaStream([videoTrack]));\n  }, [videoTrack]);\n\n  /**\n   * When audio track changes, update audio srcObject\n   */\n  useEffect(() => {\n    if(audioEl.current) {\n\n      window.test=audioTrack;\n      \n      if(audioTrack.isFiltered) {\n        console.log('***FILTERED***')\n\n            //create audio stream\n              let stream= new MediaStream([audioTrack]);\n\n              //workaround for bug in Chrome, see: https://bit.ly/3ryn1fW\n                    const mutedAudio = new Audio(); \n                    mutedAudio.muted = true;\n                    mutedAudio.srcObject = stream;\n                    mutedAudio.play(); \n\n              //create Audio Context and destination\n              const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n              let audioSourceNode = audioCtx.createMediaStreamSource(stream);\n              let destination = audioCtx.createMediaStreamDestination();\n\n              //gain Node\n              let gainNode = audioCtx.createGain();\n              gainNode.gain.value=1;\n              //panner Node\n              var panNode = audioCtx.createStereoPanner();\n              panNode.pan.value=1;\n\n              //Pipe source through nodes to destination\n              audioSourceNode.connect(gainNode).connect(panNode).connect(destination);\n\n              //Attach to the audio element\n              audioEl.current.srcObject = destination.stream;\n\n              // for debugging\n              window.destination=destination; \n              window.audioTrack=audioTrack;\n              window.audioEl = audioEl;\n      } \n      else {\n        console.log('***NOT FILTERED***')\n        audioEl.current.srcObject = new MediaStream([audioTrack]);\n      }\n\n      }\n      \n  }, [audioTrack,window.sessionState]);\n\n  function getVideoComponent() {\n    return videoTrack && <video autoPlay muted playsInline ref={videoEl} />;\n\n    \n  }\n\n  function getAudioComponent() {\n    return (\n      !props.isLocalPerson &&\n      audioTrack && <audio autoPlay playsInline ref={audioEl} > </audio>\n    );\n  }\n\n  function getOverlayComponent() {\n    // Show overlay when video is unavailable. Audio may be unavailable too.\n    return videoTrack && (\n      videoUnavailableMessage && (\n        <p className=\"overlay\">\n          {videoUnavailableMessage}\n          {/* {audioUnavailableMessage && (\n            <>\n              <br />\n              {audioUnavailableMessage}\n            </>\n          )} */}\n        </p>\n      )\n    );\n  }\n\n  function getCornerMessageComponent() {\n    // Show corner message when only audio is unavailable.\n    return (\n      !props.disableCornerMessage &&\n      audioUnavailableMessage &&\n      !videoUnavailableMessage && (\n        <p className=\"corner\">{audioUnavailableMessage}</p>\n      )\n    );\n  }\n\n  function getClassNames() {\n    let classNames = 'tile';\n    classNames += props.isLarge ? ' large' : ' small';\n    props.isLocalPerson && (classNames += ' local');\n    return classNames;\n  }\n\n  return (\n    ///TODO change to block : none\n    <div className={getClassNames()} onClick={props.onClick} style={{display: videoTrack ? \"block\" : \"none\"}}>  \n      <div className=\"background\"/> \n      {getOverlayComponent()}\n      {getVideoComponent()}\n      {videoTrack && getCornerMessageComponent()}\n      {getAudioComponent()}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}