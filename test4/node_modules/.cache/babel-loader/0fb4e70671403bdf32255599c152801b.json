{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/arlosb/Documents/GitHub/new react app/test3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/arlosb/Documents/GitHub/new react app/test3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useContext,useReducer,useCallback,useState}from'react';import'./Call.css';import Tile from'../Tile/Tile';import CallObjectContext from'../../CallObjectContext';import MyContext from'../../MyContext';// import SessionContext from '../../SessionContext';\nimport CallMessage from'../CallMessage/CallMessage';import{initialCallState,CLICK_ALLOW_TIMEOUT,PARTICIPANTS_CHANGE,CAM_OR_MIC_ERROR,FATAL_ERROR,callReducer,isLocal,isScreenShare,containsScreenShare,getMessage}from'./callState';import{logDailyEvent}from'../../logUtils';import setSubscriptions from'../../hooks/setSubscriptions';function useForceUpdate(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];// integer state\nreturn function(){return setValue(function(value){return value+1;});};// update the state to force render\n}export default function Call(){var callObject=useContext(CallObjectContext);// const [ sessionState, setSessionState ] = useContext(SessionContext);\n// const [ myInfo, setMyInfo ] = useContext(MyInfoContext);\nvar _useReducer=useReducer(callReducer,initialCallState),_useReducer2=_slicedToArray(_useReducer,2),callState=_useReducer2[0],dispatch=_useReducer2[1];var forceUpdate=useForceUpdate();var _useContext=useContext(MyContext),myState=_useContext.myState;var _myState=_slicedToArray(myState,2),my=_myState[0],setMy=_myState[1];window.updateCall=function(){forceUpdate();};/**\n   * Start listening for participant changes, when the callObject is set.\n   */useEffect(function(){if(!callObject)return;var events=['participant-joined','participant-updated','participant-left'];function handleNewParticipantsState(e){e&&logDailyEvent(e);dispatch({type:PARTICIPANTS_CHANGE,participants:callObject.participants()});if(e&&e.action!='participant-updated'){var updateUserList=function updateUserList(){var getUserName=setInterval(function(){if(thisUserName){getUserList();clearInterval(getUserName);}},100);function getUserList(){window.adminPresent=false;var ps=callObject.participants();window.userList=[];for(var p in ps){var _thisUserName=ps[p].user_name;var thisSessionId=ps[p].session_id;window.userList.push(_thisUserName);//add  each user_name to UserList\nwindow[_thisUserName+'_SessionID']=thisSessionId;if(_thisUserName.includes('_Admin')&&p!=='local'){console.log('THERES AN ADMIN PRESENT!');window.adminPresent=true;}};window.userList.sort();//alphebetize that list \nconsole.log(\"now the userList is: \".concat(window.userList));//print userList\nif(typeof window.updateAdminPanel!=='undefined'){window.updateAdminPanel();};}};setSubscriptions(callObject);console.log(\"setting subscriptions because: \"+e.action);var thisUserName=e.participant.user_name;var thisSessionID=e.participant.session_id;if(e.action==\"participant-joined\"||e.action==\"participant-left\"){window.event=e;updateUserList();}console.log('Admin present: '+window.adminPresent);console.log('UserList: '+window.userList);}}// Use initial state\nhandleNewParticipantsState();// Listen for changes in state\nfor(var _i=0,_events=events;_i<_events.length;_i++){var event=_events[_i];callObject.on(event,handleNewParticipantsState);// callObject.on(\"joined-meeting\",()=>{\n//     callObject.setUserName('testName');\n//     console.log(`********Setting my user name as ${'TestName'}`);\n// })\n}// Stop listening for changes in state\nreturn function cleanup(){var _iterator=_createForOfIteratorHelper(events),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _event=_step.value;callObject.off(_event,handleNewParticipantsState);}}catch(err){_iterator.e(err);}finally{_iterator.f();}};},[callObject]);/**\n   * Start listening for call errors, when the callObject is set.\n   */useEffect(function(){if(!callObject)return;function handleCameraErrorEvent(event){logDailyEvent(event);dispatch({type:CAM_OR_MIC_ERROR,message:event&&event.errorMsg&&event.errorMsg.errorMsg||'Unknown'});}// We're making an assumption here: there is no camera error when callObject\n// is first assigned.\ncallObject.on('camera-error',handleCameraErrorEvent);return function cleanup(){callObject.off('camera-error',handleCameraErrorEvent);};},[callObject]);/**\n   * Start listening for fatal errors, when the callObject is set.\n   */useEffect(function(){if(!callObject)return;function handleErrorEvent(e){logDailyEvent(e);dispatch({type:FATAL_ERROR,message:e&&e.errorMsg||'Unknown'});}// We're making an assumption here: there is no error when callObject is\n// first assigned.\ncallObject.on('error',handleErrorEvent);return function cleanup(){callObject.off('error',handleErrorEvent);};},[callObject]);/**\n   * Start a timer to show the \"click allow\" message, when the component mounts.\n   */useEffect(function(){var t=setTimeout(function(){dispatch({type:CLICK_ALLOW_TIMEOUT});},2500);return function cleanup(){clearTimeout(t);};},[]);var numberOfSubs=window.currentSubs&&window.currentSubs.filter(function(str){return str.indexOf('_AUDIO')===-1;}).filter(function(str){return str.indexOf('_AUDIO')===-1;}).filter(function(str){return str.indexOf(window.myName)===-1;}).length;//number of subs, not counting audio-only or my name\nuseEffect(function(){window.numberOfSubs=numberOfSubs;},[numberOfSubs]);function getTiles(){var largeTiles=[];var smallTiles=[];Object.entries(callState.callItems).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),id=_ref2[0],callItem=_ref2[1];var isAudioOnly=function isAudioOnly(){if(!callItem.audioTrackState||!callItem.videoTrackState){return;}return callItem.audioTrackState.subscribed&&!callItem.videoTrackState.subscribed;};var isLarge=isScreenShare(id)||!isLocal(id)&&!containsScreenShare(callState.callItems)||isLocal(id)&&numberOfSubs&&numberOfSubs>1&&!containsScreenShare(callState.callItems);//videoTrackState()\nvar tile=/*#__PURE__*/React.createElement(Tile,{key:id,videoTrackState:callItem.videoTrackState,audioTrackState:callItem.audioTrackState,isLocalPerson:isLocal(id),isAudioOnly:isAudioOnly(),isLarge:isLarge,disableCornerMessage:isScreenShare(id),isScreenShare:isScreenShare(id)// onClick={\n//   isLocal(id)\n//     ? null\n//     : () => {\n//         sendHello(id);\n//       }\n// }\n});if(isLarge){largeTiles.push(tile);}else{smallTiles.push(tile);}});return[largeTiles,smallTiles];}var _getTiles=getTiles(),_getTiles2=_slicedToArray(_getTiles,2),largeTiles=_getTiles2[0],smallTiles=_getTiles2[1];/**\n   * DELETE: Attached tiles objects to window for debugging purposes.\n   */useEffect(function(){// console.log('re-rendered');\n// console.log('Userlist: ' + window.userList);\nwindow.largeTiles=largeTiles;window.smallTales=smallTiles;window.add=function(){var n=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;for(var i=0;i<n;i++){callObject.addFakeParticipant();}};});// attach callState to window for debugging\nuseEffect(function(){window.callState=callState;},[callState]);var message=getMessage(callState);return/*#__PURE__*/React.createElement(\"div\",{className:window.amAdmin?\"call-with-sidebar\":\"call\"},/*#__PURE__*/React.createElement(\"div\",{className:\"large-tiles count-\".concat(containsScreenShare(callState.callItems)&&'1'||numberOfSubs&&numberOfSubs+1)},!message?largeTiles:null/* Avoid showing large tiles to make room for the message */),/*#__PURE__*/React.createElement(\"div\",{className:\"small-tiles\"},smallTiles),message&&/*#__PURE__*/React.createElement(CallMessage,{header:message.header,detail:message.detail,isError:message.isError}));}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test3/src/components/Call/Call.js"],"names":["React","useEffect","useContext","useReducer","useCallback","useState","Tile","CallObjectContext","MyContext","CallMessage","initialCallState","CLICK_ALLOW_TIMEOUT","PARTICIPANTS_CHANGE","CAM_OR_MIC_ERROR","FATAL_ERROR","callReducer","isLocal","isScreenShare","containsScreenShare","getMessage","logDailyEvent","setSubscriptions","useForceUpdate","value","setValue","Call","callObject","callState","dispatch","forceUpdate","myState","my","setMy","window","updateCall","events","handleNewParticipantsState","e","type","participants","action","updateUserList","getUserName","setInterval","thisUserName","getUserList","clearInterval","adminPresent","ps","userList","p","user_name","thisSessionId","session_id","push","includes","console","log","sort","updateAdminPanel","participant","thisSessionID","event","on","cleanup","off","handleCameraErrorEvent","message","errorMsg","handleErrorEvent","t","setTimeout","clearTimeout","numberOfSubs","currentSubs","filter","str","indexOf","myName","length","getTiles","largeTiles","smallTiles","Object","entries","callItems","forEach","id","callItem","isAudioOnly","audioTrackState","videoTrackState","subscribed","isLarge","tile","smallTales","add","n","i","addFakeParticipant","amAdmin","header","detail","isError"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useReducer, useCallback, useState } from 'react';\nimport './Call.css';\nimport Tile from '../Tile/Tile';\nimport CallObjectContext from '../../CallObjectContext';\nimport MyContext from '../../MyContext';\n// import SessionContext from '../../SessionContext';\nimport CallMessage from '../CallMessage/CallMessage';\nimport {\n  initialCallState,\n  CLICK_ALLOW_TIMEOUT,\n  PARTICIPANTS_CHANGE,\n  CAM_OR_MIC_ERROR,\n  FATAL_ERROR,\n  callReducer,\n  isLocal,\n  isScreenShare,\n  containsScreenShare,\n  getMessage,\n} from './callState';\nimport { logDailyEvent } from '../../logUtils';\nimport setSubscriptions from '../../hooks/setSubscriptions';\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nexport default function Call() {\n  const callObject = useContext(CallObjectContext);\n  // const [ sessionState, setSessionState ] = useContext(SessionContext);\n  // const [ myInfo, setMyInfo ] = useContext(MyInfoContext);\n  const [callState, dispatch] = useReducer(callReducer, initialCallState);\n  const forceUpdate = useForceUpdate();\n  const { myState } = useContext(MyContext);\n  const [ my,setMy] = myState;\n\n\n  window.updateCall = () => {\n    forceUpdate();\n  }\n\n  /**\n   * Start listening for participant changes, when the callObject is set.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    const events = [\n      'participant-joined',\n      'participant-updated',\n      'participant-left',\n    ];\n\n   \n\n    function handleNewParticipantsState(e) {\n      e && logDailyEvent(e);\n      dispatch({\n        type: PARTICIPANTS_CHANGE,\n        participants: callObject.participants(),\n      });\n      if(e && e.action!='participant-updated') {\n        setSubscriptions(callObject);\n        console.log(\"setting subscriptions because: \" + e.action);\n          \n          let thisUserName = e.participant.user_name;\n          let thisSessionID = e.participant.session_id;\n\n          if (e.action==\"participant-joined\" || e.action==\"participant-left\") {\n            window.event=e;\n            updateUserList();\n          }\n\n          function updateUserList() {\n\n            const getUserName = setInterval(\n              ()=>{\n                    if (thisUserName) \n                      {getUserList();\n                      clearInterval(getUserName);\n                      }\n                  },100);\n\n              function getUserList() {\n                window.adminPresent=false;\n              let ps=callObject.participants(); \n              window.userList=[]; \n              for (const p in ps) {\n                let thisUserName = ps[p].user_name;\n                let thisSessionId = ps[p].session_id;\n                window.userList.push(thisUserName);      //add  each user_name to UserList\n                window[thisUserName+'_SessionID'] = thisSessionId;\n                if (thisUserName.includes('_Admin') && p!=='local') {\n                  console.log('THERES AN ADMIN PRESENT!')\n                  window.adminPresent=true;\n                }\n              }; \n              window.userList.sort();       //alphebetize that list \n\n              console.log(`now the userList is: ${window.userList}`);  //print userList\n\n              if(typeof(window.updateAdminPanel)!=='undefined') {window.updateAdminPanel()};\n              }\n              \n            }\n\n          \n\n          console.log('Admin present: ' + window.adminPresent);\n          console.log('UserList: ' + window.userList);\n      }\n      \n    }\n\n    // Use initial state\n    handleNewParticipantsState();\n\n    // Listen for changes in state\n    for (const event of events) {\n      callObject.on(event, handleNewParticipantsState);\n      // callObject.on(\"joined-meeting\",()=>{\n\n      //     callObject.setUserName('testName');\n      //     console.log(`********Setting my user name as ${'TestName'}`);\n\n      // })\n    }\n\n    // Stop listening for changes in state\n    return function cleanup() {\n      for (const event of events) {\n        callObject.off(event, handleNewParticipantsState);\n      }\n    };\n  }, [callObject]);\n\n  /**\n   * Start listening for call errors, when the callObject is set.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleCameraErrorEvent(event) {\n      logDailyEvent(event);\n      dispatch({\n        type: CAM_OR_MIC_ERROR,\n        message:\n          (event && event.errorMsg && event.errorMsg.errorMsg) || 'Unknown',\n      });\n    }\n\n    // We're making an assumption here: there is no camera error when callObject\n    // is first assigned.\n\n    callObject.on('camera-error', handleCameraErrorEvent);\n\n    return function cleanup() {\n      callObject.off('camera-error', handleCameraErrorEvent);\n    };\n  }, [callObject]);\n\n  /**\n   * Start listening for fatal errors, when the callObject is set.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleErrorEvent(e) {\n      logDailyEvent(e);\n      dispatch({\n        type: FATAL_ERROR,\n        message: (e && e.errorMsg) || 'Unknown',\n      });\n    }\n\n    // We're making an assumption here: there is no error when callObject is\n    // first assigned.\n\n    callObject.on('error', handleErrorEvent);\n\n    return function cleanup() {\n      callObject.off('error', handleErrorEvent);\n    };\n  }, [callObject]);\n\n  /**\n   * Start a timer to show the \"click allow\" message, when the component mounts.\n   */\n  useEffect(() => {\n    const t = setTimeout(() => {\n      dispatch({ type: CLICK_ALLOW_TIMEOUT });\n    }, 2500);\n\n    return function cleanup() {\n      clearTimeout(t);\n    };\n  }, []);\n\n  const numberOfSubs = window.currentSubs && window.currentSubs.filter(function (str) {return str.indexOf('_AUDIO') === -1}).filter(function (str) {return str.indexOf('_AUDIO') === -1}).filter(function (str) {return str.indexOf(window.myName) === -1}).length //number of subs, not counting audio-only or my name\n\n\n  useEffect(()=>{\nwindow.numberOfSubs =numberOfSubs;\n  },[numberOfSubs])\n\n\n\n \n\n  function getTiles() {\n    let largeTiles = [];\n    let smallTiles = [];\n    Object.entries(callState.callItems).forEach(([id, callItem]) => {\n\n\n      const isAudioOnly = () => {\n        if(!callItem.audioTrackState || !callItem.videoTrackState) {return}\n        return (callItem.audioTrackState.subscribed && !callItem.videoTrackState.subscribed);\n      }\n\n      const isLarge =\n        isScreenShare(id) ||\n        (!isLocal(id) && !containsScreenShare(callState.callItems)) \n        || (isLocal(id) && numberOfSubs && numberOfSubs>1 && !containsScreenShare(callState.callItems))   //videoTrackState()\n\n        \n      const tile = (\n        <Tile\n          key={id}\n          videoTrackState={callItem.videoTrackState}\n          audioTrackState={callItem.audioTrackState}\n          isLocalPerson={isLocal(id)}\n          isAudioOnly={isAudioOnly()}\n          isLarge={isLarge}\n          disableCornerMessage={isScreenShare(id)}\n          isScreenShare={isScreenShare(id)}\n          // onClick={\n          //   isLocal(id)\n          //     ? null\n          //     : () => {\n          //         sendHello(id);\n          //       }\n          // }\n        />\n      );\n      if (isLarge) {\n        largeTiles.push(tile);\n      } else {\n        smallTiles.push(tile);\n      }\n    });\n    \n    return [largeTiles, smallTiles];\n  }\n\n  const [largeTiles, smallTiles] = getTiles();\n\n  \n  /**\n   * DELETE: Attached tiles objects to window for debugging purposes.\n   */\n  useEffect(() => {\n    // console.log('re-rendered');\n    // console.log('Userlist: ' + window.userList);\n    window.largeTiles = largeTiles;\n    window.smallTales = smallTiles;\n    window.add = function(n=1) {\n      for(let i=0;i<n;i++) {\n        callObject.addFakeParticipant()\n      }\n    };\n    \n  }); \n\n\n   // attach callState to window for debugging\n   useEffect(() => {\n    window.callState = callState;\n  }, [callState]); \n\n\n  const message = getMessage(callState);\n  return (\n    <div className={window.amAdmin ? \"call-with-sidebar\" : \"call\"}>\n                                      {/* add # of tiles to class name. alternative: {largeTiles.length}*/}\n      <div className={`large-tiles count-${(containsScreenShare(callState.callItems)&&'1')||numberOfSubs && numberOfSubs+1}`}>   \n        {\n          !message\n            ? largeTiles\n            : null /* Avoid showing large tiles to make room for the message */\n        }\n      </div>\n      <div className=\"small-tiles\">{smallTiles}</div>\n      {message && (\n        <CallMessage\n          header={message.header}\n          detail={message.detail}\n          isError={message.isError}\n        />\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}