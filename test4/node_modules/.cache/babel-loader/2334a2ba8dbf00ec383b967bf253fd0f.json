{"ast":null,"code":"var _jsxFileName = \"/Users/arlosb/Documents/GitHub/new react app/test2/src/components/InputSelector/InputSelector.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nimport './InputSelector.css';\nexport default React.forwardRef((props, ref) => {\n  const callObject = useContext(CallObjectContext);\n  const audioInputSelect = React.createRef();\n  const videoInputSelect = React.createRef();\n  const type = props.type;\n\n  const handleClick = e => {\n    let selectionID = e.target.value;\n    type == 'audio' && callObject.setInputDevicesAsync({\n      audioSource: selectionID\n    });\n    type == 'video' && callObject.setInputDevicesAsync({\n      videoSource: selectionID\n    });\n    console.log('New input: ' + e.target.text);\n  };\n\n  if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n    navigator.mediaDevices.enumerateDevices().then(function (deviceInfos) {\n      for (var i = 0; i !== deviceInfos.length; ++i) {\n        var deviceInfo = deviceInfos[i];\n        var option = document.createElement('option');\n        option.className = 'item';\n        option.value = deviceInfo.deviceId;\n\n        if (deviceInfo.kind === 'audioinput') {\n          option.text = deviceInfo.label || 'Microphone ' + (audioInputSelect.length + 1);\n          audioInputSelect.current && audioInputSelect.current.appendChild(option); // } else if (deviceInfo.kind === 'audiooutput') {\n          //   option.text = deviceInfo.label || 'Speaker ' +\n          //     (audioOutputSelect.length + 1);\n          //   audioOutputSelect.appendChild(option);\n        } else if (deviceInfo.kind === 'videoinput') {\n          option.text = deviceInfo.label || 'Camera ' + (videoSelect.length + 1);\n          videoSelect.current && videoSelect.current.appendChild(option);\n        }\n      }\n\n      ;\n    }).catch(function (err) {\n      console.log(err.name + \": \" + err.message);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-selector\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, type == 'audio' && /*#__PURE__*/React.createElement(\"ul\", {\n    ref: AudioInputSelect,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), type == 'video' && /*#__PURE__*/React.createElement(\"ul\", {\n    ref: VideoSelect,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test2/src/components/InputSelector/InputSelector.js"],"names":["React","useContext","useEffect","useState","CallObjectContext","forwardRef","props","ref","callObject","audioInputSelect","createRef","videoInputSelect","type","handleClick","e","selectionID","target","value","setInputDevicesAsync","audioSource","videoSource","console","log","text","navigator","mediaDevices","enumerateDevices","then","deviceInfos","i","length","deviceInfo","option","document","createElement","className","deviceId","kind","label","current","appendChild","videoSelect","catch","err","name","message","AudioInputSelect","VideoSelect"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nimport './InputSelector.css';\n\n\nexport default React.forwardRef((props, ref)=> {\nconst callObject = useContext(CallObjectContext);\nconst audioInputSelect = React.createRef();\nconst videoInputSelect = React.createRef();\nconst type = props.type;\n\nconst handleClick=(e) => {\n    let selectionID = e.target.value;\n    type == 'audio' && callObject.setInputDevicesAsync({audioSource: selectionID});\n    type == 'video' && callObject.setInputDevicesAsync({videoSource: selectionID});\n    console.log('New input: ' + e.target.text)\n}\n\n\n   if(navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n    navigator.mediaDevices.enumerateDevices()\n    .then(function(deviceInfos) {\n        for (var i = 0; i !== deviceInfos.length; ++i) {\n            var deviceInfo = deviceInfos[i];\n            var option = document.createElement('option');\n            option.className='item';\n            option.value = deviceInfo.deviceId;\n            if (deviceInfo.kind === 'audioinput') {\n              option.text = deviceInfo.label ||\n                'Microphone ' + (audioInputSelect.length + 1);\n                audioInputSelect.current && audioInputSelect.current.appendChild(option);\n            // } else if (deviceInfo.kind === 'audiooutput') {\n            //   option.text = deviceInfo.label || 'Speaker ' +\n            //     (audioOutputSelect.length + 1);\n            //   audioOutputSelect.appendChild(option);\n            } else if (deviceInfo.kind === 'videoinput') {\n              option.text = deviceInfo.label || 'Camera ' +\n                (videoSelect.length + 1);\n                videoSelect.current && videoSelect.current.appendChild(option);\n            }\n      };\n    })\n    .catch(function(err) {\n      console.log(err.name + \": \" + err.message);\n    });\n   } \n    \n\n\n\n    return (\n        <div className=\"dropdown-selector\" ref={ref}>\n                {type=='audio' &&\n                <ul ref={AudioInputSelect} onClick={handleClick}>\n                </ul>\n                }\n                {type=='video' &&\n                <ul ref={VideoSelect} onClick={handleClick}>\n                </ul>\n                }\n                \n        </div>\n    );\n\n})\n"]},"metadata":{},"sourceType":"module"}