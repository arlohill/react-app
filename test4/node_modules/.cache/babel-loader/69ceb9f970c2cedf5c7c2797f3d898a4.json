{"ast":null,"code":"const newRoomEndpoint = '`${window.location.origin}/api/rooms`';\n/**\n * Create a short-lived room for demo purposes.\n *\n * It uses the redirect proxy as specified in netlify.toml`\n * This will work locally if you following the Netlify specific instructions\n * in README.md\n *\n * See https://docs.daily.co/reference#create-room for more information on how\n * to use the Daily REST API to create rooms and what options are available. \n */\n\nasync function createRoom() {\n  // const exp = Math.round(Date.now() / 1000) + 60 * 30;\n  // const options = {\n  //   properties: {\n  //     exp: exp,\n  //   },\n  // };\n  // let response = await fetch(newRoomEndpoint, {\n  //   method: \"POST\",\n  //   body: JSON.stringify(options),\n  //   mode: 'cors',\n  // }),\n  //   room = await response.json();\n  // return room;\n  // Comment out the above and uncomment the below, using your own URL\n  return {\n    url: \"https://secondbody.daily.co/react-test-room\"\n  };\n}\n\nexport default {\n  createRoom\n};","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test3/src/api.js"],"names":["newRoomEndpoint","createRoom","url"],"mappings":"AAAA,MAAMA,eAAe,GACnB,uCADF;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeC,UAAf,GAA4B;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,SAAO;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAP;AACD;;AAED,eAAe;AAAED,EAAAA;AAAF,CAAf","sourcesContent":["const newRoomEndpoint =\n  '`${window.location.origin}/api/rooms`';\n\n/**\n * Create a short-lived room for demo purposes.\n *\n * It uses the redirect proxy as specified in netlify.toml`\n * This will work locally if you following the Netlify specific instructions\n * in README.md\n *\n * See https://docs.daily.co/reference#create-room for more information on how\n * to use the Daily REST API to create rooms and what options are available. \n */\nasync function createRoom() {\n\n  // const exp = Math.round(Date.now() / 1000) + 60 * 30;\n  // const options = {\n  //   properties: {\n  //     exp: exp,\n  //   },\n  // };\n  // let response = await fetch(newRoomEndpoint, {\n  //   method: \"POST\",\n  //   body: JSON.stringify(options),\n  //   mode: 'cors',\n  // }),\n  //   room = await response.json();\n  // return room;\n\n  // Comment out the above and uncomment the below, using your own URL\n  return { url: \"https://secondbody.daily.co/react-test-room\" };\n}\n\nexport default { createRoom };"]},"metadata":{},"sourceType":"module"}