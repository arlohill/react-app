{"ast":null,"code":"// import { useEffect } from \"react\";\n// import SessionContext from '../../SessionContext';\nexport default function setSubscriptions(callObject, viewMode = null) {\n  if (!window.sessionState) {\n    return;\n  }\n\n  console.log('Setting subscriptions...');\n  console.log('****My role is: ' + window.myRole);\n  console.log('viewMode is: ' + viewMode);\n  let subscribedTo = 0;\n  window.currentSubs = []; //if session is active, set currentSubs according to my role\n\n  if (!viewMode && window.sessionState.isActive) {\n    switch (window.myRole) {\n      case 'Buyer1':\n      case 'Buyer2':\n      case 'Buyer3':\n        window.currentSubs = [];\n        window.sessionState.roleOf.Shadow1 && window.currentSubs.push(window.sessionState.roleOf.Shadow1); // see shadow1 if there is a shadow1\n\n        !window.sessionState.roleOf.Shadow1 && window.sessionState.roleOf.Seller && window.currentSubs.push(window.sessionState.roleOf.Seller); //otherwise, see the original seller\n\n        break;\n\n      case 'Seller':\n        window.currentSubs = [];\n        window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n        window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n        window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n        break;\n\n      case 'Shadow1':\n      case 'Shadow2':\n      case 'Shadow3':\n      case 'Shadow4':\n        window.currentSubs = [];\n        window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n        window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n        window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n        window.sessionState.roleOf.Seller && window.currentSubs.push(window.sessionState.roleOf.Seller + '_AUDIO');\n        break;\n\n      case 'Attendee':\n        window.currentSubs = [];\n        break;\n\n      default:\n        window.currentSubs = [];\n        break;\n    } //Add Admin to currentSubs if applicable\n\n\n    if (window.sessionState.AdminVisible) {\n      window.currentSubs.push(\"Admin\");\n    }\n\n    window.currentSubs.filter(function (str) {\n      return str.indexOf(window.myName) === -1;\n    }); //don't include self\n  }\n\n  if (viewMode) {\n    switch (viewMode) {\n      case 'Seller':\n        window.currentSubs = [];\n        window.sessionState.roleOf.Seller && window.currentSubs.push(window.sessionState.roleOf.Seller);\n        window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n        window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n        window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n        break;\n\n      case 'Shadow1':\n        window.currentSubs = [];\n        window.sessionState.roleOf.Shadow1 && window.currentSubs.push(window.sessionState.roleOf.Shadow1);\n        window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n        window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n        window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n        break;\n\n      case 'Shadow2':\n        window.currentSubs = [];\n        window.sessionState.roleOf.Shadow2 && window.currentSubs.push(window.sessionState.roleOf.Shadow2);\n        window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n        window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n        window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n        break;\n\n      case 'Shadow3':\n        window.sessionState.roleOf.Shadow3 && window.currentSubs.push(window.sessionState.roleOf.Shadow3);\n        window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n        window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n        window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n        break;\n\n      case 'Shadow4':\n        window.currentSubs = [];\n        window.sessionState.roleOf.Shadow4 && window.currentSubs.push(window.sessionState.roleOf.Shadow4);\n        window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n        window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n        window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n        break;\n\n      case 'All':\n        window.currentSubs = [];\n        window.sessionState.roleOf.Seller && window.currentSubs.push(window.sessionState.roleOf.Seller);\n        window.sessionState.roleOf.Shadow1 && window.currentSubs.push(window.sessionState.roleOf.Shadow1);\n        window.sessionState.roleOf.Shadow2 && window.currentSubs.push(window.sessionState.roleOf.Shadow2);\n        window.sessionState.roleOf.Shadow3 && window.currentSubs.push(window.sessionState.roleOf.Shadow3);\n        window.sessionState.roleOf.Shadow4 && window.currentSubs.push(window.sessionState.roleOf.Shadow4);\n        window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n        window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n        window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n        break;\n\n      default:\n        window.currentSubs = [];\n        break;\n    }\n\n    window.currentSubs.filter(function (str) {\n      return str.indexOf(window.myName) === -1;\n    }); //don't include self\n  }\n\n  function setTracks() {\n    return new Promise(resolve => {\n      //cycle through each participant in meeting\n      let ps = callObject.participants();\n      window.test = ps;\n      Object.keys(ps).forEach(p => {\n        let participant = ps[p];\n        let thisUserName = participant.user_name;\n        window.users[p] = thisUserName;\n\n        if (p === 'local' || thisUserName == window.myName) {\n          return;\n        } //if SESSION STATE NOT KNOWN, don't subscribe to anyone yet\n\n\n        if (!window.sessionState.isKnown) {\n          callObject.updateParticipant(participant.session_id, {\n            setSubscribedTracks: false\n          });\n          return;\n        }\n\n        console.log(\"This username is: \" + thisUserName); //If NOT ACTIVE (and not setting view mode), subscribe to everyone in the meeting\n\n        if (!window.sessionState.isActive && !viewMode) {\n          //audio only if currently Seconding\n          // if (window.myRole.includes('Actor')) {\n          //     switch (window.myRole) {\n          //         case 'Actor1':\n          //                 if (thisUserName==window.sessionState.roleOf.Participant1 || thisUserName=='SUPERDUPER') {\n          //                     console.log('Subscribing to audio only for: ' + thisUserName);\n          //                     callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n          //                     callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: true, video: false, screenVideo: true, screenAudio:true}});\n          //                 } else {\n          //                     console.log('Subscribing to: ' + thisUserName);\n          //                     window.currentSubs.push(thisUserName);\n          //                     callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n          //                     subscribedTo++;\n          //                 }\n          //             break;\n          //         case 'Actor2':\n          //             if (thisUserName==window.sessionState.roleOf.Participant2 || thisUserName=='SUPERDUPER') {\n          //                 console.log('Subscribing to audio only for: ' + thisUserName);\n          //                 callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n          //                 callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: true, video: false, screenVideo: true, screenAudio:true}});\n          //             } else {\n          //                 console.log('Subscribing to: ' + thisUserName);\n          //                 window.currentSubs.push(thisUserName);\n          //                 callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n          //                 subscribedTo++;\n          //             }\n          //         break;\n          //         default:\n          //             break;\n          //     }\n          // }\n          // // audio and video for everyone else\n          // else {  \n          // exclude screenshare's in-ear audio stream\n          if (thisUserName == 'SUPERDUPER') {\n            console.log('Not subscribing to: ' + thisUserName);\n            callObject.updateParticipant(participant.session_id, {\n              setSubscribedTracks: {\n                audio: false,\n                video: false,\n                screenVideo: true,\n                screenAudio: true\n              }\n            });\n          } else {\n            console.log('Subscribing to: ' + thisUserName);\n            window.currentSubs.push(thisUserName); // if (!callObject.participants()[participant.session_id].tracks.video.subscribed){ \n            //     callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});  \n            // }\n\n            callObject.updateParticipant(participant.session_id, {\n              setSubscribedTracks: true\n            });\n            subscribedTo++;\n          } // }\n\n        } //IF ACTIVE (or selecting viewmode), just subscribe to those listed in currentSubs;\n        else if (window.sessionState.isActive || viewMode) {\n            if (window.currentSubs.includes(thisUserName + '_AUDIO')) {\n              console.log('Subscribing to audio only for: ' + thisUserName);\n              callObject.updateParticipant(participant.session_id, {\n                setSubscribedTracks: {\n                  audio: true,\n                  video: false,\n                  screenVideo: false\n                }\n              });\n            } else if (window.currentSubs.includes(thisUserName)) {\n              console.log('Subscribing to: ' + thisUserName);\n              callObject.updateParticipant(participant.session_id, {\n                setSubscribedTracks: true\n              });\n              subscribedTo++;\n            } else if (!window.currentSubs.includes(thisUserName)) {\n              console.log('NOT subscribing to: ' + thisUserName + ', sessionID: ' + participant.session_id);\n              callObject.updateParticipant(participant.session_id, {\n                setSubscribedTracks: false\n              });\n            }\n          }\n      });\n      resolve();\n    });\n  }\n\n  setTracks().then(() => {\n    //remove screenshare widget from currentSubs array\n    const index = window.currentSubs.indexOf('SUPERDUPER');\n\n    if (index > -1) {\n      window.currentSubs.splice(index, 1);\n    } //print subscriptions\n\n\n    window.currentSubs.filter(function (str) {\n      return str.indexOf(window.myName) === -1;\n    }); //don't include self\n\n    var iterator = window.currentSubs.values();\n    console.log(\"Currently subscribed to:\");\n\n    for (let elements of iterator) {\n      console.log(elements);\n    }\n\n    if (window.currentSubs.length < 1) {\n      console.log(\"No one.\");\n    }\n\n    window.updateCall();\n    viewMode = null;\n    window.updateTray();\n    window.updateTile(); //if no admin (or admin has left), start asking for state\n    // if (adminPresent==false) {\n    //     window.sessionState.isKnown=false;\n    //     if (typeof(stateRequest)!='undefined') {clearInterval(stateRequest);}\n    //     stateRequest = setInterval(getState,2500);\n    //     console.log('no Admin present');\n    // }\n    // if (subscribedTo==0) {\n    //     window.isPopulated = false;\n    //     document.getElementById('empty-room').style.opacity='1';\n    //     if(!!document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\")){document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\").style.visibility='hidden';}\n    //     if (window.sessionState.isActive==true) {\n    //         document.getElementById('empty-text').innerHTML=\"Hold that thought! 😐 <br><br> We're working to fix a connection problem.\"\n    //     } else if (window.sessionState.isActive==false) {\n    //         document.getElementById('empty-text').innerHTML=\"👋 <br>You're here!<br>Waiting for everyone else...\"\n    //     }\n    // } else if (subscribedTo>0) {\n    //     window.isPopulated = true;\n    //     document.getElementById('empty-room').style.opacity='0';\n    //     if (document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\")){\n    //         document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\").style.visibility='visible';\n    //     }\n    // }\n  });\n}\n;","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test3/src/hooks/setSubscriptions.js"],"names":["setSubscriptions","callObject","viewMode","window","sessionState","console","log","myRole","subscribedTo","currentSubs","isActive","roleOf","Shadow1","push","Seller","Buyer1","Buyer2","Buyer3","AdminVisible","filter","str","indexOf","myName","Shadow2","Shadow3","Shadow4","setTracks","Promise","resolve","ps","participants","test","Object","keys","forEach","p","participant","thisUserName","user_name","users","isKnown","updateParticipant","session_id","setSubscribedTracks","audio","video","screenVideo","screenAudio","includes","then","index","splice","iterator","values","elements","length","updateCall","updateTray","updateTile"],"mappings":"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","sourcesContent":["// import { useEffect } from \"react\";\n// import SessionContext from '../../SessionContext';\n\nexport default function setSubscriptions(callObject,viewMode=null) {\n\n    if (!window.sessionState) {return;}\n\n    console.log('Setting subscriptions...');\n    console.log('****My role is: ' + window.myRole);\n    console.log('viewMode is: ' + viewMode);\n    let subscribedTo=0;\n    window.currentSubs=[];\n    \n    //if session is active, set currentSubs according to my role\n        if (!viewMode && window.sessionState.isActive) {\n            switch (window.myRole) {\n                case 'Buyer1':\n                case 'Buyer2':\n                case 'Buyer3':\n                    window.currentSubs=[];\n                    window.sessionState.roleOf.Shadow1 && window.currentSubs.push(window.sessionState.roleOf.Shadow1); // see shadow1 if there is a shadow1\n                    !window.sessionState.roleOf.Shadow1 && window.sessionState.roleOf.Seller && window.currentSubs.push(window.sessionState.roleOf.Seller); //otherwise, see the original seller\n\n                    break;\n                case 'Seller':\n                    window.currentSubs=[];\n                    window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n                    window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n                    window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n                    break;\n                case 'Shadow1':\n                case 'Shadow2':\n                case 'Shadow3':\n                case 'Shadow4':\n                    window.currentSubs=[];\n                    window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n                    window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n                    window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n                    window.sessionState.roleOf.Seller && window.currentSubs.push(window.sessionState.roleOf.Seller+'_AUDIO');\n                    break;\n                case 'Attendee':\n                    window.currentSubs=[];\n                    break;\n                default:\n                    window.currentSubs=[];\n                    break;\n            }\n            //Add Admin to currentSubs if applicable\n            if (window.sessionState.AdminVisible) {\n            window.currentSubs.push (\"Admin\");\n        }\n\n        window.currentSubs.filter(function (str) {return str.indexOf(window.myName) === -1}) //don't include self\n\n    }\n\n    if(viewMode) {\n\n        switch (viewMode) {\n            case 'Seller':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Seller && window.currentSubs.push(window.sessionState.roleOf.Seller);\n                window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n                window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n                window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n                break;\n            case 'Shadow1':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Shadow1 && window.currentSubs.push(window.sessionState.roleOf.Shadow1);\n                window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n                window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n                window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n                break;\n            case 'Shadow2':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Shadow2 && window.currentSubs.push(window.sessionState.roleOf.Shadow2);\n                window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n                window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n                window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n                break;\n            case 'Shadow3':\n                window.sessionState.roleOf.Shadow3 && window.currentSubs.push(window.sessionState.roleOf.Shadow3);\n                window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n                window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n                window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n                break;\n            case 'Shadow4':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Shadow4 && window.currentSubs.push(window.sessionState.roleOf.Shadow4);\n                window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n                window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n                window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n                break;\n            case 'All':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Seller && window.currentSubs.push(window.sessionState.roleOf.Seller);\n                window.sessionState.roleOf.Shadow1 && window.currentSubs.push(window.sessionState.roleOf.Shadow1);\n                window.sessionState.roleOf.Shadow2 && window.currentSubs.push(window.sessionState.roleOf.Shadow2);\n                window.sessionState.roleOf.Shadow3 && window.currentSubs.push(window.sessionState.roleOf.Shadow3);\n                window.sessionState.roleOf.Shadow4 && window.currentSubs.push(window.sessionState.roleOf.Shadow4);\n                window.sessionState.roleOf.Buyer1 && window.currentSubs.push(window.sessionState.roleOf.Buyer1);\n                window.sessionState.roleOf.Buyer2 && window.currentSubs.push(window.sessionState.roleOf.Buyer2);\n                window.sessionState.roleOf.Buyer3 && window.currentSubs.push(window.sessionState.roleOf.Buyer3);\n                break;\n            default:\n                window.currentSubs=[];\n                break;\n        }\n\n        window.currentSubs.filter(function (str) {return str.indexOf(window.myName) === -1}) //don't include self\n    }\n\n    \n    function setTracks() {\n\n        return new Promise( (resolve) => {\n\n            //cycle through each participant in meeting\n            let ps = callObject.participants();\n            window.test=ps;\n            Object.keys(ps).forEach((p) => {\n\n                let participant = ps[p];\n                let thisUserName = participant.user_name;\n                window.users[p]=thisUserName;\n\n                if (p === 'local' || thisUserName==window.myName) {\n                    return;\n                } \n\n    \n\n                //if SESSION STATE NOT KNOWN, don't subscribe to anyone yet\n                if (!window.sessionState.isKnown) {\n                    callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                    return;\n                }\n\n\n\n                console.log(\"This username is: \" +thisUserName);\n                //If NOT ACTIVE (and not setting view mode), subscribe to everyone in the meeting\n                if (!window.sessionState.isActive && !viewMode) {\n\n                    //audio only if currently Seconding\n                    // if (window.myRole.includes('Actor')) {\n                    //     switch (window.myRole) {\n                    //         case 'Actor1':\n                    //                 if (thisUserName==window.sessionState.roleOf.Participant1 || thisUserName=='SUPERDUPER') {\n                    //                     console.log('Subscribing to audio only for: ' + thisUserName);\n                    //                     callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                    //                     callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: true, video: false, screenVideo: true, screenAudio:true}});\n                    //                 } else {\n                    //                     console.log('Subscribing to: ' + thisUserName);\n                    //                     window.currentSubs.push(thisUserName);\n                    //                     callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                    //                     subscribedTo++;\n                    //                 }\n                    //             break;\n                    //         case 'Actor2':\n                    //             if (thisUserName==window.sessionState.roleOf.Participant2 || thisUserName=='SUPERDUPER') {\n                    //                 console.log('Subscribing to audio only for: ' + thisUserName);\n                    //                 callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                    //                 callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: true, video: false, screenVideo: true, screenAudio:true}});\n                    //             } else {\n                    //                 console.log('Subscribing to: ' + thisUserName);\n                    //                 window.currentSubs.push(thisUserName);\n                    //                 callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                    //                 subscribedTo++;\n                    //             }\n                    //         break;\n                        \n                    //         default:\n                    //             break;\n                    //     }\n                    // }\n\n                    // // audio and video for everyone else\n                    // else {  \n                        // exclude screenshare's in-ear audio stream\n\n                        if (thisUserName=='SUPERDUPER') {\n                            console.log('Not subscribing to: ' + thisUserName);\n                            callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: false, video: false, screenVideo: true, screenAudio: true}});\n\n                        \n                        } else {\n                            console.log('Subscribing to: ' + thisUserName);\n                            window.currentSubs.push(thisUserName);\n                            // if (!callObject.participants()[participant.session_id].tracks.video.subscribed){ \n                            //     callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});  \n                            // }\n                            callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                            subscribedTo++;\n                            }    \n\n                    // }\n\n\n\n                } \n\n                //IF ACTIVE (or selecting viewmode), just subscribe to those listed in currentSubs;\n                else if (window.sessionState.isActive || viewMode) {\n                    if(window.currentSubs.includes(thisUserName+'_AUDIO')) {\n                        console.log('Subscribing to audio only for: ' + thisUserName);\n                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: true, video: false, screenVideo: false}});\n                    }\n                    else if(window.currentSubs.includes(thisUserName)) {\n                        console.log('Subscribing to: ' + thisUserName);\n                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                        subscribedTo++;\n                    }\n                    else if (!window.currentSubs.includes(thisUserName)) {\n                        console.log('NOT subscribing to: ' + thisUserName + ', sessionID: ' + participant.session_id);\n                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                    }\n                }\n            });\n            resolve();\n        })\n    }\n    \n    setTracks().then(()=>{\n        \n        //remove screenshare widget from currentSubs array\n        const index = window.currentSubs.indexOf('SUPERDUPER');\n        if (index > -1) {\n          window.currentSubs.splice(index, 1);\n        }\n    //print subscriptions\n\n    window.currentSubs.filter(function (str) {return str.indexOf(window.myName) === -1}) //don't include self\n\n    var iterator = window.currentSubs.values();\n    console.log(\"Currently subscribed to:\");\n    for (let elements of iterator) { \n        console.log(elements); \n    } \n    if (window.currentSubs.length < 1) {\n        console.log (\"No one.\")\n    }\n    window.updateCall();\n    viewMode=null;\n    window.updateTray();\n    window.updateTile();\n\n\n        //if no admin (or admin has left), start asking for state\n        // if (adminPresent==false) {\n        //     window.sessionState.isKnown=false;\n        //     if (typeof(stateRequest)!='undefined') {clearInterval(stateRequest);}\n        //     stateRequest = setInterval(getState,2500);\n        //     console.log('no Admin present');\n        // }\n        // if (subscribedTo==0) {\n        //     window.isPopulated = false;\n        //     document.getElementById('empty-room').style.opacity='1';\n        //     if(!!document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\")){document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\").style.visibility='hidden';}\n        //     if (window.sessionState.isActive==true) {\n        //         document.getElementById('empty-text').innerHTML=\"Hold that thought! 😐 <br><br> We're working to fix a connection problem.\"\n        //     } else if (window.sessionState.isActive==false) {\n        //         document.getElementById('empty-text').innerHTML=\"👋 <br>You're here!<br>Waiting for everyone else...\"\n\n        //     }\n        // } else if (subscribedTo>0) {\n        //     window.isPopulated = true;\n        //     document.getElementById('empty-room').style.opacity='0';\n        //     if (document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\")){\n        //         document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\").style.visibility='visible';\n        //     }\n\n        // }\n\n    })\n\n    \n   \n};\n\n"]},"metadata":{},"sourceType":"module"}