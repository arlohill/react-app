{"ast":null,"code":"import { useContext, useEffect } from \"react\";\nimport SessionStateContext from '../SessionStateContext';\nimport MyContext from '../MyContext';\nimport CallObjectContext from '../CallObjectContext';\n\nfunction useUpdateUserList() {\n  const callObject = useContext(CallObjectContext);\n  const {\n    session\n  } = useContext(SessionStateContext);\n  const [sessionState, setSessionState] = session;\n  const {\n    myStateArray,\n    // setName, \n    // setRole,\n    setUserList,\n    // setViewMode,\n    // setCamOnAtSessionStart,\n    // setMicOnAtSessionStart,\n    // setAmAdmin, \n    setAdminPresent\n  } = useContext(MyContext);\n  useEffect(() => {\n    const getUserList = new Promise(resolve => {\n      console.log('*****UPDATING PARTICIPANT LIst******');\n      let userListIncludesAdmin = false; //default\n\n      let ps = callObject.participants();\n      let workingUserList = {\n        names: [],\n        sessionIdFor: {}\n      };\n\n      for (const p in ps) {\n        let thisUserName = ps[p].user_name;\n        let thisSessionId = ps[p].session_id;\n        workingUserList.names.push(thisUserName); //add each user_name with its sessionID to UserList\n\n        workingUserList.sessionIdFor[thisUserName] = thisSessionId;\n\n        if (thisUserName.includes('_Admin') && p !== 'local') {\n          userListIncludesAdmin = true;\n        }\n      }\n\n      ;\n      userListIncludesAdmin ? console.log('Admin IS present') : console.log('Admin IS NOT present');\n      workingUserList.names.sort(); //alphebetize that list \n\n      console.log(`here's the userList: ${workingUserList.names}`);\n      resolve([workingUserList, userListIncludesAdmin]);\n    });\n    getUserList.then(([workingUserList, userListIncludesAdmin]) => {\n      console.log(`************now the userList is: ${workingUserList.names}`); //print userList\n\n      setUserList(workingUserList);\n      console.log(`userListIncludesAdmin: ${userListIncludesAdmin}`);\n      setAdminPresent(userListIncludesAdmin);\n    });\n  });\n}\n\nexport default useUpdateUserList;","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test4/src/hooks/useUpdateUserList.js"],"names":["useContext","useEffect","SessionStateContext","MyContext","CallObjectContext","useUpdateUserList","callObject","session","sessionState","setSessionState","myStateArray","setUserList","setAdminPresent","getUserList","Promise","resolve","console","log","userListIncludesAdmin","ps","participants","workingUserList","names","sessionIdFor","p","thisUserName","user_name","thisSessionId","session_id","push","includes","sort","then"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;;AAEA,SAASC,iBAAT,GAA6B;AAEzB,QAAMC,UAAU,GAAGN,UAAU,CAACI,iBAAD,CAA7B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAcP,UAAU,CAACE,mBAAD,CAA9B;AACA,QAAM,CAAEM,YAAF,EAAeC,eAAf,IAAkCF,OAAxC;AACA,QAAM;AAAEG,IAAAA,YAAF;AACF;AACA;AACAC,IAAAA,WAHE;AAIF;AACA;AACA;AACA;AACAC,IAAAA;AARE,MASEZ,UAAU,CAACG,SAAD,CATlB;AAYAF,EAAAA,SAAS,CAAC,MAAK;AAEX,UAAMY,WAAW,GAAG,IAAIC,OAAJ,CAAaC,OAAD,IAAW;AAEvCC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,UAAIC,qBAAqB,GAAC,KAA1B,CAHuC,CAGJ;;AACnC,UAAIC,EAAE,GAACb,UAAU,CAACc,YAAX,EAAP;AACA,UAAIC,eAAe,GAAG;AAClBC,QAAAA,KAAK,EAAE,EADW;AAElBC,QAAAA,YAAY,EAAE;AAFI,OAAtB;;AAKA,WAAK,MAAMC,CAAX,IAAgBL,EAAhB,EAAoB;AAChB,YAAIM,YAAY,GAAGN,EAAE,CAACK,CAAD,CAAF,CAAME,SAAzB;AACA,YAAIC,aAAa,GAAGR,EAAE,CAACK,CAAD,CAAF,CAAMI,UAA1B;AACAP,QAAAA,eAAe,CAACC,KAAhB,CAAsBO,IAAtB,CAA2BJ,YAA3B,EAHgB,CAG+B;;AAC/CJ,QAAAA,eAAe,CAACE,YAAhB,CAA6BE,YAA7B,IAA6CE,aAA7C;;AACA,YAAIF,YAAY,CAACK,QAAb,CAAsB,QAAtB,KAAmCN,CAAC,KAAG,OAA3C,EAAoD;AAChDN,UAAAA,qBAAqB,GAAG,IAAxB;AACH;AACJ;;AAAA;AAEDA,MAAAA,qBAAqB,GAAGF,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAH,GAAqCD,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAA1D;AACAI,MAAAA,eAAe,CAACC,KAAhB,CAAsBS,IAAtB,GArBuC,CAqBH;;AACpCf,MAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBI,eAAe,CAACC,KAAM,EAA1D;AACAP,MAAAA,OAAO,CAAC,CAACM,eAAD,EAAiBH,qBAAjB,CAAD,CAAP;AACH,KAxBmB,CAApB;AA0BJL,IAAAA,WAAW,CAACmB,IAAZ,CAAiB,CAAC,CAACX,eAAD,EAAiBH,qBAAjB,CAAD,KAA2C;AACxDF,MAAAA,OAAO,CAACC,GAAR,CAAa,oCAAmCI,eAAe,CAACC,KAAM,EAAtE,EADwD,CACmB;;AAC3EX,MAAAA,WAAW,CAACU,eAAD,CAAX;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAa,0BAAyBC,qBAAsB,EAA5D;AACAN,MAAAA,eAAe,CAACM,qBAAD,CAAf;AAEH,KAND;AASC,GArCQ,CAAT;AAyCH;;AAED,eAAeb,iBAAf","sourcesContent":["import { useContext, useEffect } from \"react\";\nimport SessionStateContext from '../SessionStateContext';\nimport MyContext from '../MyContext';\nimport CallObjectContext from '../CallObjectContext'\n\nfunction useUpdateUserList() {\n\n    const callObject = useContext(CallObjectContext);\n    const { session } = useContext(SessionStateContext);\n    const [ sessionState,setSessionState] = session;    \n    const { myStateArray, \n        // setName, \n        // setRole,\n        setUserList,\n        // setViewMode,\n        // setCamOnAtSessionStart,\n        // setMicOnAtSessionStart,\n        // setAmAdmin, \n        setAdminPresent,\n        } = useContext(MyContext);\n\n\n    useEffect(()=> {\n\n        const getUserList = new Promise((resolve)=>{\n\n            console.log('*****UPDATING PARTICIPANT LIst******');\n            let userListIncludesAdmin=false;   //default\n            let ps=callObject.participants(); \n            let workingUserList = {\n                names: [],\n                sessionIdFor: {},\n            }\n        \n            for (const p in ps) {\n                let thisUserName = ps[p].user_name;\n                let thisSessionId = ps[p].session_id;\n                workingUserList.names.push(thisUserName);      //add each user_name with its sessionID to UserList\n                workingUserList.sessionIdFor[thisUserName] = thisSessionId;\n                if (thisUserName.includes('_Admin') && p!=='local') {\n                    userListIncludesAdmin = true;\n                } \n            };\n        \n            userListIncludesAdmin ? console.log('Admin IS present') : console.log('Admin IS NOT present');\n            workingUserList.names.sort();       //alphebetize that list \n            console.log(`here's the userList: ${workingUserList.names}`);\n            resolve([workingUserList,userListIncludesAdmin]);\n        })\n\n    getUserList.then(([workingUserList,userListIncludesAdmin])=>{\n        console.log(`************now the userList is: ${workingUserList.names}`);  //print userList\n        setUserList(workingUserList);\n        console.log(`userListIncludesAdmin: ${userListIncludesAdmin}`)\n        setAdminPresent(userListIncludesAdmin);\n\n    })\n        \n\n    },);\n\n    \n\n} \n\nexport default useUpdateUserList;\n"]},"metadata":{},"sourceType":"module"}