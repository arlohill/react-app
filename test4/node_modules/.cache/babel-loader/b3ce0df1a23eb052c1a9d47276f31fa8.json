{"ast":null,"code":"import _slicedToArray from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from'react';import'./Tray.css';import TrayButton,{TYPE_MUTE_CAMERA,TYPE_MUTE_MIC,TYPE_SCREEN,TYPE_LEAVE,TYPE_CHAT}from'../TrayButton/TrayButton';import InputSelector from'../InputSelector/InputSelector';import Chat from'../Chat/Chat';import CallObjectContext from'../../CallObjectContext';import{logDailyEvent}from'../../logUtils';import DailyIframe from'@daily-co/daily-js';import MyContext from'../../MyContext';import SessionStateContext from'../../SessionStateContext';function useForceUpdate(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];// integer state\nreturn function(){return setValue(function(value){return value+1;});};// update the state to force render\n}/**\n * Gets [isCameraMuted, isMicMuted, isSharingScreen].\n * This function is declared outside Tray() so it's not recreated every render\n * (which would require us to declare it as a useEffect dependency).\n */function getStreamStates(callObject){var isCameraMuted,isMicMuted,isSharingScreen=false;if(callObject&&callObject.participants()&&callObject.participants().local){var localParticipant=callObject.participants().local;isCameraMuted=!localParticipant.video;isMicMuted=!localParticipant.audio;isSharingScreen=localParticipant.screen;}return[isCameraMuted,isMicMuted,isSharingScreen];}/**\n * Props:\n * - onClickLeaveCall: () => ()\n * - disabled: boolean\n */export default function Tray(props){var callObject=useContext(CallObjectContext);var _useContext=useContext(SessionStateContext),session=_useContext.session;var _session=_slicedToArray(session,2),sessionState=_session[0],setSessionState=_session[1];var _useContext2=useContext(MyContext),myStateArray=_useContext2.myStateArray,setName=_useContext2.setName,setRole=_useContext2.setRole,setUserList=_useContext2.setUserList,setViewMode=_useContext2.setViewMode,setCamOnAtSessionStart=_useContext2.setCamOnAtSessionStart,setMicOnAtSessionStart=_useContext2.setMicOnAtSessionStart,setAdminPresent=_useContext2.setAdminPresent,setAmAdmin=_useContext2.setAmAdmin;var _myStateArray=_slicedToArray(myStateArray,2),myState=_myStateArray[0],setMyState=_myStateArray[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isCameraMuted=_useState4[0],setCameraMuted=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isMicMuted=_useState6[0],setMicMuted=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isSharingScreen=_useState8[0],setSharingScreen=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),displayChat=_useState10[0],setChatDisplay=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),highlightedChat=_useState12[0],setChatHighlight=_useState12[1];var forceUpdate=useForceUpdate();var micCaret=React.createRef();var micSettings=React.createRef();var camCaret=React.createRef();var camSettings=React.createRef();window.updateTray=function(){forceUpdate();};var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),showMicSettings=_useState14[0],setShowMicSettings=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),showCamSettings=_useState16[0],setShowCamSettings=_useState16[1];function toggleCamera(){callObject.setLocalVideo(isCameraMuted);}function toggleMic(){callObject.setLocalAudio(isMicMuted);}useEffect(function(){document.addEventListener(\"mousedown\",handleClickOutside);return function cleanup(){document.removeEventListener(\"mousedown\",handleClickOutside);};});var handleClickOutside=function handleClickOutside(event){console.log('handling click');if(micSettings.current&&!micSettings.current.contains(event.target)&&!micCaret.current.contains(event.target)){setShowMicSettings(false);}else if(camSettings.current&&!camSettings.current.contains(event.target)&&!camCaret.current.contains(event.target)){setShowCamSettings(false);}};// function toggleSharingScreen() {\nfunction leaveCall(){props.onClickLeaveCall&&props.onClickLeaveCall();}function toggleChat(){setChatDisplay(!displayChat);if(highlightedChat){setChatHighlight(!highlightedChat);}}function handleNewChat(){setChatHighlight(!highlightedChat);}function openScreenShareWindow(){window.open(\"http://\"+window.location.host+\"/share\",\"test\",\"width=300, height=300\");}/**\n   * Start listening for changes on sessionState, to turn cam + mic on and off\n  //  */useEffect(function(){if(sessionState.isActive){if(!myState.role.includes('Shadow')&&!myState.role.includes('Seller')&&!myState.role.includes('Buyer')){setMicOnAtSessionStart(callObject.localAudio());//\"remember\" if cam + mic were on or off before session started\nsetCamOnAtSessionStart(callObject.localVideo());callObject.setLocalAudio(false);callObject.setLocalVideo(false);}}else if(!sessionState.isActive){!callObject.localAudio()&&callObject.setLocalAudio(myState.micOnAtSessionStart);!callObject.localVideo()&&callObject.setLocalVideo(myState.camOnAtSessionStart);setMicOnAtSessionStart(null);setCamOnAtSessionStart(null);}},[sessionState.isActive,myState.role]);/**\n   * Turn mic on and off when \n  //  */ /**\n   * Start listening for participant changes when callObject is set (i.e. when the component mounts).\n   * This event will capture any changes to your audio/video mute state.\n   */useEffect(function(){if(!callObject)return;function handleNewParticipantsState(event){event&&logDailyEvent(event);var _getStreamStates=getStreamStates(callObject),_getStreamStates2=_slicedToArray(_getStreamStates,3),isCameraMuted=_getStreamStates2[0],isMicMuted=_getStreamStates2[1],isSharingScreen=_getStreamStates2[2];setCameraMuted(isCameraMuted);setMicMuted(isMicMuted);setSharingScreen(isSharingScreen);}// Use initial state\nhandleNewParticipantsState();// Listen for changes in state\ncallObject.on('participant-updated',handleNewParticipantsState);// Stop listening for changes in state\nreturn function cleanup(){callObject.off('participant-updated',handleNewParticipantsState);};},[callObject]);return/*#__PURE__*/React.createElement(\"div\",{className:myState.amAdmin?\"tray-with-sidebar\":\"tray\"},/*#__PURE__*/React.createElement(TrayButton,{type:TYPE_MUTE_CAMERA// disabled={props.camDisabled}\n,highlighted:isCameraMuted,onClick:toggleCamera}),/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){setShowCamSettings(!showCamSettings);},style:{position:'absolute',left:'57px',bottom:'23px'}},/*#__PURE__*/React.createElement(\"p\",{className:\"caret\",ref:camCaret},\"^\"),showCamSettings?/*#__PURE__*/React.createElement(InputSelector,{type:\"video\",page:\"main\",ref:camSettings}):null),/*#__PURE__*/React.createElement(TrayButton,{type:TYPE_MUTE_MIC// disabled={props.micDisabled}\n,highlighted:isMicMuted,onClick:toggleMic}),/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){setShowMicSettings(!showMicSettings);},style:{position:'absolute',left:'123px',bottom:'23px'}},/*#__PURE__*/React.createElement(\"p\",{className:\"caret\",ref:micCaret},\"^\"),showMicSettings?/*#__PURE__*/React.createElement(InputSelector,{type:\"audio\",page:\"main\",ref:micSettings}):null),DailyIframe.supportedBrowser().supportsScreenShare&&myState.amAdmin&&/*#__PURE__*/React.createElement(TrayButton,{type:TYPE_SCREEN// disabled={props.disabled}\n,highlighted:isSharingScreen,onClick:openScreenShareWindow// onClick={toggleSharingScreen}\n}),/*#__PURE__*/React.createElement(TrayButton,{type:TYPE_CHAT// disabled={props.disabled}\n,highlighted:highlightedChat,onClick:toggleChat}),/*#__PURE__*/React.createElement(Chat,{onClickDisplay:displayChat,notification:handleNewChat}),/*#__PURE__*/React.createElement(\"div\",{className:\"status-display\"},/*#__PURE__*/React.createElement(\"div\",{style:{height:'30px'}},\"Roleplay:  \\xA0\",sessionState.isActive?/*#__PURE__*/React.createElement(\"div\",{className:\"display-card active\"},\"Live\"):/*#__PURE__*/React.createElement(\"div\",{className:\"display-card paused\"},\"Paused\")),/*#__PURE__*/React.createElement(\"div\",{className:\"vertical-line\"}),!sessionState.isActive||myState.role!=='Admin'&&myState.role!=='Attendee'?/*#__PURE__*/React.createElement(\"div\",{style:{height:'30px'}},\"My Role: \\xA0\",myState.role=='Admin'||myState.role=='Attendee'?/*#__PURE__*/React.createElement(\"span\",{className:\"display-card role\"},\"Viewer\"):/*#__PURE__*/React.createElement(\"span\",{className:\"display-card role\"},myState.role.match(/\\D/g).join(''))):/*#__PURE__*/React.createElement(\"div\",{className:\"my-view\"},\"My View: \\xA0\",/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"form\",{action:\"\"},/*#__PURE__*/React.createElement(\"fieldset\",{style:{border:'none'}},/*#__PURE__*/React.createElement(\"select\",{className:\"my-view-selector\",value:myState.viewMode,onChange:function onChange(e){return setViewMode(e.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"Seller\"},\"Seller\"),sessionState.roleOf.Shadow1&&/*#__PURE__*/React.createElement(\"option\",{value:\"Shadow1\",selected:true},\"Shadow 1\"),sessionState.roleOf.Shadow2&&/*#__PURE__*/React.createElement(\"option\",{value:\"Shadow2\"},\"Shadow 2\"),sessionState.roleOf.Shadow3&&/*#__PURE__*/React.createElement(\"option\",{value:\"Shadow3\"},\"Shadow 3\"),sessionState.roleOf.Shadow4&&/*#__PURE__*/React.createElement(\"option\",{value:\"Shadow4\"},\"Shadow 4\"),sessionState.roleOf.Shadow1||sessionState.roleOf.Shadow2||sessionState.roleOf.Shadow3||sessionState.roleOf.Shadow4&&/*#__PURE__*/React.createElement(\"option\",{value:\"All\"},\"All\"))))))),/*#__PURE__*/React.createElement(TrayButton,{type:TYPE_LEAVE,disabled:props.disabled,newButtonGroup:true,highlighted:true,onClick:leaveCall}));}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test4/src/components/Tray/Tray.js"],"names":["React","useContext","useEffect","useState","TrayButton","TYPE_MUTE_CAMERA","TYPE_MUTE_MIC","TYPE_SCREEN","TYPE_LEAVE","TYPE_CHAT","InputSelector","Chat","CallObjectContext","logDailyEvent","DailyIframe","MyContext","SessionStateContext","useForceUpdate","value","setValue","getStreamStates","callObject","isCameraMuted","isMicMuted","isSharingScreen","participants","local","localParticipant","video","audio","screen","Tray","props","session","sessionState","setSessionState","myStateArray","setName","setRole","setUserList","setViewMode","setCamOnAtSessionStart","setMicOnAtSessionStart","setAdminPresent","setAmAdmin","myState","setMyState","setCameraMuted","setMicMuted","setSharingScreen","displayChat","setChatDisplay","highlightedChat","setChatHighlight","forceUpdate","micCaret","createRef","micSettings","camCaret","camSettings","window","updateTray","showMicSettings","setShowMicSettings","showCamSettings","setShowCamSettings","toggleCamera","setLocalVideo","toggleMic","setLocalAudio","document","addEventListener","handleClickOutside","cleanup","removeEventListener","event","console","log","current","contains","target","leaveCall","onClickLeaveCall","toggleChat","handleNewChat","openScreenShareWindow","open","location","host","isActive","role","includes","localAudio","localVideo","micOnAtSessionStart","camOnAtSessionStart","handleNewParticipantsState","on","off","amAdmin","position","left","bottom","supportedBrowser","supportsScreenShare","height","match","join","border","viewMode","e","roleOf","Shadow1","Shadow2","Shadow3","Shadow4","disabled"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport './Tray.css';\nimport TrayButton, {\n  TYPE_MUTE_CAMERA,\n  TYPE_MUTE_MIC,\n  TYPE_SCREEN,\n  TYPE_LEAVE,\n  TYPE_CHAT,\n} from '../TrayButton/TrayButton';\nimport InputSelector from '../InputSelector/InputSelector';\nimport Chat from '../Chat/Chat';\nimport CallObjectContext from '../../CallObjectContext';\nimport { logDailyEvent } from '../../logUtils';\nimport DailyIframe from '@daily-co/daily-js';\nimport MyContext from '../../MyContext';\nimport SessionStateContext from '../../SessionStateContext';\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n/**\n * Gets [isCameraMuted, isMicMuted, isSharingScreen].\n * This function is declared outside Tray() so it's not recreated every render\n * (which would require us to declare it as a useEffect dependency).\n */\nfunction getStreamStates(callObject) {\n  let isCameraMuted,\n    isMicMuted,\n    isSharingScreen = false;\n  if (\n    callObject &&\n    callObject.participants() &&\n    callObject.participants().local\n  ) {\n    const localParticipant = callObject.participants().local;\n    isCameraMuted = !localParticipant.video;\n    isMicMuted = !localParticipant.audio;\n    isSharingScreen = localParticipant.screen;\n  }\n  return [isCameraMuted, isMicMuted, isSharingScreen];\n}\n\n/**\n * Props:\n * - onClickLeaveCall: () => ()\n * - disabled: boolean\n */\nexport default function Tray(props) {\n  const callObject = useContext(CallObjectContext);\n  const { session } = useContext(SessionStateContext);\n  const [ sessionState,setSessionState] = session;\n  const { myStateArray, \n    setName, \n    setRole,\n    setUserList,\n    setViewMode,\n    setCamOnAtSessionStart,\n    setMicOnAtSessionStart,\n    setAdminPresent,\n    setAmAdmin, \n  } = useContext(MyContext);\nconst [ myState,setMyState ] = myStateArray;\n  const [isCameraMuted, setCameraMuted] = useState(false);\n  const [isMicMuted, setMicMuted] = useState(false);\n  const [isSharingScreen, setSharingScreen] = useState(false);\n  const [displayChat, setChatDisplay] = useState(false);\n  const [highlightedChat, setChatHighlight] = useState(false);\n  const forceUpdate = useForceUpdate();\n  const micCaret = React.createRef();\n  const micSettings = React.createRef();\n  const camCaret = React.createRef();\n  const camSettings = React.createRef();\n  \n\n  window.updateTray = () => {\n    forceUpdate();\n  }\n\n  const [showMicSettings,setShowMicSettings] = useState(false);\n  const [showCamSettings,setShowCamSettings] = useState(false);\n\n\n  function toggleCamera() {\n    callObject.setLocalVideo(isCameraMuted);\n  }\n\n  function toggleMic() {\n    callObject.setLocalAudio(isMicMuted);\n  }\n\n\n  useEffect(()=> {\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n\n return function cleanup() {\n    document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  })\n\n  const handleClickOutside = (event) => {\n    console.log('handling click');\n    if (micSettings.current &&\n      !micSettings.current.contains(event.target) &&\n      !micCaret.current.contains(event.target)\n    ) {\n      setShowMicSettings(false);\n    } else if (camSettings.current &&\n      !camSettings.current.contains(event.target) &&\n      !camCaret.current.contains(event.target)\n    ) {\n      setShowCamSettings(false);\n    } \n    \n  }\n\n  // function toggleSharingScreen() {\n\n    \n\n  function leaveCall() {\n    props.onClickLeaveCall && props.onClickLeaveCall();\n  }\n\n  function toggleChat() {\n    setChatDisplay(!displayChat);\n    if (highlightedChat) {\n      setChatHighlight(!highlightedChat);\n    }\n  }\n\n  function handleNewChat() {\n    setChatHighlight(!highlightedChat);\n  }\n\n  function openScreenShareWindow () {\n    window.open(\"http://\" + window.location.host + \"/share\",\"test\",\"width=300, height=300\");\n\n  }\n\n\n   /**\n   * Start listening for changes on sessionState, to turn cam + mic on and off\n  //  */\n  useEffect(()=> {\n   if (sessionState.isActive) {\n      if (!myState.role.includes('Shadow') && !myState.role.includes('Seller') && !myState.role.includes('Buyer')) {\n        setMicOnAtSessionStart(callObject.localAudio());   //\"remember\" if cam + mic were on or off before session started\n        setCamOnAtSessionStart(callObject.localVideo());\n        callObject.setLocalAudio(false);\n        callObject.setLocalVideo(false);\n      }\n   } else if (!sessionState.isActive) {\n        !callObject.localAudio() && callObject.setLocalAudio(myState.micOnAtSessionStart);\n        !callObject.localVideo() && callObject.setLocalVideo(myState.camOnAtSessionStart);\n        setMicOnAtSessionStart(null);\n        setCamOnAtSessionStart(null);\n   }\n\n  },[sessionState.isActive,myState.role]);\n\n    /**\n   * Turn mic on and off when \n  //  */\n\n  /**\n   * Start listening for participant changes when callObject is set (i.e. when the component mounts).\n   * This event will capture any changes to your audio/video mute state.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleNewParticipantsState(event) {\n      event && logDailyEvent(event);\n      const [isCameraMuted, isMicMuted, isSharingScreen] = getStreamStates(\n        callObject\n      );\n      setCameraMuted(isCameraMuted);\n      setMicMuted(isMicMuted);\n      setSharingScreen(isSharingScreen);\n    }\n\n    // Use initial state\n    handleNewParticipantsState();\n\n    // Listen for changes in state\n    callObject.on('participant-updated', handleNewParticipantsState);\n\n    // Stop listening for changes in state\n    return function cleanup() {\n      callObject.off('participant-updated', handleNewParticipantsState);\n    };\n  }, [callObject]);\n\n\n\n  return (\n    <div className={myState.amAdmin ? \"tray-with-sidebar\" : \"tray\"}>\n\n      <TrayButton\n        type={TYPE_MUTE_CAMERA}\n        // disabled={props.camDisabled}\n        highlighted={isCameraMuted}\n        onClick={toggleCamera}\n      />\n      \n      {/* {!props.camDisabled && */}\n      <div onClick={()=>{setShowCamSettings(!showCamSettings)}}  style={{position:'absolute',left:'57px', bottom:'23px'}}>\n        <p className=\"caret\" ref={camCaret}>^</p>\n                {showCamSettings ? \n                (<InputSelector type='video' page='main' ref={camSettings}/>)\n                : \n                null}\n      </div>\n      {/* } */}\n      \n      <TrayButton\n        type={TYPE_MUTE_MIC}\n        // disabled={props.micDisabled}\n        highlighted={isMicMuted}\n        onClick={toggleMic}\n      />\n      {/* {!props.micDisabled && */}\n        <div onClick={()=>{setShowMicSettings(!showMicSettings)}}  style={{position:'absolute',left:'123px', bottom:'23px'}}>\n        \n\n        <p className=\"caret\" ref={micCaret}>^</p>\n                {showMicSettings ? \n                (<InputSelector type='audio' page='main' ref={micSettings}/>)\n                : \n                null}\n                \n        </div>\n      {/* } */}\n\n      {DailyIframe.supportedBrowser().supportsScreenShare && myState.amAdmin && (\n        <TrayButton\n          type={TYPE_SCREEN}\n          // disabled={props.disabled}\n          highlighted={isSharingScreen}\n          onClick={openScreenShareWindow}\n          // onClick={toggleSharingScreen}\n        />\n      )}\n      <TrayButton\n        type={TYPE_CHAT}\n        // disabled={props.disabled}\n        highlighted={highlightedChat}\n        onClick={toggleChat}\n      />\n      <Chat onClickDisplay={displayChat} notification={handleNewChat} />\n      \n        \n\n\n\n      {/* Display room status and either my role or room selector +  */}\n          <div className='status-display'>\n\n            <div style={{height:'30px'}}>\n               Roleplay:  &nbsp;            \n                            {sessionState.isActive ? \n                              <div className='display-card active'>Live</div>\n                              :\n                              <div className='display-card paused'>Paused</div>\n                            }\n              </div>\n\n            <div className='vertical-line'></div>\n\n            {/* if session is paused or I have a role, display my role, otherwise show room selector */}\n            {!sessionState.isActive || (myState.role!=='Admin' && myState.role!=='Attendee')\n            \n                ?   ( <div style={{height:'30px'}}>\n                            My Role: &nbsp;\n                            {myState.role=='Admin' || myState.role=='Attendee' \n\n                            ? <span className='display-card role'> \n                                Viewer\n                              </span>\n                            : <span className='display-card role'> \n                                {myState.role.match(/\\D/g).join('')} \n                              </span>\n                            \n                            }\n                       </div>\n                    )\n            : ( <div className='my-view'>\n                        My View: &nbsp;\n                            <span > \n                              <form action = ''>\n                                <fieldset style={{border:'none'}}>\n                                    <select className='my-view-selector' value={myState.viewMode} onChange = {(e)=>setViewMode(e.target.value)}>\n                                        <option value = 'Seller'>Seller</option>\n                                        {sessionState.roleOf.Shadow1 && <option value = 'Shadow1' selected>Shadow 1</option>}\n                                        {sessionState.roleOf.Shadow2 && <option value = 'Shadow2'>Shadow 2</option>}\n                                        {sessionState.roleOf.Shadow3 && <option value = 'Shadow3'>Shadow 3</option>}\n                                        {sessionState.roleOf.Shadow4 && <option value = 'Shadow4'>Shadow 4</option>}\n                                        {sessionState.roleOf.Shadow1 ||\n                                          sessionState.roleOf.Shadow2 ||\n                                          sessionState.roleOf.Shadow3 ||\n                                          sessionState.roleOf.Shadow4 &&\n                                          <option value = 'All'>All</option>}\n                                    </select>\n                                </fieldset>\n                              </form>\n                            </span>\n                  </div>\n              )\n            \n              \n            }\n                            \n          \n             \n\n\n          </div>\n     \n      \n\n      <TrayButton\n        type={TYPE_LEAVE}\n        disabled={props.disabled}\n        newButtonGroup={true}\n        highlighted={true}\n        onClick={leaveCall}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}