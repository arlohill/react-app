{"ast":null,"code":"import _regeneratorRuntime from\"/Users/arlosb/Documents/GitHub/new react app/test1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/arlosb/Documents/GitHub/new react app/test1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _createForOfIteratorHelper from\"/Users/arlosb/Documents/GitHub/new react app/test1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/arlosb/Documents/GitHub/new react app/test1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useCallback}from'react';import Call from'../Call/Call';import StartScreen from'../StartScreen/StartScreen';import api from'../../api';import'./App.css';import Tray from'../Tray/Tray';import CallObjectContext from'../../CallObjectContext';// import MyInfoContext from '../../MyInfoContext';\nimport SessionContext from'../../SessionContext';import{roomUrlFromPageUrl,pageUrlFromRoomUrl}from'../../urlUtils';import DailyIframe from'@daily-co/daily-js';import{logDailyEvent}from'../../logUtils';import setSubscriptions from'../../hooks/setSubscriptions';import{sendState}from'../AdminPanel/AdminFunctions';import audioPlayer from'../../hooks/AudioPlayer';var STATE_IDLE='STATE_IDLE';var STATE_CREATING='STATE_CREATING';var STATE_JOINING='STATE_JOINING';var STATE_JOINED='STATE_JOINED';var STATE_LEAVING='STATE_LEAVING';var STATE_ERROR='STATE_ERROR';export default function App(){var _useState=useState(STATE_IDLE),_useState2=_slicedToArray(_useState,2),appState=_useState2[0],setAppState=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),roomUrl=_useState4[0],setRoomUrl=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),callObject=_useState6[0],setCallObject=_useState6[1];if(!window.pass.includes(window.myP)){//redirect if password is wrong\nwindow.location.href=\"http://secondbody.co\";}window.setViewMode=function(viewMode){viewMode&&console.log('Changing view mode to: '+viewMode);setSubscriptions(callObject,viewMode);};/**\n   * Creates a new call room.\n   */var createCall=useCallback(function(){setAppState(STATE_CREATING);return api.createRoom().then(function(room){return room.url;}).catch(function(error){console.log('Error creating room',error);setRoomUrl(null);setAppState(STATE_IDLE);});},[]);/**\n   * Starts joining an existing call.\n   *\n   * NOTE: In this demo we show how to completely clean up a call with destroy(),\n   * which requires creating a new call object before you can join() again.\n   * This isn't strictly necessary, but is good practice when you know you'll\n   * be done with the call object for a while and you're no longer listening to its\n   * events.\n   */ /*   \nARLO NOTE:\n      Below is where the trouble is. myInfo.name is set via a child component, <StartScreen>, \n      and it successfully changes myInfo.name (I've confirmed since it's pinned to the Window).\n      The below works... the first time. But then callObject.participants().local.user_name gets \"stuck\", \n      so if you exit and leave, or even refresh the page, it never changes. Weird behavior\n*/var startJoiningCall=useCallback(function(url){var newCallObject=DailyIframe.createCallObject({subscribeToTracksAutomatically:false,userName:window.myName//one way I've tred to do itâ€”-is this correct?\n});setRoomUrl(url);setCallObject(newCallObject);setAppState(STATE_JOINING);newCallObject.join({url:url,userName:window.myName});//another way I've tried to do it--is this correct?\nconsole.log('joining the call as '+window.myName);//this sometimes displays myInfo.name, sometimes not\nvar pageUrl=pageUrlFromRoomUrl(roomUrl)+'&N='+window.myName+'&R='+window.myRole;// let connector = '?';\n// if (pageUrl.includes('?roomUrl=')) {let connector = '&'};\n// if (window.myName) {\n//   if (pageUrl === window.location.href) return;\n//   window.history.replaceState(null, null, pageUrl + connector + \"R=\" + window.myRole + \"&N=\" + window.myName);\n// } else if (window.myRole) {\n//   if (pageUrl === window.location.href) return;\n//   window.history.replaceState(null, null, pageUrl + connector + \"R=\" + window.myRole);\n// } else {\n//   if (pageUrl === window.location.href) return;\n//   window.history.replaceState(null, null, pageUrl);\n// }\n},[]);/**\n   * Starts leaving the current call.\n   */var startLeavingCall=useCallback(function(){if(!callObject)return;// If we're in the error state, we've already \"left\", so just clean up\nif(appState===STATE_ERROR){callObject.destroy().then(function(){setRoomUrl(null);setCallObject(null);setAppState(STATE_IDLE);window.initialize();});}else{setAppState(STATE_LEAVING);callObject.leave();window.initialize();}},[callObject,appState]);/**\n   * If a room's already specified in the page's URL when the component mounts,\n   * join the room.\n   */useEffect(function(){var url=roomUrlFromPageUrl();url&&startJoiningCall(url);},[startJoiningCall]);/**\n   * Update the page's URL to reflect the active call when roomUrl changes.\n   *\n   * This demo uses replaceState rather than pushState in order to avoid a bit\n   * of state-management complexity. See the comments around enableCallButtons\n   * and enableStartButton for more information.\n   */useEffect(function(){var pageUrl=pageUrlFromRoomUrl(roomUrl);window.pageUrl=pageUrl;if(window.myName){if(pageUrl.indexOf('?')>-1){pageUrl+='&N='+window.myName;}else{pageUrl+='?N='+window.myName;}}if(window.myRole){if(pageUrl.indexOf('?')>-1){pageUrl+='&R='+window.myRole;}else{pageUrl+='?R='+window.myRole;}}if(window.myP){if(pageUrl.indexOf('?')>-1){pageUrl+='&P='+window.myP;}else{pageUrl+='?P='+window.myP;}}if(pageUrl===window.location.href)return;window.history.replaceState(null,null,pageUrl);},[roomUrl]);/**\n   * Uncomment to attach call object to window for debugging purposes.\n   */useEffect(function(){window.callObject=callObject;},[callObject]);// Only re-run the effect if callObject changes\nfunction getState(){if(window.sessionState.isKnown==true){clearInterval(window.stateRequest);return;}// if (window.adminPresent) {\ncallObject.sendAppMessage(\"State please?\",'*');console.log('Requesting meeting state...');}/**\n   * Update app state based on reported meeting state changes.\n   *\n   * NOTE: Here we're showing how to completely clean up a call with destroy().\n   * This isn't strictly necessary between join()s, but is good practice when\n   * you know you'll be done with the call object for a while and you're no\n   * longer listening to its events.\n   */useEffect(function(){if(!callObject)return;var events=['joined-meeting','left-meeting','error'];function handleNewMeetingState(event){event&&logDailyEvent(event);switch(callObject.meetingState()){case'joined-meeting':setAppState(STATE_JOINED);callObject.setNetworkTopology({topology:'sfu'});window.userList.push(window.myName);if(window.myName==\"\"){callObject.leave();}if(window.myRole==\"Admin\"){window.sessionState.isKnown=true;}else{window.sessionState.isKnown=false;window.stateRequest=setInterval(function(){getState();},2500);}break;case'left-meeting':callObject.destroy().then(function(){setRoomUrl(null);setCallObject(null);setAppState(STATE_IDLE);window.initialize();});break;case'error':setAppState(STATE_ERROR);break;default:break;}}// Use initial state\nhandleNewMeetingState();// Listen for changes in state\nfor(var _i=0,_events=events;_i<_events.length;_i++){var event=_events[_i];callObject.on(event,handleNewMeetingState);}// Stop listening for changes in state\nreturn function cleanup(){var _iterator=_createForOfIteratorHelper(events),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _event=_step.value;callObject.off(_event,handleNewMeetingState);}}catch(err){_iterator.e(err);}finally{_iterator.f();}};},[callObject]);/**\n   * Listen for app messages from other call participants.\n   */useEffect(function(){if(!callObject){return;}function handleAppMessage(e){if(e){logDailyEvent(e);console.log(\"received app message from \".concat(e.fromId,\": \"),e.data);var participants=callObject.participants();//handle sessionState updates\nif(e.data.constructor===Object&&e.data.type==\"sessionState\"){var setSubs=function setSubs(){setSubscriptions(callObject);};//temporarily commented out\n// if (e.data.isKnown==false)   //probably redundant. only use received sessionState if isKnown = true\n//     {return;}\n// else if (e.data.isKnown==true && typeof(stateRequest)!='undefined') {   //if state is known, stop asking for state\n//     clearInterval(stateRequest);\n// }\nvar priorSessionState=window.sessionState;window.sessionState=e.data;var needToSetSubs=false;// change my role if it has been updated in sessionState\nif(window.sessionState.roleOf!=priorSessionState.roleOf){var myNewRole='Attendee';//default, if no role assigned\nfor(var key in window.sessionState.roleOf){if(window.sessionState.roleOf[key]==window.myName){myNewRole=key;}}if(myNewRole!=window.myRole){window.myRole=myNewRole;if(window.myRole.includes('1')){window.myNumber=1;}else if(window.myRole.includes('2')){window.myNumber=2;}}if(window.sessionState.isActive){activateSession();//rebuild UI for the newly assigned role, mid-session\n}needToSetSubs=true;}//create or delete rooms according to assignments of Thirds\n// if (window.sessionState.roleOf.Room3A!='') {\n//     !$(\"#view-mode option[value=Room3\").length>0 && $(\"#view-mode\").append(\"<option value='Room3'>Room3</option>\");\n//   } else {\n//     $(\"#view-mode option[value=Room3\").remove();\n//   }\n// if (window.sessionState.roleOf.Room4A!='') {\n//     !$(\"#view-mode option[value=Room4\").length>0 && $(\"#view-mode\").append(\"<option value='Room4'>Room4</option>\");\n//   } else {\n//     $(\"#view-mode option[value=Room4\").remove();\n//   }\n// if (window.sessionState.roleOf.Room5A!='') {\n//     !$(\"#view-mode option[value=Room5\").length>0 && $(\"#view-mode\").append(\"<option value='Room5'>Room5</option>\");\n//   } else {\n//     $(\"#view-mode option[value=Room5\").remove();\n//   }\n//determine if need to reset subs\nif(priorSessionState.isActive!==window.sessionState.isActive||priorSessionState.AdminVisible!==window.sessionState.AdminVisible){needToSetSubs=true;}//now, reset subscriptions if necessary\nif(needToSetSubs){if(!priorSessionState.isActive&&window.sessionState.isActive&&window.myRole=='Attendee'||window.myRole=='Admin'){setSubscriptions(callObject,'Room1');}else{setSubs();}}//when session starts\nif(priorSessionState.isActive==false&&window.sessionState.isActive==true){activateSession();if(window.myRole=='Attendee'||window.myRole=='Admin'){}}//when session is paused\nelse if(priorSessionState.isActive==true&&window.sessionState.isActive==false){pauseSession();window.setViewMode(null);}}else if(e.data.constructor===Object&&e.data.type==\"instructions\"&&e.data.recipient==callObject.participants().local.session_id){audioPlayer(e.data.target,e.data.action);}else if(e.data==\"State please?\"){if(window.amAdmin){sendState(window.sessionState,callObject);}}}//not used in this module, since there's no timer\n// if none of the above, just overlay the message\n// else if (e.data.constructor !== Object) {    \n//     overlayMessage(e.data,10000);\n// }\nfunction activateSession(){return _activateSession.apply(this,arguments);}function _activateSession(){_activateSession=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=window.myRole;_context.next=_context.t0==='Attendee'?3:_context.t0==='Participant1'?6:_context.t0==='Participant2'?6:_context.t0==='Actor1'?7:_context.t0==='Actor2'?7:_context.t0==='Room3A'?7:_context.t0==='Room3B'?7:_context.t0==='Room4A'?7:_context.t0==='Room4B'?7:_context.t0==='Room5A'?7:_context.t0==='Room5B'?7:8;break;case 3:// $(\"#cam-instructions\").fadeOut(500);\n// $(\"#cam-image\").fadeOut(500);\n// $(\"#mic-instructions\").fadeOut(500);\n// $(\"#mic-image\").fadeOut(500);\n// $('#show-qr-code').fadeOut(500);\n// $('#get-prompt').fadeOut(500);\n// document.getElementById('my-view').style.visibility='visible';\n// $('#my-view').fadeIn(500);\nwindow.camWasOn=callObject.localVideo();if(window.camWasOn){// toggleCam()\n}// $('#view-mode').val('Room1').trigger(\"change\");\n// document.getElementById(\"overlay\").className = \"superimposed-text-attendees\";\n// document.getElementById(\"overlay-text\").className = \"overlay-text-attendees\";\nreturn _context.abrupt(\"break\",9);case 6:return _context.abrupt(\"break\",9);case 7:return _context.abrupt(\"break\",9);case 8:return _context.abrupt(\"break\",9);case 9:case\"end\":return _context.stop();}}},_callee);}));return _activateSession.apply(this,arguments);}function pauseSession(){return _pauseSession.apply(this,arguments);}function _pauseSession(){_pauseSession=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:case\"end\":return _context2.stop();}}},_callee2);}));return _pauseSession.apply(this,arguments);}}//end handleAppMessage\ncallObject.on('app-message',handleAppMessage);return function cleanup(){callObject.off('app-message',handleAppMessage);};},[callObject]);/**\n   * Show the call UI if we're either joining, already joined, or are showing\n   * an error.\n   */var showCall=[STATE_JOINING,STATE_JOINED,STATE_ERROR].includes(appState);/**\n   * Only enable the call buttons (camera toggle, leave call, etc.) if we're joined\n   * or if we've errored out.\n   *\n   * !!!\n   * IMPORTANT: calling callObject.destroy() *before* we get the \"joined-meeting\"\n   * can result in unexpected behavior. Disabling the leave call button\n   * until then avoids this scenario.\n   * !!!\n   */var enableCallButtons=[STATE_JOINED,STATE_ERROR].includes(appState);/**\n   * Only enable the start button if we're in an idle state (i.e. not creating,\n   * joining, etc.).\n   *\n   * !!!\n   * IMPORTANT: only one call object is meant to be used at a time. Creating a\n   * new call object with DailyIframe.createCallObject() *before* your previous\n   * callObject.destroy() completely finishes can result in unexpected behavior.\n   * Disabling the start button until then avoids that scenario.\n   * !!!\n   */var enableStartButton=appState===STATE_IDLE;return/*#__PURE__*/ (//  <SessionContext.Provider value={[sessionState,setSessionState]}>\n/* <MyInfoContext.Provider value={[myInfo,setMyInfo]}> */React.createElement(\"div\",{className:\"app\"},showCall?/*#__PURE__*/ // NOTE: for an app this size, it's not obvious that using a Context\n// is the best choice. But for larger apps with deeply-nested components\n// that want to access call object state and bind event listeners to the\n// call object, this can be a helpful pattern.\nReact.createElement(CallObjectContext.Provider,{value:callObject},/*#__PURE__*/React.createElement(Call,{roomUrl:roomUrl}),/*#__PURE__*/React.createElement(Tray,{disabled:!enableCallButtons,onClickLeaveCall:startLeavingCall})):/*#__PURE__*/React.createElement(StartScreen// disabled={!enableStartButton}\n,{onClick:function onClick(){createCall().then(function(url){return startJoiningCall(url);});}}))/* </MyInfoContext.Provider> */ // </SessionContext.Provider>\n);}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test1/src/components/App/App.js"],"names":["React","useEffect","useState","useCallback","Call","StartScreen","api","Tray","CallObjectContext","SessionContext","roomUrlFromPageUrl","pageUrlFromRoomUrl","DailyIframe","logDailyEvent","setSubscriptions","sendState","audioPlayer","STATE_IDLE","STATE_CREATING","STATE_JOINING","STATE_JOINED","STATE_LEAVING","STATE_ERROR","App","appState","setAppState","roomUrl","setRoomUrl","callObject","setCallObject","window","pass","includes","myP","location","href","setViewMode","viewMode","console","log","createCall","createRoom","then","room","url","catch","error","startJoiningCall","newCallObject","createCallObject","subscribeToTracksAutomatically","userName","myName","join","pageUrl","myRole","startLeavingCall","destroy","initialize","leave","indexOf","history","replaceState","getState","sessionState","isKnown","clearInterval","stateRequest","sendAppMessage","events","handleNewMeetingState","event","meetingState","setNetworkTopology","topology","userList","push","setInterval","on","cleanup","off","handleAppMessage","e","fromId","data","participants","constructor","Object","type","setSubs","priorSessionState","needToSetSubs","roleOf","myNewRole","key","myNumber","isActive","activateSession","AdminVisible","pauseSession","recipient","local","session_id","target","action","amAdmin","camWasOn","localVideo","showCall","enableCallButtons","enableStartButton"],"mappings":"yrBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,WAArC,KAAwD,OAAxD,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,GAAP,KAAgB,WAAhB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,yBAA9B,CACA;AACA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CACA,OAASC,kBAAT,CAA6BC,kBAA7B,KAAuD,gBAAvD,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CACA,OAASC,aAAT,KAA8B,gBAA9B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,8BAA7B,CACA,OAASC,SAAT,KAA0B,8BAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CAIA,GAAMC,CAAAA,UAAU,CAAG,YAAnB,CACA,GAAMC,CAAAA,cAAc,CAAG,gBAAvB,CACA,GAAMC,CAAAA,aAAa,CAAG,eAAtB,CACA,GAAMC,CAAAA,YAAY,CAAG,cAArB,CACA,GAAMC,CAAAA,aAAa,CAAG,eAAtB,CACA,GAAMC,CAAAA,WAAW,CAAG,aAApB,CAIA,cAAe,SAASC,CAAAA,GAAT,EAAe,eACIrB,QAAQ,CAACe,UAAD,CADZ,wCACrBO,QADqB,eACXC,WADW,8BAEEvB,QAAQ,CAAC,IAAD,CAFV,yCAErBwB,OAFqB,eAEZC,UAFY,8BAGQzB,QAAQ,CAAC,IAAD,CAHhB,yCAGrB0B,UAHqB,eAGTC,aAHS,eAK5B,GAAI,CAACC,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBF,MAAM,CAACG,GAA5B,CAAL,CAAuC,CACrC;AACAH,MAAM,CAACI,QAAP,CAAgBC,IAAhB,CAAuB,sBAAvB,CACD,CAEDL,MAAM,CAACM,WAAP,CAAqB,SAACC,QAAD,CAAc,CACjCA,QAAQ,EAAIC,OAAO,CAACC,GAAR,CAAa,0BAA4BF,QAAzC,CAAZ,CACAvB,gBAAgB,CAACc,UAAD,CAAYS,QAAZ,CAAhB,CACD,CAHD,CAOA;AACF;AACA,KACE,GAAMG,CAAAA,UAAU,CAAGrC,WAAW,CAAC,UAAM,CACnCsB,WAAW,CAACP,cAAD,CAAX,CACA,MAAOZ,CAAAA,GAAG,CACPmC,UADI,GAEJC,IAFI,CAEC,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAf,EAFD,EAGJC,KAHI,CAGE,SAACC,KAAD,CAAW,CAChBR,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmCO,KAAnC,EACAnB,UAAU,CAAC,IAAD,CAAV,CACAF,WAAW,CAACR,UAAD,CAAX,CACD,CAPI,CAAP,CAQD,CAV6B,CAU3B,EAV2B,CAA9B,CAcA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA1C8B,CA6C9B;AACA;AACA;AACA;AACA;AACA;AACA,EAEE,GAAM8B,CAAAA,gBAAgB,CAAG5C,WAAW,CAAC,SAACyC,GAAD,CAAS,CAC5C,GAAMI,CAAAA,aAAa,CAAGpC,WAAW,CAACqC,gBAAZ,CAA6B,CACjDC,8BAA8B,CAAE,KADiB,CAEjDC,QAAQ,CAAErB,MAAM,CAACsB,MAAW;AAFqB,CAA7B,CAAtB,CAIAzB,UAAU,CAACiB,GAAD,CAAV,CACAf,aAAa,CAACmB,aAAD,CAAb,CACAvB,WAAW,CAACN,aAAD,CAAX,CACA6B,aAAa,CAACK,IAAd,CAAmB,CAAET,GAAG,CAAHA,GAAF,CAAOO,QAAQ,CAACrB,MAAM,CAACsB,MAAvB,CAAnB,EAAsD;AACtDd,OAAO,CAACC,GAAR,CAAY,uBAAyBT,MAAM,CAACsB,MAA5C,EAAsD;AACtD,GAAME,CAAAA,OAAO,CAAG3C,kBAAkB,CAACe,OAAD,CAAlB,CAA4B,KAA5B,CAAkCI,MAAM,CAACsB,MAAzC,CAAgD,KAAhD,CAAsDtB,MAAM,CAACyB,MAA7E,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAvBmC,CAuBjC,EAvBiC,CAApC,CA2BA;AACF;AACA,KACE,GAAMC,CAAAA,gBAAgB,CAAGrD,WAAW,CAAC,UAAM,CACzC,GAAI,CAACyB,UAAL,CAAiB,OACjB;AACA,GAAIJ,QAAQ,GAAKF,WAAjB,CAA8B,CAC5BM,UAAU,CAAC6B,OAAX,GAAqBf,IAArB,CAA0B,UAAM,CAC9Bf,UAAU,CAAC,IAAD,CAAV,CACAE,aAAa,CAAC,IAAD,CAAb,CACAJ,WAAW,CAACR,UAAD,CAAX,CACAa,MAAM,CAAC4B,UAAP,GACD,CALD,EAMD,CAPD,IAOO,CACLjC,WAAW,CAACJ,aAAD,CAAX,CACAO,UAAU,CAAC+B,KAAX,GACA7B,MAAM,CAAC4B,UAAP,GACD,CACF,CAfmC,CAejC,CAAC9B,UAAD,CAAaJ,QAAb,CAfiC,CAApC,CAiBA;AACF;AACA;AACA,KACEvB,SAAS,CAAC,UAAM,CACd,GAAM2C,CAAAA,GAAG,CAAGlC,kBAAkB,EAA9B,CACAkC,GAAG,EAAIG,gBAAgB,CAACH,GAAD,CAAvB,CACD,CAHQ,CAGN,CAACG,gBAAD,CAHM,CAAT,CAKA;AACF;AACA;AACA;AACA;AACA;AACA,KACE9C,SAAS,CAAC,UAAM,CACd,GAAIqD,CAAAA,OAAO,CAAG3C,kBAAkB,CAACe,OAAD,CAAhC,CACAI,MAAM,CAACwB,OAAP,CAAeA,OAAf,CAEA,GAAIxB,MAAM,CAACsB,MAAX,CAAmB,CACjB,GAAIE,OAAO,CAACM,OAAR,CAAgB,GAAhB,EAAuB,CAAC,CAA5B,CAA8B,CAC5BN,OAAO,EAAI,MAAQxB,MAAM,CAACsB,MAA1B,CACD,CAFD,IAEK,CACHE,OAAO,EAAI,MAAQxB,MAAM,CAACsB,MAA1B,CACD,CACF,CACD,GAAItB,MAAM,CAACyB,MAAX,CAAmB,CACjB,GAAID,OAAO,CAACM,OAAR,CAAgB,GAAhB,EAAuB,CAAC,CAA5B,CAA8B,CAC5BN,OAAO,EAAI,MAAQxB,MAAM,CAACyB,MAA1B,CACD,CAFD,IAEK,CACHD,OAAO,EAAI,MAAQxB,MAAM,CAACyB,MAA1B,CACD,CACF,CACD,GAAIzB,MAAM,CAACG,GAAX,CAAgB,CACd,GAAIqB,OAAO,CAACM,OAAR,CAAgB,GAAhB,EAAuB,CAAC,CAA5B,CAA8B,CAC5BN,OAAO,EAAI,MAAQxB,MAAM,CAACG,GAA1B,CACD,CAFD,IAEK,CACHqB,OAAO,EAAI,MAAQxB,MAAM,CAACG,GAA1B,CACD,CACF,CACD,GAAIqB,OAAO,GAAKxB,MAAM,CAACI,QAAP,CAAgBC,IAAhC,CAAsC,OACtCL,MAAM,CAAC+B,OAAP,CAAeC,YAAf,CAA4B,IAA5B,CAAkC,IAAlC,CAAwCR,OAAxC,EACD,CA3BQ,CA2BN,CAAC5B,OAAD,CA3BM,CAAT,CA8BA;AACF;AACA,KACEzB,SAAS,CAAC,UAAM,CACd6B,MAAM,CAACF,UAAP,CAAoBA,UAApB,CACD,CAFQ,CAEN,CAACA,UAAD,CAFM,CAAT,CAEkB;AAGnB,QAASmC,CAAAA,QAAT,EAAqB,CAClB,GAAIjC,MAAM,CAACkC,YAAP,CAAoBC,OAApB,EAA+B,IAAnC,CAAyC,CACrCC,aAAa,CAACpC,MAAM,CAACqC,YAAR,CAAb,CACA,OACH,CACD;AACIvC,UAAU,CAACwC,cAAX,CAA0B,eAA1B,CAA2C,GAA3C,EACA9B,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAEP,CAIC;AACF;AACA;AACA;AACA;AACA;AACA;AACA,KACEtC,SAAS,CAAC,UAAM,CACd,GAAI,CAAC2B,UAAL,CAAiB,OAEjB,GAAMyC,CAAAA,MAAM,CAAG,CAAC,gBAAD,CAAmB,cAAnB,CAAmC,OAAnC,CAAf,CAEA,QAASC,CAAAA,qBAAT,CAA+BC,KAA/B,CAAsC,CACpCA,KAAK,EAAI1D,aAAa,CAAC0D,KAAD,CAAtB,CACA,OAAQ3C,UAAU,CAAC4C,YAAX,EAAR,EACE,IAAK,gBAAL,CACE/C,WAAW,CAACL,YAAD,CAAX,CACAQ,UAAU,CAAC6C,kBAAX,CAA8B,CAAEC,QAAQ,CAAE,KAAZ,CAA9B,EACA5C,MAAM,CAAC6C,QAAP,CAAgBC,IAAhB,CAAqB9C,MAAM,CAACsB,MAA5B,EACA,GAAGtB,MAAM,CAACsB,MAAP,EAAe,EAAlB,CAAqB,CAACxB,UAAU,CAAC+B,KAAX,GAAoB,CAC1C,GAAI7B,MAAM,CAACyB,MAAP,EAAe,OAAnB,CAA4B,CAC1BzB,MAAM,CAACkC,YAAP,CAAoBC,OAApB,CAA4B,IAA5B,CACD,CAFD,IAEO,CACLnC,MAAM,CAACkC,YAAP,CAAoBC,OAApB,CAA8B,KAA9B,CACAnC,MAAM,CAACqC,YAAP,CAAsBU,WAAW,CAAC,UAAI,CAACd,QAAQ,GAAG,CAAjB,CAAkB,IAAlB,CAAjC,CACD,CAED,MACF,IAAK,cAAL,CACEnC,UAAU,CAAC6B,OAAX,GAAqBf,IAArB,CAA0B,UAAM,CAC9Bf,UAAU,CAAC,IAAD,CAAV,CACAE,aAAa,CAAC,IAAD,CAAb,CACAJ,WAAW,CAACR,UAAD,CAAX,CACAa,MAAM,CAAC4B,UAAP,GACD,CALD,EAMA,MACF,IAAK,OAAL,CACEjC,WAAW,CAACH,WAAD,CAAX,CACA,MACF,QACE,MA1BJ,CA4BD,CAED;AACAgD,qBAAqB,GAErB;AACA,qBAAoBD,MAApB,wBAA4B,CAAvB,GAAME,CAAAA,KAAK,YAAX,CACH3C,UAAU,CAACkD,EAAX,CAAcP,KAAd,CAAqBD,qBAArB,EACD,CAED;AACA,MAAO,SAASS,CAAAA,OAAT,EAAmB,0CACJV,MADI,YACxB,+CAA4B,IAAjBE,CAAAA,MAAiB,aAC1B3C,UAAU,CAACoD,GAAX,CAAeT,MAAf,CAAsBD,qBAAtB,EACD,CAHuB,qDAIzB,CAJD,CAKD,CAnDQ,CAmDN,CAAC1C,UAAD,CAnDM,CAAT,CAqDA;AACF;AACA,KACE3B,SAAS,CAAC,UAAM,CACd,GAAI,CAAC2B,UAAL,CAAiB,CACf,OACD,CAED,QAASqD,CAAAA,gBAAT,CAA0BC,CAA1B,CAA6B,CAC3B,GAAIA,CAAJ,CAAO,CACLrE,aAAa,CAACqE,CAAD,CAAb,CACA5C,OAAO,CAACC,GAAR,qCAAyC2C,CAAC,CAACC,MAA3C,OAAuDD,CAAC,CAACE,IAAzD,EAEE,GAAIC,CAAAA,YAAY,CAAGzD,UAAU,CAACyD,YAAX,EAAnB,CAEA;AACA,GAAIH,CAAC,CAACE,IAAF,CAAOE,WAAP,GAAuBC,MAAvB,EAAiCL,CAAC,CAACE,IAAF,CAAOI,IAAP,EAAa,cAAlD,CAAkE,CAEhE,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAAC3E,gBAAgB,CAACc,UAAD,CAAhB,CAA6B,CAApD,CAEA;AACM;AACA;AACA;AACA;AACA;AAEJ,GAAI8D,CAAAA,iBAAiB,CAAG5D,MAAM,CAACkC,YAA/B,CACAlC,MAAM,CAACkC,YAAP,CAAoBkB,CAAC,CAACE,IAAtB,CACA,GAAIO,CAAAA,aAAa,CAAC,KAAlB,CAGI;AACA,GAAI7D,MAAM,CAACkC,YAAP,CAAoB4B,MAApB,EAA4BF,iBAAiB,CAACE,MAAlD,CACE,CACE,GAAIC,CAAAA,SAAS,CAAG,UAAhB,CAA4B;AAC5B,IAAK,GAAMC,CAAAA,GAAX,GAAkBhE,CAAAA,MAAM,CAACkC,YAAP,CAAoB4B,MAAtC,CAA8C,CAC1C,GAAG9D,MAAM,CAACkC,YAAP,CAAoB4B,MAApB,CAA2BE,GAA3B,GAAiChE,MAAM,CAACsB,MAA3C,CAAmD,CAC/CyC,SAAS,CAAGC,GAAZ,CACH,CACJ,CACD,GAAID,SAAS,EAAE/D,MAAM,CAACyB,MAAtB,CAA8B,CAC1BzB,MAAM,CAACyB,MAAP,CAAgBsC,SAAhB,CACE,GAAI/D,MAAM,CAACyB,MAAP,CAAcvB,QAAd,CAAuB,GAAvB,CAAJ,CAAiC,CAC7BF,MAAM,CAACiE,QAAP,CAAgB,CAAhB,CACH,CAFD,IAEO,IAAIjE,MAAM,CAACyB,MAAP,CAAcvB,QAAd,CAAuB,GAAvB,CAAJ,CAAiC,CACpCF,MAAM,CAACiE,QAAP,CAAgB,CAAhB,CACH,CACJ,CACC,GAAGjE,MAAM,CAACkC,YAAP,CAAoBgC,QAAvB,CAAgC,CAC5BC,eAAe,GAAK;AACvB,CACDN,aAAa,CAAC,IAAd,CACL,CAIC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEJ;AACA,GAAID,iBAAiB,CAACM,QAAlB,GAA+BlE,MAAM,CAACkC,YAAP,CAAoBgC,QAAnD,EACAN,iBAAiB,CAACQ,YAAlB,GAAiCpE,MAAM,CAACkC,YAAP,CAAoBkC,YADzD,CAEI,CACIP,aAAa,CAAG,IAAhB,CACH,CAEL;AACA,GAAIA,aAAJ,CAAmB,CACjB,GAAI,CAACD,iBAAiB,CAACM,QAAnB,EAA+BlE,MAAM,CAACkC,YAAP,CAAoBgC,QAAnD,EAA+DlE,MAAM,CAACyB,MAAP,EAAe,UAA9E,EAA4FzB,MAAM,CAACyB,MAAP,EAAe,OAA/G,CAAwH,CACtHzC,gBAAgB,CAACc,UAAD,CAAY,OAAZ,CAAhB,CACD,CAFD,IAGK,CACH6D,OAAO,GACR,CACF,CAED;AACA,GAAIC,iBAAiB,CAACM,QAAlB,EAA8B,KAA9B,EAAuClE,MAAM,CAACkC,YAAP,CAAoBgC,QAApB,EAAgC,IAA3E,CAAiF,CAC7EC,eAAe,GACf,GAAInE,MAAM,CAACyB,MAAP,EAAe,UAAf,EAA6BzB,MAAM,CAACyB,MAAP,EAAe,OAAhD,CAAyD,CACtD,CACN,CACD;AALA,IAMK,IAAImC,iBAAiB,CAACM,QAAlB,EAA8B,IAA9B,EAAsClE,MAAM,CAACkC,YAAP,CAAoBgC,QAApB,EAAgC,KAA1E,CAAiF,CAClFG,YAAY,GACZrE,MAAM,CAACM,WAAP,CAAmB,IAAnB,EACH,CACN,CAxFH,IA0FO,IAAI8C,CAAC,CAACE,IAAF,CAAOE,WAAP,GAAuBC,MAAvB,EAAiCL,CAAC,CAACE,IAAF,CAAOI,IAAP,EAAa,cAA9C,EAAgEN,CAAC,CAACE,IAAF,CAAOgB,SAAP,EAAkBxE,UAAU,CAACyD,YAAX,GAA0BgB,KAA1B,CAAgCC,UAAtH,CAAkI,CACrItF,WAAW,CAACkE,CAAC,CAACE,IAAF,CAAOmB,MAAR,CAAerB,CAAC,CAACE,IAAF,CAAOoB,MAAtB,CAAX,CACD,CAFI,IAKA,IAAItB,CAAC,CAACE,IAAF,EAAQ,eAAZ,CAA6B,CAChC,GAAItD,MAAM,CAAC2E,OAAX,CAAoB,CAClB1F,SAAS,CAACe,MAAM,CAACkC,YAAR,CAAqBpC,UAArB,CAAT,CACD,CACF,CACF,CACD;AAEA;AACA;AACA;AACA;AAlHuB,QAoHRqE,CAAAA,eApHQ,uJAoHvB,+IACUnE,MAAM,CAACyB,MADjB,6BAEW,UAFX,iBAoBW,cApBX,iBAqBW,cArBX,iBAoCW,QApCX,iBAqCW,QArCX,iBAsCW,QAtCX,iBAuCW,QAvCX,iBAwCW,QAxCX,iBAyCW,QAzCX,iBA0CW,QA1CX,iBA2CW,QA3CX,kBAGU;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAzB,MAAM,CAAC4E,QAAP,CAAkB9E,UAAU,CAAC+E,UAAX,EAAlB,CACA,GAAI7E,MAAM,CAAC4E,QAAX,CAAqB,CACjB;AACH,CACD;AACA;AACA;AAjBV,mNApHuB,0DAmLRP,CAAAA,YAnLQ,8IAmLvB,yLAnLuB,+CAiM5B,CAAC;AAEFvE,UAAU,CAACkD,EAAX,CAAc,aAAd,CAA6BG,gBAA7B,EAEA,MAAO,SAASF,CAAAA,OAAT,EAAmB,CACxBnD,UAAU,CAACoD,GAAX,CAAe,aAAf,CAA8BC,gBAA9B,EACD,CAFD,CAGD,CA7MQ,CA6MN,CAACrD,UAAD,CA7MM,CAAT,CA+MA;AACF;AACA;AACA,KACE,GAAMgF,CAAAA,QAAQ,CAAG,CAACzF,aAAD,CAAgBC,YAAhB,CAA8BE,WAA9B,EAA2CU,QAA3C,CACfR,QADe,CAAjB,CAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KACE,GAAMqF,CAAAA,iBAAiB,CAAG,CAACzF,YAAD,CAAeE,WAAf,EAA4BU,QAA5B,CAAqCR,QAArC,CAA1B,CAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KACE,GAAMsF,CAAAA,iBAAiB,CAAGtF,QAAQ,GAAKP,UAAvC,CAEA,oBACE;AAEE,yDAGF,2BAAK,SAAS,CAAC,KAAf,EAEI2F,QAAD,eACC;AACA;AACA;AACA;AACA,oBAAC,iBAAD,CAAmB,QAAnB,EAA4B,KAAK,CAAEhF,UAAnC,eACE,oBAAC,IAAD,EAAM,OAAO,CAAEF,OAAf,EADF,cAEE,oBAAC,IAAD,EACE,QAAQ,CAAE,CAACmF,iBADb,CAEE,gBAAgB,CAAErD,gBAFpB,EAFF,CALD,cAaC,oBAAC,WACC;AADF,EAEE,OAAO,CAAE,kBAAM,CACbhB,UAAU,GAAGE,IAAb,CAAkB,SAACE,GAAD,QAASG,CAAAA,gBAAgB,CAACH,GAAD,CAAzB,EAAlB,EACD,CAJH,EAfJ,CAuBA,+BA7BF,CA8BE;AA9BF,EAiCD","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport Call from '../Call/Call';\nimport StartScreen from '../StartScreen/StartScreen';\nimport api from '../../api';\nimport './App.css';\nimport Tray from '../Tray/Tray';\nimport CallObjectContext from '../../CallObjectContext';\n// import MyInfoContext from '../../MyInfoContext';\nimport SessionContext from '../../SessionContext';\nimport { roomUrlFromPageUrl, pageUrlFromRoomUrl } from '../../urlUtils';\nimport DailyIframe from '@daily-co/daily-js';\nimport { logDailyEvent } from '../../logUtils';\nimport setSubscriptions from '../../hooks/setSubscriptions';\nimport { sendState } from '../AdminPanel/AdminFunctions';\nimport audioPlayer from '../../hooks/AudioPlayer';\n\n\n\nconst STATE_IDLE = 'STATE_IDLE';\nconst STATE_CREATING = 'STATE_CREATING';\nconst STATE_JOINING = 'STATE_JOINING';\nconst STATE_JOINED = 'STATE_JOINED';\nconst STATE_LEAVING = 'STATE_LEAVING';\nconst STATE_ERROR = 'STATE_ERROR';\n\n\n\nexport default function App() {\n  const [appState, setAppState] = useState(STATE_IDLE);\n  const [roomUrl, setRoomUrl] = useState(null);\n  const [callObject, setCallObject] = useState(null);\n\n  if (!window.pass.includes(window.myP)) {\n    //redirect if password is wrong\n    window.location.href = \"http://secondbody.co\"\n  }\n\n  window.setViewMode = (viewMode) => {\n    viewMode && console.log ('Changing view mode to: ' + viewMode);\n    setSubscriptions(callObject,viewMode)\n  }\n\n\n  \n  /**\n   * Creates a new call room.\n   */\n  const createCall = useCallback(() => {\n    setAppState(STATE_CREATING);\n    return api\n      .createRoom()\n      .then((room) => room.url)\n      .catch((error) => {\n        console.log('Error creating room', error);\n        setRoomUrl(null);\n        setAppState(STATE_IDLE);\n      });\n  }, []);\n\n\n\n  /**\n   * Starts joining an existing call.\n   *\n   * NOTE: In this demo we show how to completely clean up a call with destroy(),\n   * which requires creating a new call object before you can join() again.\n   * This isn't strictly necessary, but is good practice when you know you'll\n   * be done with the call object for a while and you're no longer listening to its\n   * events.\n   */\n\n\n/*   \nARLO NOTE:\n      Below is where the trouble is. myInfo.name is set via a child component, <StartScreen>, \n      and it successfully changes myInfo.name (I've confirmed since it's pinned to the Window).\n      The below works... the first time. But then callObject.participants().local.user_name gets \"stuck\", \n      so if you exit and leave, or even refresh the page, it never changes. Weird behavior\n*/\n\n  const startJoiningCall = useCallback((url) => {\n    const newCallObject = DailyIframe.createCallObject({ \n      subscribeToTracksAutomatically: false, \n      userName: window.myName,    //one way I've tred to do itâ€”-is this correct?\n    });\n    setRoomUrl(url);\n    setCallObject(newCallObject);\n    setAppState(STATE_JOINING);\n    newCallObject.join({ url, userName:window.myName });  //another way I've tried to do it--is this correct?\n    console.log('joining the call as ' + window.myName);  //this sometimes displays myInfo.name, sometimes not\n    const pageUrl = pageUrlFromRoomUrl(roomUrl)+'&N='+window.myName+'&R='+window.myRole;\n    // let connector = '?';\n    // if (pageUrl.includes('?roomUrl=')) {let connector = '&'};\n    // if (window.myName) {\n    //   if (pageUrl === window.location.href) return;\n    //   window.history.replaceState(null, null, pageUrl + connector + \"R=\" + window.myRole + \"&N=\" + window.myName);\n    // } else if (window.myRole) {\n    //   if (pageUrl === window.location.href) return;\n    //   window.history.replaceState(null, null, pageUrl + connector + \"R=\" + window.myRole);\n    // } else {\n    //   if (pageUrl === window.location.href) return;\n    //   window.history.replaceState(null, null, pageUrl);\n    // }\n  }, []); \n\n\n\n  /**\n   * Starts leaving the current call.\n   */\n  const startLeavingCall = useCallback(() => {\n    if (!callObject) return;\n    // If we're in the error state, we've already \"left\", so just clean up\n    if (appState === STATE_ERROR) {\n      callObject.destroy().then(() => {\n        setRoomUrl(null);\n        setCallObject(null);\n        setAppState(STATE_IDLE);\n        window.initialize();\n      });\n    } else {\n      setAppState(STATE_LEAVING);\n      callObject.leave();\n      window.initialize();    \n    }\n  }, [callObject, appState]);\n\n  /**\n   * If a room's already specified in the page's URL when the component mounts,\n   * join the room.\n   */\n  useEffect(() => {\n    const url = roomUrlFromPageUrl();\n    url && startJoiningCall(url);\n  }, [startJoiningCall]);\n\n  /**\n   * Update the page's URL to reflect the active call when roomUrl changes.\n   *\n   * This demo uses replaceState rather than pushState in order to avoid a bit\n   * of state-management complexity. See the comments around enableCallButtons\n   * and enableStartButton for more information.\n   */\n  useEffect(() => {\n    let pageUrl = pageUrlFromRoomUrl(roomUrl);\n    window.pageUrl=pageUrl;\n    \n    if (window.myName) {\n      if (pageUrl.indexOf('?') > -1){\n        pageUrl += '&N=' + window.myName;\n      }else{\n        pageUrl += '?N=' + window.myName;\n      }\n    }\n    if (window.myRole) {\n      if (pageUrl.indexOf('?') > -1){\n        pageUrl += '&R=' + window.myRole;\n      }else{\n        pageUrl += '?R=' + window.myRole;\n      }\n    }\n    if (window.myP) {\n      if (pageUrl.indexOf('?') > -1){\n        pageUrl += '&P=' + window.myP;\n      }else{\n        pageUrl += '?P=' + window.myP;\n      }\n    }\n    if (pageUrl === window.location.href) return;\n    window.history.replaceState(null, null, pageUrl);\n  }, [roomUrl]);\n\n\n  /**\n   * Uncomment to attach call object to window for debugging purposes.\n   */\n  useEffect(() => {\n    window.callObject = callObject;\n  }, [callObject]); // Only re-run the effect if callObject changes\n\n  \n function getState () {\n    if (window.sessionState.isKnown == true) {\n        clearInterval(window.stateRequest);            \n        return;\n    }\n    // if (window.adminPresent) {\n        callObject.sendAppMessage(\"State please?\", '*'); \n        console.log('Requesting meeting state...');\n    \n}\n\n \n\n  /**\n   * Update app state based on reported meeting state changes.\n   *\n   * NOTE: Here we're showing how to completely clean up a call with destroy().\n   * This isn't strictly necessary between join()s, but is good practice when\n   * you know you'll be done with the call object for a while and you're no\n   * longer listening to its events.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    const events = ['joined-meeting', 'left-meeting', 'error'];\n\n    function handleNewMeetingState(event) {\n      event && logDailyEvent(event);\n      switch (callObject.meetingState()) {\n        case 'joined-meeting':\n          setAppState(STATE_JOINED);\n          callObject.setNetworkTopology({ topology: 'sfu' });\n          window.userList.push(window.myName);\n          if(window.myName==\"\"){callObject.leave();}\n          if (window.myRole==\"Admin\") {\n            window.sessionState.isKnown=true;\n          } else {\n            window.sessionState.isKnown = false;\n            window.stateRequest = setInterval(()=>{getState()},2500);\n          }\n\n          break;\n        case 'left-meeting':\n          callObject.destroy().then(() => {\n            setRoomUrl(null);\n            setCallObject(null);\n            setAppState(STATE_IDLE);\n            window.initialize();\n          });\n          break;\n        case 'error':\n          setAppState(STATE_ERROR);\n          break;\n        default:\n          break;\n      }\n    }\n\n    // Use initial state\n    handleNewMeetingState();\n\n    // Listen for changes in state\n    for (const event of events) {\n      callObject.on(event, handleNewMeetingState);\n    }\n\n    // Stop listening for changes in state\n    return function cleanup() {\n      for (const event of events) {\n        callObject.off(event, handleNewMeetingState);\n      }\n    };\n  }, [callObject]);\n\n  /**\n   * Listen for app messages from other call participants.\n   */\n  useEffect(() => {\n    if (!callObject) {\n      return;\n    }\n\n    function handleAppMessage(e) {\n      if (e) {\n        logDailyEvent(e);\n        console.log(`received app message from ${e.fromId}: `, e.data);\n\n          let participants = callObject.participants();\n      \n          //handle sessionState updates\n          if (e.data.constructor === Object && e.data.type==\"sessionState\") {\n\n            const setSubs = () => {setSubscriptions(callObject)}\n                  \n            //temporarily commented out\n                  // if (e.data.isKnown==false)   //probably redundant. only use received sessionState if isKnown = true\n                  //     {return;}\n                  // else if (e.data.isKnown==true && typeof(stateRequest)!='undefined') {   //if state is known, stop asking for state\n                  //     clearInterval(stateRequest);\n                  // }\n      \n              let priorSessionState = window.sessionState;\n              window.sessionState=e.data;\n              let needToSetSubs=false;\n                \n      \n                  // change my role if it has been updated in sessionState\n                  if (window.sessionState.roleOf!=priorSessionState.roleOf) \n                    {\n                      let myNewRole = 'Attendee'; //default, if no role assigned\n                      for (const key in window.sessionState.roleOf) {\n                          if(window.sessionState.roleOf[key]==window.myName) {\n                              myNewRole = key;\n                          }\n                      }\n                      if (myNewRole!=window.myRole) {\n                          window.myRole = myNewRole;\n                            if (window.myRole.includes('1')) {\n                                window.myNumber=1;\n                            } else if (window.myRole.includes('2')) {\n                                window.myNumber=2;\n                            }\n                        }\n                          if(window.sessionState.isActive){\n                              activateSession();  //rebuild UI for the newly assigned role, mid-session\n                          } \n                          needToSetSubs=true;\n                    }\n\n\n      \n                      //create or delete rooms according to assignments of Thirds\n                      // if (window.sessionState.roleOf.Room3A!='') {\n                      //     !$(\"#view-mode option[value=Room3\").length>0 && $(\"#view-mode\").append(\"<option value='Room3'>Room3</option>\");\n                      //   } else {\n                      //     $(\"#view-mode option[value=Room3\").remove();\n                      //   }\n      \n                      // if (window.sessionState.roleOf.Room4A!='') {\n                      //     !$(\"#view-mode option[value=Room4\").length>0 && $(\"#view-mode\").append(\"<option value='Room4'>Room4</option>\");\n                      //   } else {\n                      //     $(\"#view-mode option[value=Room4\").remove();\n                      //   }\n      \n                      // if (window.sessionState.roleOf.Room5A!='') {\n                      //     !$(\"#view-mode option[value=Room5\").length>0 && $(\"#view-mode\").append(\"<option value='Room5'>Room5</option>\");\n                      //   } else {\n                      //     $(\"#view-mode option[value=Room5\").remove();\n                      //   }\n                      \n                  //determine if need to reset subs\n                  if (priorSessionState.isActive !== window.sessionState.isActive ||\n                      priorSessionState.AdminVisible!==window.sessionState.AdminVisible ) \n                      {\n                          needToSetSubs = true;\n                      }\n      \n                  //now, reset subscriptions if necessary\n                  if (needToSetSubs) {\n                    if (!priorSessionState.isActive && window.sessionState.isActive && window.myRole=='Attendee' || window.myRole=='Admin') {\n                      setSubscriptions(callObject,'Room1')\n                    }\n                    else {\n                      setSubs();\n                    }\n                  }\n                  \n                  //when session starts\n                  if (priorSessionState.isActive == false && window.sessionState.isActive == true) {\n                      activateSession();\n                      if (window.myRole=='Attendee' || window.myRole=='Admin') {\n                        }\n                  }\n                  //when session is paused\n                  else if (priorSessionState.isActive == true && window.sessionState.isActive == false) {\n                      pauseSession();\n                      window.setViewMode(null);\n                  } \n            }\n\n            else if (e.data.constructor === Object && e.data.type==\"instructions\" && e.data.recipient==callObject.participants().local.session_id) {\n              audioPlayer(e.data.target,e.data.action)\n            }\n\n\n            else if (e.data==\"State please?\") {\n              if (window.amAdmin) {\n                sendState(window.sessionState,callObject);\n              }\n            } \n          }\n          //not used in this module, since there's no timer\n          \n          // if none of the above, just overlay the message\n          // else if (e.data.constructor !== Object) {    \n          //     overlayMessage(e.data,10000);\n          // }\n\n          async function activateSession() {\n            switch (window.myRole) {\n                case 'Attendee':\n                    // $(\"#cam-instructions\").fadeOut(500);\n                    // $(\"#cam-image\").fadeOut(500);\n                    // $(\"#mic-instructions\").fadeOut(500);\n                    // $(\"#mic-image\").fadeOut(500);\n                    // $('#show-qr-code').fadeOut(500);\n                    // $('#get-prompt').fadeOut(500);\n                    // document.getElementById('my-view').style.visibility='visible';\n                    // $('#my-view').fadeIn(500);\n                    window.camWasOn = callObject.localVideo();\n                    if (window.camWasOn) {\n                        // toggleCam()\n                    }\n                    // $('#view-mode').val('Room1').trigger(\"change\");\n                    // document.getElementById(\"overlay\").className = \"superimposed-text-attendees\";\n                    // document.getElementById(\"overlay-text\").className = \"overlay-text-attendees\";\n                    break;\n        \n                case 'Participant1':\n                case 'Participant2':\n                    // $(\"#cam-instructions\").fadeIn(500);\n                    // $(\"#cam-image\").fadeIn(500);\n                    // $(\"#mic-instructions\").fadeIn(500);\n                    // $(\"#mic-image\").fadeIn(500);\n                    // $('#show-qr-code').fadeOut(500);\n                    // $('#get-prompt').fadeIn(500);\n                    // $('#my-view').fadeOut(500);\n                    // document.getElementById('my-view').style.visibility='hidden';\n                    // document.getElementById(\"overlay\").className = \"superimposed-text\";\n                    // document.getElementById(\"overlay-text\").className = \"overlay-text\";\n                    // displayName();\n                    // closeChat();\n                    break;\n        \n                case 'Actor1':\n                case 'Actor2':\n                case 'Room3A':\n                case 'Room3B':\n                case 'Room4A':\n                case 'Room4B':\n                case 'Room5A':\n                case 'Room5B':\n                    // $(\"#cam-instructions\").fadeIn(500);\n                    // $(\"#cam-image\").fadeIn(500);\n                    // $(\"#mic-instructions\").fadeIn(500);\n                    // $(\"#mic-image\").fadeIn(500);\n                    // $('#show-qr-code').fadeIn(500);\n                    // $('#get-prompt').fadeOut(500);\n                    // $('#my-view').fadeOut(500);\n                    // document.getElementById('my-view').style.visibility='hidden';\n                    // document.getElementById(\"overlay\").className = \"superimposed-text\";\n                    // document.getElementById(\"overlay-text\").className = \"overlay-text\";\n                    // displayName();\n                    // closeChat();\n                    break;\n                \n                default:\n                    break;\n            }\n        }\n          \n          async function pauseSession() {\n            // $(\"#cam-instructions\").fadeIn(500);\n            // $(\"#cam-image\").fadeIn(500);\n            // $(\"#mic-instructions\").fadeIn(500);\n            // $(\"#mic-image\").fadeIn(500);\n            // $('#show-qr-code').fadeIn(500);\n            // $('#get-prompt').fadeOut(500);\n            // document.getElementById('get-prompt').style.visibility='hidden';\n            // $('#my-view').fadeOut(500);\n            // if (window.camWasOn && !callObject.localVideo()) {toggleCam()}; // turn back on cam if it was noted as on before session\n          }\n\n\n      \n    } //end handleAppMessage\n\n    callObject.on('app-message', handleAppMessage);\n\n    return function cleanup() {\n      callObject.off('app-message', handleAppMessage);\n    };\n  }, [callObject]);\n\n  /**\n   * Show the call UI if we're either joining, already joined, or are showing\n   * an error.\n   */\n  const showCall = [STATE_JOINING, STATE_JOINED, STATE_ERROR].includes(\n    appState\n  );\n\n  /**\n   * Only enable the call buttons (camera toggle, leave call, etc.) if we're joined\n   * or if we've errored out.\n   *\n   * !!!\n   * IMPORTANT: calling callObject.destroy() *before* we get the \"joined-meeting\"\n   * can result in unexpected behavior. Disabling the leave call button\n   * until then avoids this scenario.\n   * !!!\n   */\n  const enableCallButtons = [STATE_JOINED, STATE_ERROR].includes(appState);\n\n  /**\n   * Only enable the start button if we're in an idle state (i.e. not creating,\n   * joining, etc.).\n   *\n   * !!!\n   * IMPORTANT: only one call object is meant to be used at a time. Creating a\n   * new call object with DailyIframe.createCallObject() *before* your previous\n   * callObject.destroy() completely finishes can result in unexpected behavior.\n   * Disabling the start button until then avoids that scenario.\n   * !!!\n   */\n  const enableStartButton = appState === STATE_IDLE;\n\n  return (\n    //  <SessionContext.Provider value={[sessionState,setSessionState]}>\n\n      /* <MyInfoContext.Provider value={[myInfo,setMyInfo]}> */\n\n\n    <div className=\"app\">\n    \n      {(showCall) ? (\n        // NOTE: for an app this size, it's not obvious that using a Context\n        // is the best choice. But for larger apps with deeply-nested components\n        // that want to access call object state and bind event listeners to the\n        // call object, this can be a helpful pattern.\n        <CallObjectContext.Provider value={callObject}>\n          <Call roomUrl={roomUrl} />\n          <Tray\n            disabled={!enableCallButtons}\n            onClickLeaveCall={startLeavingCall}\n          />\n        </CallObjectContext.Provider>\n      ) : (\n        <StartScreen\n          // disabled={!enableStartButton}\n          onClick={() => {\n            createCall().then((url) => startJoiningCall(url));\n          }}\n        />\n      )}\n    </div>\n    /* </MyInfoContext.Provider> */\n    // </SessionContext.Provider>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}