{"ast":null,"code":"import _slicedToArray from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/arlosb/Documents/GitHub/new react app/test4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/**\n * Call state is comprised of:\n * - \"Call items\" (inputs to the call, i.e. participants or shared screens)\n * - UI state that depends on call items (for now, just whether to show \"click allow\" message)\n *\n * Call items are keyed by id:\n * - \"local\" for the current participant\n * - A session id for each remote participant\n * - \"<id>-screen\" for each shared screen\n */var initialCallState={callItems:{local:{videoTrackState:null,audioTrackState:null}},clickAllowTimeoutFired:false,camOrMicError:null,fatalError:null};// --- Actions ---\n/**\n * CLICK_ALLOW_TIMEOUT action structure:\n * - type: string\n */var CLICK_ALLOW_TIMEOUT='CLICK_ALLOW_TIMEOUT';/**\n * PARTICIPANTS_CHANGE action structure:\n * - type: string\n * - participants: Object (from Daily callObject.participants())\n */var PARTICIPANTS_CHANGE='PARTICIPANTS_CHANGE';/**\n * CAM_OR_MIC_ERROR action structure:\n * - type: string\n * - message: string\n */var CAM_OR_MIC_ERROR='CAM_OR_MIC_ERROR';/**\n * CAM_OR_MIC_ERROR action structure:\n * - type: string\n * - message: string\n */var FATAL_ERROR='FATAL_ERROR';// --- Reducer and helpers --\nfunction callReducer(callState,action){switch(action.type){case CLICK_ALLOW_TIMEOUT:return _objectSpread(_objectSpread({},callState),{},{clickAllowTimeoutFired:true});case PARTICIPANTS_CHANGE:var callItems=getCallItems(action.participants);return _objectSpread(_objectSpread({},callState),{},{callItems:callItems});case CAM_OR_MIC_ERROR:return _objectSpread(_objectSpread({},callState),{},{camOrMicError:action.message});case FATAL_ERROR:return _objectSpread(_objectSpread({},callState),{},{fatalError:action.message});default:throw new Error();}}function getLocalCallItem(callItems){return callItems['local'];}function getCallItems(participants){var callItems=_objectSpread({},initialCallState.callItems);// Ensure we *always* have a local participant\nfor(var _i=0,_Object$entries=Object.entries(participants);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),id=_Object$entries$_i[0],participant=_Object$entries$_i[1];callItems[id]={videoTrackState:participant.tracks.video,audioTrackState:participant.tracks.audio};if(shouldIncludeScreenCallItem(participant)){callItems[id+'-screen']={videoTrackState:participant.tracks.screenVideo,audioTrackState:participant.tracks.screenAudio};}}return callItems;}function shouldIncludeScreenCallItem(participant){var trackStatesForInclusion=['loading','playable','interrupted'];return trackStatesForInclusion.includes(participant.tracks.screenVideo.state)||trackStatesForInclusion.includes(participant.tracks.screenAudio.state);}// --- Derived data ---\n// True if id corresponds to local participant (*not* their screen share)\nfunction isLocal(id){return id==='local';}function isScreenShare(id){return id.endsWith('-screen');}function containsScreenShare(callItems){return Object.keys(callItems).some(function(id){return isScreenShare(id);});}function getMessage(callState){function shouldShowClickAllow(){var localCallItem=getLocalCallItem(callState.callItems);var hasLoaded=localCallItem&&!localCallItem.isLoading;return!hasLoaded&&callState.clickAllowTimeoutFired;}var header=null;var detail=null;var isError=false;if(callState.fatalError){header=\"Fatal error: \".concat(callState.fatalError);isError=true;}else if(callState.camOrMicError){// header = `Camera or mic access error: ${callState.camOrMicError}`;\nheader=\"Error: This page can't access your camera or mic.\";detail=\"To troubleshoot in Chrome: To the right in your address bar, click the picture of the camera and select 'Always allow.' Hit enter and then refresh this page.\";// 'See https://help.daily.co/en/articles/2528184-unblock-camera-mic-access-on-a-computer to troubleshoot.';\nisError=true;}else if(shouldShowClickAllow()){header='Click \"Allow\" to enable camera and mic access';}else if(Object.keys(callState.callItems).length===1){header=\"You're here! ðŸ‘‹ \";detail=\"Waiting for everyone else...\";// if(window.myName) {\n//   detail = window.location.href.substring(0, window.location.href.indexOf(window.myName)-3);\n// } else {detail = window.location.href}\n}return header||detail?{header:header,detail:detail,isError:isError}:null;}export{initialCallState,CLICK_ALLOW_TIMEOUT,PARTICIPANTS_CHANGE,CAM_OR_MIC_ERROR,FATAL_ERROR,callReducer,isLocal,isScreenShare,containsScreenShare,getMessage};","map":null,"metadata":{},"sourceType":"module"}