{"version":3,"sources":["components/Tile/Tile.js","CallObjectContext.js","components/CallMessage/CallMessage.js","components/Call/callState.js","logUtils.js","hooks/setSubscriptions.js","components/Call/Call.js","components/InputSelector/InputSelector.js","components/StartScreen/StartScreen.js","api.js","components/Icon/Icon.js","components/TrayButton/TrayButton.js","components/Chat/Chat.js","NameContext.js","hooks/AudioPlayer.js","components/AdminPanel/AdminPanel.js","components/Tray/Tray.js","SessionContext.js","urlUtils.js","components/App/App.js","components/AdminPanel/AdminFunctions.js","components/BrowserUnsupported/BrowserUnsupported.js","index.js"],"names":["getTrackUnavailableMessage","kind","trackState","state","blocked","byPermissions","byDeviceMissing","off","byUser","byBandwidth","Tile","props","videoEl","useRef","audioEl","forceUpdate","useState","setValue","value","useForceUpdate","window","updateTile","videoTrack","useMemo","videoTrackState","isLocalPerson","subscribed","track","audioTrack","audioTrackState","isAudioOnly","isFiltered","isScreenShare","videoUnavailableMessage","audioUnavailableMessage","useEffect","current","srcObject","MediaStream","console","log","stream","mutedAudio","Audio","muted","paused","play","audioCtx","AudioContext","webkitAudioContext","audioSourceNode","createMediaStreamSource","destination","createMediaStreamDestination","gainNode","createGain","panNode","createStereoPanner","gain","pan","connect","sessionState","className","classNames","isLarge","getClassNames","onClick","style","display","autoPlay","playsInline","ref","disableCornerMessage","React","createContext","CallMessage","isError","header","detail","initialCallState","callItems","local","clickAllowTimeoutFired","camOrMicError","fatalError","callReducer","callState","action","type","participants","Object","entries","id","participant","tracks","video","audio","shouldIncludeScreenCallItem","screenVideo","screenAudio","getCallItems","message","Error","trackStatesForInclusion","includes","isLocal","endsWith","containsScreenShare","keys","some","logDailyEvent","e","setSubscriptions","callObject","viewMode","myRole","currentSubs","isActive","roleOf","Actor2","push","Participant2","Actor1","Participant1","AdminVisible","filter","str","indexOf","myName","setTracks","then","index","splice","iterator","values","elements","length","updateCall","updateTray","Promise","resolve","ps","forEach","p","thisUserName","user_name","isKnown","updateParticipant","session_id","setSubscribedTracks","Call","useContext","CallObjectContext","useReducer","dispatch","events","handleNewParticipantsState","event","on","thisSessionID","getUserName","setInterval","userList","updateAdminPanel","adminPresent","updateUserList","clearInterval","handleCameraErrorEvent","errorMsg","handleErrorEvent","t","setTimeout","clearTimeout","numberOfSubs","largeTiles","smallTiles","callItem","tile","key","getTiles","smallTales","add","n","i","addFakeParticipant","localCallItem","isLoading","shouldShowClickAllow","getMessage","forwardRef","audioInputSelect","createRef","videoSelect","page","handleClick","target","selectionID","setInputDevicesAsync","audioSource","videoSource","inputs","setInitialInputs","constraints","deviceId","exact","navigator","mediaDevices","getUserMedia","mediaStream","newAudioSource","getAudioTracks","prev","width","height","newVideoSource","getVideoTracks","text","enumerateDevices","deviceInfos","hasChildNodes","audioInputs","deviceInfo","option","document","createElement","label","audioOutputs","micHeading","appendChild","camHeading","catch","err","name","StartScreen","userIDEl","showMicSettings","setShowMicSettings","showCamSettings","setShowCamSettings","begin","userID","setUserID","lobbyVideo","micCaret","micSettings","camCaret","camSettings","initialInputs","hasUserMedia","setHasUserMedia","addEventListener","handleClickOutside","removeEventListener","contains","localAudio","localVideo","position","marginLeft","marginRight","padding","paddingTop","border","backgroundColor","background","opacity","zIndex","borderRadius","margin","color","fontWeight","boxSizing","cursor","location","reload","href","flexDirection","justifyContent","bottom","left","overflowY","onSubmit","preventDefault","autoComplete","fontSize","textAlign","fontFamily","onFocus","onChange","alert","a","url","createRoom","Icon","getFillColor","highlighted","viewBox","xmlns","stroke","strokeWidth","fill","fillRule","transform","d","getPath","TrayButton","disabled","newButtonGroup","Chat","inputValue","setInputValue","chatHistory","setChatHistory","handleAppMessage","fromId","data","sender","notification","onClickDisplay","map","entry","sendAppMessage","htmlFor","placeholder","audioPlayer","trackName","command","src","monologue1","monologue2","monologue3","monologue4","monologue5","monologue6","dialogue1","dialogue1B","dialogue2","dialogue2B","dialogue3","dialogue3B","dialogue4","dialogue4B","dialogue5","dialogue5B","dialogue6","dialogue6B","createMediaElementSource","disconnect","AdminPanel","NameContext","setCameraMuted","setMicMuted","setSharingScreen","setSubs","playButtonText","setPlayButtonText","targetRecording","setTargetRecording","sendState","handleRoleChange","myNewRole","myNumber","isCameraMuted","isMicMuted","isSharingScreen","localParticipant","screen","getStreamStates","top","recipientA","recipientB","audioIsPlaying","instructionsA","recipient","instructionsB","outline","class","user","right","Tray","displayChat","setChatDisplay","highlightedChat","setChatHighlight","setLocalVideo","setLocalAudio","DailyIframe","supportedBrowser","supportsScreenShare","amAdmin","open","host","overflow","visibility","flexGrow","setViewMode","onClickLeaveCall","pageUrlFromRoomUrl","roomUrl","split","encodeURIComponent","STATE_JOINING","STATE_JOINED","STATE_ERROR","App","appState","setAppState","setRoomUrl","setCallObject","pass","myP","createCall","useCallback","api","room","error","startJoiningCall","newCallObject","createCallObject","subscribeToTracksAutomatically","join","userName","startLeavingCall","destroy","initialize","leave","match","search","decodeURIComponent","roomUrlFromPageUrl","pageUrl","history","replaceState","handleNewMeetingState","meetingState","setNetworkTopology","topology","stateRequest","constructor","priorSessionState","needToSetSubs","activateSession","pauseSession","camWasOn","showCall","enableCallButtons","Provider","BrowserUnsupported","ReactDOM","render","supported","getElementById"],"mappings":"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","file":"static/js/main.9fcef54f.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport './Tile.css';\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nfunction getTrackUnavailableMessage(kind, trackState) {\n  if (!trackState) return;\n  switch (trackState.state) {\n    case 'blocked':\n      if (trackState.blocked.byPermissions) {\n        return `${kind} permission denied`;\n      } else if (trackState.blocked.byDeviceMissing) {\n        return `${kind} device missing`;\n      }\n      return `${kind} blocked`;\n    case 'off':\n      if (trackState.off.byUser) {\n        return `${kind} muted`;\n      } else if (trackState.off.byBandwidth) {\n        return `${kind} muted to save bandwidth`;\n      }\n      return `${kind} off`;\n    case 'sendable':\n      return `${kind} not subscribed`;\n    case 'loading':\n      return `${kind} loading...`;\n    case 'interrupted':\n      return `${kind} interrupted`;\n    case 'playable':\n      return null;\n  }\n}\n\n/**\n * Props\n * - videoTrackState: DailyTrackState?\n * - audioTrackState: DailyTrackState?\n * - isLocalPerson: boolean\n * - isAudioOnly: boolean\n * - isLarge: boolean\n * - disableCornerMessage: boolean\n * - onClick: Function\n * -isScreenShare: boolean\n */\nexport default function Tile(props) {\n  const videoEl = useRef(null);\n  const audioEl = useRef(null);\n  const forceUpdate = useForceUpdate();\n\n  window.updateTile = () => {\n    forceUpdate();\n  }\n\n  const videoTrack = useMemo(() => {\n    return props.videoTrackState && props.videoTrackState.state === 'playable' && (props.isLocalPerson || props.videoTrackState.subscribed === true)\n      ? props.videoTrackState.track\n      : null;\n  }, [props.videoTrackState]);\n\n  const audioTrack = useMemo(() => {\n\n    if (!props.audioTrackState || !props.audioTrackState.track || props.audioTrackState.state !== 'playable' || props.audioTrackState.subscribed === false) \n        {return null;}\n    // if(props.disableCornerMessage) {console.log('Is a screen share');}\n    if (props.isAudioOnly) {\n      props.audioTrackState.track.isFiltered=true;\n    } else {props.audioTrackState.track.isFiltered=false;}\n    if (props.isScreenShare) {\n      props.audioTrackState.track.isScreenShare=true;\n    } else {props.audioTrackState.track.isScreenShare=false;}\n    return props.audioTrackState.track\n  }, [props.audioTrackState]);\n\n  const videoUnavailableMessage = useMemo(() => {\n    return getTrackUnavailableMessage('video', props.videoTrackState);\n  }, [props.videoTrackState]);\n\n  const audioUnavailableMessage = useMemo(() => {\n    return getTrackUnavailableMessage('audio', props.audioTrackState);\n  }, [props.audioTrackState]);\n\n  /**\n   * When video track changes, update video srcObject\n   */\n  useEffect(() => {\n    videoEl.current &&\n      (videoEl.current.srcObject = new MediaStream([videoTrack]));\n  }, [videoTrack]);\n\n  /**\n   * When audio track changes, update audio srcObject\n   */\n  useEffect(() => {\n    if(audioEl.current) {\n\n\n     ///////////////TODO START TEMP DELETED PORTION\n\n\n\n      if(audioTrack.isFiltered) {\n        console.log('**FILTERING LIVE TRACK**')\n\n          ///******audiocontext creation section///\n\n          //create audio stream\n          window.stream= new MediaStream([audioTrack]);\n\n          //workaround for bug in Chrome, see: https://bit.ly/3ryn1fW\n                window.mutedAudio = window.mutedAudio || new Audio(); \n                window.mutedAudio.muted = true;\n                if(!window.mutedAudio.srcObject) {window.mutedAudio.srcObject = window.stream;}\n                window.mutedAudio.paused && window.mutedAudio.play(); \n\n          //create Audio Context and destination\n          window.audioCtx = window.audioCtx || new (window.AudioContext || window.webkitAudioContext)();\n         window.audioSourceNode = window.audioCtx.createMediaStreamSource(window.stream);\n          if (typeof(window.destination)=='undefined'){window.destination = window.audioCtx.createMediaStreamDestination();}\n\n          //gain Node\n          if (typeof(window.gainNode)=='undefined') {window.gainNode = window.audioCtx.createGain();}\n          //panner Node\n          if (typeof(window.panNode)=='undefined') {window.panNode = window.audioCtx.createStereoPanner()}\n\n\n          //*****end audiocontext creation section\n\n\n              //adjust nodes\n              window.gainNode.gain.value=1;\n              window.panNode.pan.value=1;      \n              //Pipe source through nodes to destination\n            window.audioSourceNode.connect(window.gainNode).connect(window.panNode).connect(window.destination);\n\n            //Attach to the audio element\n          audioEl.current.srcObject = window.destination.stream;\n        \n      } \n      else if(audioTrack.isScreenShare) {\n\n        //for everyone, just piping the received audio (which was the left channel of the original video) straight through\n        console.log('***GETTING SCREENSHARE AUDIO')\n        ///***With audiocontext:  */\n        // window.audioSourceNode.connect(destination);\n\n\n        ///without Audiocontext:////\n        audioEl.current.srcObject = new MediaStream([audioTrack]);\n\n\n\n      }\n      else {      //For normal live tracks\n        console.log('***NOT FILTERING: LIVE TRACK***')\n\n         //Pipe source *straight* to destination, through audiocontext\n        // window.audioSourceNode.connect(gainNode).connect(destination);\n\n        //without audiocontext\n        audioEl.current.srcObject = new MediaStream([audioTrack]);\n\n      }\n\n      ///END TODO TEMP DELETED PORTION\n\n\n       //when above is deleted:\n      //  audioEl.current.srcObject = new MediaStream([audioTrack]);\n\n          \n\n\n     \n\n  \n\n      // for debugging\n      // window.destination=destination; \n      // window.audioTrack=audioTrack;\n      // window.audioEl = audioEl;\n\n      }\n      \n  }, [audioTrack,window.sessionState]);\n\n  function getVideoComponent() {\n    return videoTrack && <video autoPlay muted playsInline ref={videoEl} />;\n\n    \n  }\n\n  function getAudioComponent() {\n    return (\n      !props.isLocalPerson &&\n      audioTrack && <audio autoPlay playsInline ref={audioEl} > </audio>\n    );\n  }\n\n  function getOverlayComponent() {\n    // Show overlay when video is unavailable. Audio may be unavailable too.\n    return videoTrack && (\n      videoUnavailableMessage && (\n        <p className=\"overlay\">\n          {videoUnavailableMessage}\n          {/* {audioUnavailableMessage && (\n            <>\n              <br />\n              {audioUnavailableMessage}\n            </>\n          )} */}\n        </p>\n      )\n    );\n  }\n\n  function getCornerMessageComponent() {\n    // Show corner message when only audio is unavailable.\n    return (\n      !props.disableCornerMessage &&\n      audioUnavailableMessage &&\n      !videoUnavailableMessage && (\n        <p className=\"corner\">{audioUnavailableMessage}</p>\n      )\n    );\n  }\n\n  function getClassNames() {\n    let classNames = 'tile';\n    classNames += props.isLarge ? ' large' : ' small';\n    props.isLocalPerson && (classNames += ' local');\n    return classNames;\n  }\n\n  return (\n    ///TODO change to block : none\n    <div className={getClassNames()} onClick={props.onClick} style={{display: videoTrack ? \"block\" : \"none\"}}  >  \n      <div className=\"background\"/> \n      {getOverlayComponent()}\n      {getVideoComponent()}\n      {videoTrack && getCornerMessageComponent()}\n      {getAudioComponent()}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default React.createContext();\n","import React from 'react';\nimport './CallMessage.css';\n\n/**\n * Props:\n * - header: string\n * - detail: string\n * - isError: boolean\n */\nexport default function CallMessage(props) {\n  return (\n    <div className={'call-message' + (props.isError ? ' error' : '')}>\n      <p className=\"call-message-header\">{props.header}</p>\n      <p>{props.detail}</p>\n    </div>\n  );\n}\n","/**\n * Call state is comprised of:\n * - \"Call items\" (inputs to the call, i.e. participants or shared screens)\n * - UI state that depends on call items (for now, just whether to show \"click allow\" message)\n *\n * Call items are keyed by id:\n * - \"local\" for the current participant\n * - A session id for each remote participant\n * - \"<id>-screen\" for each shared screen\n */\nconst initialCallState = {\n  callItems: {\n    local: {\n      videoTrackState: null,\n      audioTrackState: null,\n    },\n  },\n  clickAllowTimeoutFired: false,\n  camOrMicError: null,\n  fatalError: null,\n};\n\n// --- Actions ---\n\n/**\n * CLICK_ALLOW_TIMEOUT action structure:\n * - type: string\n */\nconst CLICK_ALLOW_TIMEOUT = 'CLICK_ALLOW_TIMEOUT';\n\n/**\n * PARTICIPANTS_CHANGE action structure:\n * - type: string\n * - participants: Object (from Daily callObject.participants())\n */\nconst PARTICIPANTS_CHANGE = 'PARTICIPANTS_CHANGE';\n\n/**\n * CAM_OR_MIC_ERROR action structure:\n * - type: string\n * - message: string\n */\nconst CAM_OR_MIC_ERROR = 'CAM_OR_MIC_ERROR';\n\n/**\n * CAM_OR_MIC_ERROR action structure:\n * - type: string\n * - message: string\n */\nconst FATAL_ERROR = 'FATAL_ERROR';\n\n// --- Reducer and helpers --\n\nfunction callReducer(callState, action) {\n  switch (action.type) {\n    case CLICK_ALLOW_TIMEOUT:\n      return {\n        ...callState,\n        clickAllowTimeoutFired: true,\n      };\n    case PARTICIPANTS_CHANGE:\n      const callItems = getCallItems(action.participants);\n      return {\n        ...callState,\n        callItems,\n      };\n    case CAM_OR_MIC_ERROR:\n      return { ...callState, camOrMicError: action.message };\n    case FATAL_ERROR:\n      return { ...callState, fatalError: action.message };\n    default:\n      throw new Error();\n  }\n}\n\nfunction getLocalCallItem(callItems) {\n  return callItems['local'];\n}\n\nfunction getCallItems(participants) {\n  let callItems = { ...initialCallState.callItems }; // Ensure we *always* have a local participant\n  for (const [id, participant] of Object.entries(participants)) {\n\n    \n      callItems[id] = {\n        videoTrackState: participant.tracks.video,\n        audioTrackState: participant.tracks.audio,\n      };\n    \n    \n    if (shouldIncludeScreenCallItem(participant)) {\n      callItems[id + '-screen'] = {\n        videoTrackState: participant.tracks.screenVideo,\n        audioTrackState: participant.tracks.screenAudio,\n      };\n    }\n  }\n  return callItems;\n}\n\nfunction shouldIncludeScreenCallItem(participant) {\n  const trackStatesForInclusion = ['loading', 'playable', 'interrupted'];\n  return (\n    trackStatesForInclusion.includes(participant.tracks.screenVideo.state) ||\n    trackStatesForInclusion.includes(participant.tracks.screenAudio.state)\n  );\n}\n\n// --- Derived data ---\n\n// True if id corresponds to local participant (*not* their screen share)\nfunction isLocal(id) {\n  return id === 'local';\n}\n\nfunction isScreenShare(id) {\n  return id.endsWith('-screen');\n}\n\nfunction containsScreenShare(callItems) {\n  return Object.keys(callItems).some((id) => isScreenShare(id));\n}\n\nfunction getMessage(callState) {\n  function shouldShowClickAllow() {\n    const localCallItem = getLocalCallItem(callState.callItems);\n    const hasLoaded = localCallItem && !localCallItem.isLoading;\n    return !hasLoaded && callState.clickAllowTimeoutFired;\n  }\n\n  let header = null;\n  let detail = null;\n  let isError = false;\n  if (callState.fatalError) {\n    header = `Fatal error: ${callState.fatalError}`;\n    isError = true;\n  } else if (callState.camOrMicError) {\n    // header = `Camera or mic access error: ${callState.camOrMicError}`;\n    header = `Error: This page can't access your camera or mic.`;\n    detail =\n      \"To troubleshoot in Chrome: To the right in your address bar, click the picture of the camera and select 'Always allow.' Hit enter and then refresh this page.\"\n      // 'See https://help.daily.co/en/articles/2528184-unblock-camera-mic-access-on-a-computer to troubleshoot.';\n    isError = true;\n  } else if (shouldShowClickAllow()) {\n    header = 'Click \"Allow\" to enable camera and mic access';\n  } else if (Object.keys(callState.callItems).length === 1) {\n    header = \"You're here! 👋 \";\n    detail = \"Waiting for everyone else...\"\n    // if(window.myName) {\n    //   detail = window.location.href.substring(0, window.location.href.indexOf(window.myName)-3);\n    // } else {detail = window.location.href}\n    \n  }\n  return header || detail ? { header, detail, isError } : null;\n}\n\nexport {\n  initialCallState,\n  CLICK_ALLOW_TIMEOUT,\n  PARTICIPANTS_CHANGE,\n  CAM_OR_MIC_ERROR,\n  FATAL_ERROR,\n  callReducer,\n  isLocal,\n  isScreenShare,\n  containsScreenShare,\n  getMessage,\n};\n","export function logDailyEvent(e) {\n  console.log('[daily.co event]', e.action);\n}\n","// import { useEffect } from \"react\";\n// import SessionContext from '../../SessionContext';\n\nexport default function setSubscriptions(callObject,viewMode=null) {\n\n    if (!window.sessionState) {return;}\n\n    console.log('Setting subscriptions...');\n    console.log('****My role is: ' + window.myRole);\n    console.log('viewMode is: ' + viewMode);\n    let subscribedTo=0;\n    window.currentSubs=[];\n    \n    //if session is active, set currentSubs according to my role\n        if (!viewMode && window.sessionState.isActive) {\n            switch (window.myRole) {\n                case 'Participant1':\n                    window.currentSubs=[];\n                    window.sessionState.roleOf.Actor2 && window.currentSubs.push(window.sessionState.roleOf.Actor2);\n                    !window.sessionState.roleOf.Actor2 && window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                    break;\n                case 'Participant2':\n                    window.currentSubs=[];\n                    window.sessionState.roleOf.Actor1 && window.currentSubs.push(window.sessionState.roleOf.Actor1);\n                    !window.sessionState.roleOf.Actor1 && window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                    break;\n                case 'Actor1':\n                    window.currentSubs=[];\n                    window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                    window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1+'_AUDIO');\n                    break;\n                case 'Actor2':\n                    window.currentSubs=[];\n                    window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                    window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2+'_AUDIO');\n                    break;\n                case 'Attendee':\n                    window.currentSubs=[];\n                    break;\n                default:\n                    window.currentSubs=[];\n                    break;\n            }\n            //Add Admin to currentSubs if applicable\n            if (window.sessionState.AdminVisible) {\n            window.currentSubs.push (\"Admin\");\n        }\n\n        window.currentSubs.filter(function (str) {return str.indexOf(window.myName) === -1}) //don't include self\n\n    }\n\n    if(viewMode) {\n\n        switch (viewMode) {\n            case 'Room1':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                window.sessionState.roleOf.Actor2 && window.currentSubs.push(window.sessionState.roleOf.Actor2);\n                !window.sessionState.roleOf.Actor2 && window.sessionState.roleOf.Participant1 && window.sessionState.roleOf.Participant2 && window.sessionState.roleOf.Actor1 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                break;\n            case 'Room2':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                window.sessionState.roleOf.Actor1 && window.currentSubs.push(window.sessionState.roleOf.Actor1);\n                !window.sessionState.roleOf.Actor1 && window.sessionState.roleOf.Participant1 && window.sessionState.roleOf.Participant2 && window.sessionState.roleOf.Actor2 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                break;\n            case 'Participants':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                break;\n            case 'Actors':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Actor1 && window.currentSubs.push(window.sessionState.roleOf.Actor1);\n                window.sessionState.roleOf.Actor2 && window.currentSubs.push(window.sessionState.roleOf.Actor2);\n                break;\n            case 'All':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                window.sessionState.roleOf.Actor1 && window.currentSubs.push(window.sessionState.roleOf.Actor1);\n                window.sessionState.roleOf.Actor2 && window.currentSubs.push(window.sessionState.roleOf.Actor2);\n                break;\n            case 'None':\n                window.currentSubs=[];\n                window.sessionState.roleOf.Participant1 && window.currentSubs.push(window.sessionState.roleOf.Participant1);\n                window.sessionState.roleOf.Participant2 && window.currentSubs.push(window.sessionState.roleOf.Participant2);\n                break;\n            default:\n                window.currentSubs=[];\n                break;\n        }\n\n        window.currentSubs.filter(function (str) {return str.indexOf(window.myName) === -1}) //don't include self\n    }\n\n    \n    function setTracks() {\n\n        return new Promise( (resolve) => {\n\n            //cycle through each participant in meeting\n            let ps = callObject.participants();\n            Object.keys(ps).forEach((p) => {\n\n                let participant = ps[p];\n                let thisUserName = participant.user_name;\n\n                if (p === 'local' || thisUserName==window.myName) {\n                    return;\n                } \n\n    \n\n                //if SESSION STATE NOT KNOWN, don't subscribe to anyone yet\n                if (!window.sessionState.isKnown) {\n                    callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                    return;\n                }\n\n\n\n                console.log(\"This username is: \" +thisUserName);\n                //If NOT ACTIVE (and not setting view mode), subscribe to everyone in the meeting\n                if (!window.sessionState.isActive && !viewMode) {\n\n                    //audio only if currently Seconding\n                    if (window.myRole.includes('Actor')) {\n                        switch (window.myRole) {\n                            case 'Actor1':\n                                    if (thisUserName==window.sessionState.roleOf.Participant1 || thisUserName=='InvisibleScreenShareWidget') {\n                                        console.log('Subscribing to audio only for: ' + thisUserName);\n                                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: true, video: false, screenVideo: true, screenAudio:true}});\n                                    } else {\n                                        console.log('Subscribing to: ' + thisUserName);\n                                        window.currentSubs.push(thisUserName);\n                                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                                        subscribedTo++;\n                                    }\n                                break;\n                            case 'Actor2':\n                                if (thisUserName==window.sessionState.roleOf.Participant2 || thisUserName=='InvisibleScreenShareWidget') {\n                                    console.log('Subscribing to audio only for: ' + thisUserName);\n                                    callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                                    callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: true, video: false, screenVideo: true, screenAudio:true}});\n                                } else {\n                                    console.log('Subscribing to: ' + thisUserName);\n                                    window.currentSubs.push(thisUserName);\n                                    callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                                    subscribedTo++;\n                                }\n                            break;\n                        \n                            default:\n                                break;\n                        }\n                    }\n\n                    // audio and video for everyone else\n                    else {  \n                        // exclude screenshare's in-ear audio stream\n                        if (thisUserName=='InvisibleScreenShareWidget') {\n                            console.log('Not subscribing to: ' + thisUserName);\n                            callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: false, video: false, screenVideo: true, screenAudio: true}});\n\n                        \n                        } else {\n                            console.log('Subscribing to: ' + thisUserName);\n                            window.currentSubs.push(thisUserName);\n                            if (!callObject.participants()[participant.session_id].tracks.video.subscribed){\n                                callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                            }\n                            callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                            subscribedTo++;\n                            }     \n                    }\n\n                    //  else if (thisUserName=='Admin' && window.sessionState.AdminVisible) {\n                    //     console.log('Subscribing to Admin:');\n                    //     callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                    //     subscribedTo++;\n                    //     console.log('Subscribed to session id: ' + participant.session_id);\n                    // } \n\n                } \n\n                //IF ACTIVE (or selecting viewmode), just subscribe to those listed in currentSubs;\n                else if (window.sessionState.isActive || viewMode) {\n                    if(window.currentSubs.includes(thisUserName+'_AUDIO')) {\n                        console.log('Subscribing to audio only for: ' + thisUserName);\n                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : { audio: true, video: false, screenVideo: false}});\n                    }\n                    else if(window.currentSubs.includes(thisUserName)) {\n                        console.log('Subscribing to: ' + thisUserName);\n                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : true});\n                        subscribedTo++;\n                    }\n                    else if (!window.currentSubs.includes(thisUserName)) {\n                        console.log('NOT subscribing to: ' + thisUserName + ', sessionID: ' + participant.session_id);\n                        callObject.updateParticipant(participant.session_id,{ setSubscribedTracks : false});\n                    }\n                }\n            });\n            resolve()\n        })\n    }\n    \n    setTracks().then(()=>{\n        //remove screenshare widget from currentSubs array\n        \n        const index = window.currentSubs.indexOf('InvisibleScreenShareWidget');\n        if (index > -1) {\n          window.currentSubs.splice(index, 1);\n        }\n    //print subscriptions\n\n    window.currentSubs.filter(function (str) {return str.indexOf(window.myName) === -1}) //don't include self\n\n    var iterator = window.currentSubs.values();\n    console.log(\"Currently subscribed to:\");\n    for (let elements of iterator) { \n        console.log(elements); \n    } \n    if (window.currentSubs.length < 1) {\n        console.log (\"No one.\")\n    }\n    window.updateCall();\n    viewMode=null;\n    window.updateTray();\n    window.updateTile();\n\n\n        //if no admin (or admin has left), start asking for state\n        // if (adminPresent==false) {\n        //     window.sessionState.isKnown=false;\n        //     if (typeof(stateRequest)!='undefined') {clearInterval(stateRequest);}\n        //     stateRequest = setInterval(getState,2500);\n        //     console.log('no Admin present');\n        // }\n        // if (subscribedTo==0) {\n        //     window.isPopulated = false;\n        //     document.getElementById('empty-room').style.opacity='1';\n        //     if(!!document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\")){document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\").style.visibility='hidden';}\n        //     if (window.sessionState.isActive==true) {\n        //         document.getElementById('empty-text').innerHTML=\"Hold that thought! 😐 <br><br> We're working to fix a connection problem.\"\n        //     } else if (window.sessionState.isActive==false) {\n        //         document.getElementById('empty-text').innerHTML=\"👋 <br>You're here!<br>Waiting for everyone else...\"\n\n        //     }\n        // } else if (subscribedTo>0) {\n        //     window.isPopulated = true;\n        //     document.getElementById('empty-room').style.opacity='0';\n        //     if (document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\")){\n        //         document.querySelector(\"#root > div > div.daily-videos-wrapper > div.daily-video-div.remote.cam.cam-muted.mic-muted\").style.visibility='visible';\n        //     }\n\n        // }\n\n    })\n\n    \n   \n};\n\n","import React, { useEffect, useContext, useReducer, useCallback, useState } from 'react';\nimport './Call.css';\nimport Tile from '../Tile/Tile';\nimport CallObjectContext from '../../CallObjectContext';\n// import MyInfoContext from '../../MyInfoContext';\n// import SessionContext from '../../SessionContext';\nimport CallMessage from '../CallMessage/CallMessage';\nimport {\n  initialCallState,\n  CLICK_ALLOW_TIMEOUT,\n  PARTICIPANTS_CHANGE,\n  CAM_OR_MIC_ERROR,\n  FATAL_ERROR,\n  callReducer,\n  isLocal,\n  isScreenShare,\n  containsScreenShare,\n  getMessage,\n} from './callState';\nimport { logDailyEvent } from '../../logUtils';\nimport setSubscriptions from '../../hooks/setSubscriptions';\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nexport default function Call() {\n  const callObject = useContext(CallObjectContext);\n  // const [ sessionState, setSessionState ] = useContext(SessionContext);\n  // const [ myInfo, setMyInfo ] = useContext(MyInfoContext);\n  const [callState, dispatch] = useReducer(callReducer, initialCallState);\n  const forceUpdate = useForceUpdate();\n\n\n  window.updateCall = () => {\n    forceUpdate();\n  }\n\n  /**\n   * Start listening for participant changes, when the callObject is set.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    const events = [\n      'participant-joined',\n      'participant-updated',\n      'participant-left',\n    ];\n\n   \n\n    function handleNewParticipantsState(e) {\n      e && logDailyEvent(e);\n      dispatch({\n        type: PARTICIPANTS_CHANGE,\n        participants: callObject.participants(),\n      });\n      if(e && e.action!='participant-updated') {\n        setSubscriptions(callObject);\n        console.log(\"setting subscriptions because: \" + e.action);\n    \n          let thisUserName = e.participant.user_name;\n          let thisSessionID = e.participant.session_id;\n          if (e.action==\"participant-joined\") {\n            window.event=e;\n            const getUserName = setInterval(\n              ()=>{\n                    if (thisUserName) \n                      {\n                        console.log(`*****this user is: ${thisUserName}`);\n                        updateUserList(thisUserName);\n                        clearInterval(getUserName);\n                      }\n                    else {\n                      let participants = callObject.participants();\n                      for (const participant in participants) {\n                        if (participants[participant].session_id == thisSessionID) {\n                          thisUserName = participants[participant].user_name;\n                        }\n                      }\n                    }\n                  },100);\n\n            function updateUserList(thisUserName) {\n              let SessionIDLabel = thisUserName + \"_SessionID\";\n              window[SessionIDLabel] = thisSessionID;\n              if(thisUserName=='SUPERDUPER') {return;}\n              console.log('********Adding user to list: ' + thisUserName);\n              window.userList.push(thisUserName);\n              if(typeof(window.updateAdminPanel)!=='undefined') {window.updateAdminPanel()};\n              if (thisUserName=='Admin') {\n                  window.adminPresent=true;\n              }\n            }\n\n            \n            \n          } else if (e.action==\"participant-left\") {\n            //remove from userList\n            let index = window.userList.indexOf(thisUserName);\n            if (index > -1) {\n            window.userList.splice(index, 1);\n            }\n            if (window.userList.indexOf('Admin')==-1) {\n              window.adminPresent=false;\n            }\n           \n          }\n\n          console.log('Admin present: ' + window.adminPresent);\n          console.log('UserList: ' + window.userList);\n      }\n      \n    }\n\n    // Use initial state\n    handleNewParticipantsState();\n\n    // Listen for changes in state\n    for (const event of events) {\n      callObject.on(event, handleNewParticipantsState);\n    }\n\n    // Stop listening for changes in state\n    return function cleanup() {\n      for (const event of events) {\n        callObject.off(event, handleNewParticipantsState);\n      }\n    };\n  }, [callObject]);\n\n  /**\n   * Start listening for call errors, when the callObject is set.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleCameraErrorEvent(event) {\n      logDailyEvent(event);\n      dispatch({\n        type: CAM_OR_MIC_ERROR,\n        message:\n          (event && event.errorMsg && event.errorMsg.errorMsg) || 'Unknown',\n      });\n    }\n\n    // We're making an assumption here: there is no camera error when callObject\n    // is first assigned.\n\n    callObject.on('camera-error', handleCameraErrorEvent);\n\n    return function cleanup() {\n      callObject.off('camera-error', handleCameraErrorEvent);\n    };\n  }, [callObject]);\n\n  /**\n   * Start listening for fatal errors, when the callObject is set.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleErrorEvent(e) {\n      logDailyEvent(e);\n      dispatch({\n        type: FATAL_ERROR,\n        message: (e && e.errorMsg) || 'Unknown',\n      });\n    }\n\n    // We're making an assumption here: there is no error when callObject is\n    // first assigned.\n\n    callObject.on('error', handleErrorEvent);\n\n    return function cleanup() {\n      callObject.off('error', handleErrorEvent);\n    };\n  }, [callObject]);\n\n  /**\n   * Start a timer to show the \"click allow\" message, when the component mounts.\n   */\n  useEffect(() => {\n    const t = setTimeout(() => {\n      dispatch({ type: CLICK_ALLOW_TIMEOUT });\n    }, 2500);\n\n    return function cleanup() {\n      clearTimeout(t);\n    };\n  }, []);\n\n  const numberOfSubs = window.currentSubs && window.currentSubs.filter(function (str) {return str.indexOf('_AUDIO') === -1}).filter(function (str) {return str.indexOf('_AUDIO') === -1}).filter(function (str) {return str.indexOf(window.myName) === -1}).length //number of subs, not counting audio-only or my name\n\n\n  useEffect(()=>{\nwindow.numberOfSubs =numberOfSubs;\n  },[numberOfSubs])\n\n\n\n \n\n  function getTiles() {\n    let largeTiles = [];\n    let smallTiles = [];\n    Object.entries(callState.callItems).forEach(([id, callItem]) => {\n\n\n      const isAudioOnly = () => {\n        if(!callItem.audioTrackState || !callItem.videoTrackState) {return}\n        return (callItem.audioTrackState.subscribed && !callItem.videoTrackState.subscribed);\n      }\n\n      const isLarge =\n        isScreenShare(id) ||\n        (!isLocal(id) && !containsScreenShare(callState.callItems)) \n        || (isLocal(id) && numberOfSubs && numberOfSubs>1 && !containsScreenShare(callState.callItems))   //videoTrackState()\n\n        \n      const tile = (\n        <Tile\n          key={id}\n          videoTrackState={callItem.videoTrackState}\n          audioTrackState={callItem.audioTrackState}\n          isLocalPerson={isLocal(id)}\n          isAudioOnly={isAudioOnly()}\n          isLarge={isLarge}\n          disableCornerMessage={isScreenShare(id)}\n          isScreenShare={isScreenShare(id)}\n          // onClick={\n          //   isLocal(id)\n          //     ? null\n          //     : () => {\n          //         sendHello(id);\n          //       }\n          // }\n        />\n      );\n      if (isLarge) {\n        largeTiles.push(tile);\n      } else {\n        smallTiles.push(tile);\n      }\n    });\n    \n    return [largeTiles, smallTiles];\n  }\n\n  const [largeTiles, smallTiles] = getTiles();\n\n  \n  /**\n   * DELETE: Attached tiles objects to window for debugging purposes.\n   */\n  useEffect(() => {\n    console.log('re-rendered');\n    // console.log('Userlist: ' + window.userList);\n    window.largeTiles = largeTiles;\n    window.smallTales = smallTiles;\n    window.add = function(n=1) {\n      for(let i=0;i<n;i++) {\n        callObject.addFakeParticipant()\n      }\n    };\n    \n  }); \n\n\n   // attach callState to window for debugging\n   useEffect(() => {\n    window.callState = callState;\n  }, [callState]); \n\n\n  const message = getMessage(callState);\n  return (\n    <div className=\"call\">\n                                      {/* add # of tiles to class name. alternative: {largeTiles.length}*/}\n      <div className={`large-tiles count-${(containsScreenShare(callState.callItems)&&'1')||numberOfSubs && numberOfSubs+1}`}>   \n        {\n          !message\n            ? largeTiles\n            : null /* Avoid showing large tiles to make room for the message */\n        }\n      </div>\n      <div className=\"small-tiles\">{smallTiles}</div>\n      {message && (\n        <CallMessage\n          header={message.header}\n          detail={message.detail}\n          isError={message.isError}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nimport './InputSelector.css';\n\n\nexport default React.forwardRef((props, ref)=> {\nconst callObject = useContext(CallObjectContext);\nconst audioInputSelect = React.createRef();\nconst videoSelect = React.createRef();\nconst type = props.type;\nconst page = props.page;\n\n\nconst handleClick=(e) => {\n    if(!e.target.value) {return;}\n    let selectionID = e.target.value;\n    type == 'audio' && page=='main' && e.target.key.includes('audioinput') && callObject.setInputDevicesAsync({audioSource: selectionID});\n    // type == 'audio' && page=='main' && e.target.key.includes('audiooutput') && callObject.setOutputDevice({selectionID});\n    type == 'video' && page=='main' && callObject.setInputDevicesAsync({videoSource: selectionID});\n    if (type == 'audio' && page=='intro') {\n        const [initialInputs,setInitialInputs] = props.inputs;\n        let constraints = {\n            deviceId: { exact: selectionID }\n        };\n        navigator.mediaDevices.getUserMedia({audio: constraints}).then(\n            (mediaStream)=> {\n            let newAudioSource = mediaStream.getAudioTracks()[0];\n            setInitialInputs((prev)=>[newAudioSource,prev[1]]);\n            });\n    }\n    if (type == 'video' && page=='intro') {\n        const [initialInputs,setInitialInputs] = props.inputs;\n        let constraints = {\n            width: 1280,\n            height: 720,\n            deviceId: { \n                exact: selectionID ,\n            },\n        };\n        navigator.mediaDevices.getUserMedia({video: constraints}).then(\n            (mediaStream)=> {\n            let newVideoSource = mediaStream.getVideoTracks()[0];\n            setInitialInputs((prev)=>[prev[0],newVideoSource])\n            });\n    }   \n    e.target.key.includes('input') && console.log('New input: ' + e.target.text);\n    // e.target.key.includes('output') && console.log('New output: ' + e.target.text);\n}\n\nuseEffect(()=>{ \n    if(navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n        navigator.mediaDevices.enumerateDevices()\n        .then(function(deviceInfos) {\n            \n            if (type=='audio' && audioInputSelect.current) {\n                if (audioInputSelect.current.hasChildNodes()) {return}\n                let audioInputs = [];\n                let audioOutputs = [];\n\n                for (var i = 0; i !== deviceInfos.length; ++i) {\n                    var deviceInfo = deviceInfos[i];\n                    var option = document.createElement('option');\n                    option.className='item';\n                    option.value = deviceInfo.deviceId;\n                if (deviceInfo.kind === 'audioinput') {\n                    option.key = 'audioinput' + audioInputSelect.length + 1;\n                    option.text = deviceInfo.label ||'Microphone ' + (audioInputSelect.length + 1);\n                    audioInputs.push(option); \n                } \n                // else if (deviceInfo.kind === 'audiooutput') {\n                //     option.key = 'audiooutput' + audioInputSelect.length + 1;\n                //     option.text = deviceInfo.label || 'Speaker ' +(audioInputSelect.length + 1);\n                //     audioOutputs.push(option);\n                //     }   \n                }\n                window.audioOutputs=audioOutputs;\n                let micHeading = document.createElement('option');\n                micHeading.label = '-Select Microphone-';\n                micHeading.className='item-heading';\n                let speakerHeading = document.createElement('option');\n                // speakerHeading.label = '-Select Speaker-';\n                // speakerHeading.className='item-heading';\n                audioInputSelect.current.appendChild(micHeading);\n                for (var i=0; i!==audioInputs.length; ++i) {\n                    audioInputSelect.current.appendChild(audioInputs[i]);\n                }\n\n                // audioInputSelect.current.appendChild(speakerHeading);\n                // for (var i=0; i!==audioOutputs.length; ++i) {\n                //     console.log(audioOutputs[i]);\n                //     audioInputSelect.current.appendChild(audioOutputs[i]);\n                // }\n               \n                \n                   \n            }\n            else if (type == 'video' && videoSelect.current) {\n                if (videoSelect.current.hasChildNodes()) {return}\n                let camHeading = document.createElement('option');\n                camHeading.label = '-Select Camera-';\n                camHeading.className='item-heading';\n                videoSelect.current.appendChild(camHeading);\n                for (var i = 0; i !== deviceInfos.length; ++i) {\n                    var deviceInfo = deviceInfos[i];\n                    var option = document.createElement('option');\n                    option.className='item';\n                    option.value = deviceInfo.deviceId;\n                    if (deviceInfo.kind === 'videoinput') {\n                        option.key = 'videooutput' + videoSelect.length + 1;\n                        option.text = deviceInfo.label || 'Camera ' +(videoSelect.length + 1);\n                        videoSelect.current && videoSelect.current.appendChild(option);\n                    }\n                }\n            }\n        })\n        .catch(function(err) {\n          console.log(err.name + \": \" + err.message);\n        });\n       } \n})\n   \n    \n\n\n\n    return (\n        <div className=\"dropdown-selector\" ref={ref}>\n                {type=='audio' &&\n                <ul ref={audioInputSelect} onClick={handleClick}>\n                </ul>\n                }\n                {type=='video' &&\n                <ul ref={videoSelect} onClick={handleClick}>\n                </ul>\n                }\n                \n        </div>\n    );\n\n})\n","import React, { useEffect, useRef, useContext, useState } from 'react';\nimport './StartScreen.css';\nimport InputSelector from '../InputSelector/InputSelector';\n\n\n//   if (parent.myRole=='Actor') {\n//     document.getElementById('instructions').remove();\n//     document.getElementById('actor-instructions').style.visibility='visible';\n//     let qrCode = '../images/Audio' + parent.myNumber + '.png';\n//     document.getElementById('QR-code').src=qrCode;\n//   }\n\n\n/**\n * Props:\n * -\n * -\n */\n export default function StartScreen(props) {\n\n    const userIDEl = useRef(null);\n    const [showMicSettings,setShowMicSettings] = useState(false);\n    const [showCamSettings,setShowCamSettings] = useState(false);\n    const begin = props.onClick;\n    // const [ myInfo, setMyInfo ] = useContext(MyInfoContext);\n    const [ userID, setUserID ] = useState('Your first name');\n    const lobbyVideo = useRef(null);\n    const micCaret = React.createRef();\n    const micSettings = React.createRef();\n    const camCaret = React.createRef();\n    const camSettings = React.createRef();\n    const [initialInputs,setInitialInputs] = useState(null);\n    const [hasUserMedia,setHasUserMedia] = useState(true);\n\n\n    useEffect(()=> {\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n  \n  \n   return function cleanup() {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    })\n\n    const handleClickOutside = (event) => {\n      console.log('handling click');\n      if (micSettings.current &&\n        !micSettings.current.contains(event.target) &&\n        !micCaret.current.contains(event.target)\n      ) {\n        setShowMicSettings(false);\n      } else if (camSettings.current &&\n        !camSettings.current.contains(event.target) &&\n        !camCaret.current.contains(event.target)\n      ) {\n        setShowCamSettings(false);\n      } \n      \n    }\n \n    \n\n    //   if (parent.myRole.includes('Viewer')) {\n//     document.getElementById('welcome-instructions').innerHTML='You are in view-only mode. <br/><br/>Click below to enter. <br/><br/>  <button class=\"new-card\" id=\"enter-button\" onclick=\"setUserID()\">Enter session</button>'\n//   }\n\n// useEffect(()=> {\n//     if(window.myRole==='Admin') {\n//         window.myName='Admin';\n//         begin();\n//     };\n//     },[])\n\n  function setMyName() {\n      console.log('setting user ID as ' + userID);\n    //   if (parent.myRole.includes('Viewer')) {   //enter session immediately if no need to enter name\n    //     begin();\n    //     return;\n    //   }\n      if (userID === '' || userID==='Your first name' || userID.length<=1) {\n        alert('Please enter your name to help your partner identify you.')\n      } else {\n          console.log('***GOT HERE***');\n        window.myName=userID;\n        begin();\n      }\n  }\nuseEffect(()=>{\n  navigator.mediaDevices.getUserMedia({audio:true,video:{width: 1280,height: 720}}).then((mediaStream)=>{\n    if(mediaStream){\n      window.mediaStream = mediaStream;\n      let localAudio = mediaStream.getAudioTracks()[0];\n      let localVideo = mediaStream.getVideoTracks()[0];  \n      setInitialInputs([localAudio,localVideo]);\n      window.localAudio=localAudio;\n      setHasUserMedia(true);\n    } else {\n      setHasUserMedia(false);\n    }\n  }).catch( err => {\n    console.log(\"You got an error:\" + err);\n    setHasUserMedia(false);\n});\n\n}\n\n,[])\n\nuseEffect(()=>{\n  initialInputs && lobbyVideo.current && (lobbyVideo.current.srcObject=new MediaStream(initialInputs));\n  lobbyVideo.current.muted=true;\n  window.initialInputs=initialInputs;\n},[initialInputs]);\n    \n\n        // if(localAudio && localAudio.length > 0)\n        //     {\n        //       newCallObject.join({ url, userName:window.myName, audioSource: localSrc[0]});\n        //     }\n        //     else {}:\n\n  \n  function onFieldChange(value) {\n    setUserID(value);\n    window.userID=userID;\n}\n\n\n    return (\n    <div className='container'>\n\n        <div className='start-screen-background'></div>\n  \n        <div className='instructions'> \n            <div className='fixed-width'>\n          \n                <h2>Welcome to SecondBody.</h2>\n\n               \n\n                <div style={{position:'relative', marginLeft:'180px', marginRight:'180px', padding: '20px', paddingTop:'40px', border: '4px solid whitesmoke', backgroundColor:'white'}}>\n                      <div style={{background:'white',opacity:'1',zIndex:'1000'}}>\n                      \n                      \n                {hasUserMedia ? \n\n                    <video className='lobby-video' autoPlay={true} ref={lobbyVideo}/>\n                    :\n                    <p style={{height:'198px',width:'352px',borderRadius:'20px',background:'black',margin:'auto',color:'white',fontWeight:'bolder', boxSizing:'border-box',padding:'24px',border:'2px yellow solid'}}>\n                    ❌ Your camera / mic is blocked ❌<br/><br/>Please give this site access to your camera and mic, and then <u style={{cursor:'pointer'}} onClick={(()=>{window.location.reload()})}>refresh the page.</u>\n                    <br/><br/>\n                    How?\n                    <br/>\n                    <ul>\n                      <li>\n                          <a target='_blank' href='https://downloads.intercomcdn.com/i/o/193872927/17dc7d06694d2c9bcd47b17a/Web+Meeting+Permissions+Blocked+Modal.jpg?'>\n                          Option 1\n                          </a>\n                      </li>\n                      <li>\n                          <a href={'https://youtu.be/GceAjizU5WU?t=39'}  target='_blank'>Option 2</a>\n                      </li>\n                      </ul>\n                      </p>\n                  }\n                      \n                      \n\n             {/* <img src={Unblock} style={{width:'100px'}} /> */}\n                      \n                      \n                      {lobbyVideo.current && hasUserMedia && (\n                          <div style={{position:'relative',display:'flex',flexDirection:'row',justifyContent:'center',bottom:'40px', width:'250px',height:'0px',margin:'auto'}}>\n                              <div >\n                                <p className=\"selector-button\" onClick={()=>{setShowCamSettings(!showCamSettings)}} ref={camCaret}>Select Camera ^</p>\n                                    {showCamSettings ? \n                                    (<div onClick={()=>setShowCamSettings(false)}style={{position:'relative',bottom:'0px',left:'80px'}}>\n                                      <InputSelector type='video' page='intro' inputs={[initialInputs,setInitialInputs]} ref={camSettings} />\n                                    </div>)\n                                    : \n                                    null}\n                              </div>\n                              <div style={{width:'15px'}}></div>\n\n                              <div>\n                                <p className=\"selector-button\" onClick={()=>{setShowMicSettings(!showMicSettings)}} ref={micCaret}>Select Mic ^</p>\n                                    {showMicSettings ? \n                                      (<div onClick={()=>setShowMicSettings(false)} style={{position:'relative',bottom:'0px',left:'72px',overflowY:'visible'}}>\n                                        <InputSelector type='audio' page='intro' ref={micSettings}  inputs={[initialInputs,setInitialInputs]}/>\n                                      </div>)\n                                    : \n                                    null}\n                              </div>\n                          </div>\n                      )}\n\n                  </div>\n                    \n                 { hasUserMedia && (\n                    <h4 className='signin'>\n            \n                        <form onSubmit={(e)=>e.preventDefault()}>\n                            {/* <label for=\"userID\"></label><br/><br/> */}\n                            <input type=\"text\" autoComplete=\"off\" style={{backgroundColor: 'rgb(230, 240, 249)', fontSize:'15px', width: '200px', height: '30px', textAlign:'center', fontFamily:'poppins'}} ref={userIDEl} value={userID} onFocus={()=> {if (userID==='Your first name') {setUserID('')}}} onChange={e => onFieldChange(e.target.value)} /><br/><br/>\n                            <input className='new-card' style={{width:'150px', color:'#1b8bc4', fontSize: '17px'}} type=\"submit\" type=\"submit\" value='Enter session' onClick={setMyName} />\n                        </form>\n\n                        <br/>\n                    </h4>\n                  )}\n                    \n                </div>\n        \n  \n            </div>\n        </div>\n  \n    \n  \n       \n    </div>\n    );\n  }\n\n              \n                \n\n\n\n\n","const newRoomEndpoint =\n  '`${window.location.origin}/api/rooms`';\n\n/**\n * Create a short-lived room for demo purposes.\n *\n * It uses the redirect proxy as specified in netlify.toml`\n * This will work locally if you following the Netlify specific instructions\n * in README.md\n *\n * See https://docs.daily.co/reference#create-room for more information on how\n * to use the Daily REST API to create rooms and what options are available. \n */\nasync function createRoom() {\n\n  // const exp = Math.round(Date.now() / 1000) + 60 * 30;\n  // const options = {\n  //   properties: {\n  //     exp: exp,\n  //     enable_recording: true,\n  //   },\n  // };\n  // let response = await fetch(newRoomEndpoint, {\n  //   method: \"POST\",\n  //   body: JSON.stringify(options),\n  //   mode: 'cors',\n  // }),\n  //   room = await response.json();\n  // return room;\n\n  // Comment out the above and uncomment the below, using your own URL\n  return { url: \"https://secondbody.daily.co/react-test-room\" };\n}\n\nexport default { createRoom };","import React from 'react';\n\nconst TYPE_MUTE_CAMERA = 'camera';\nconst TYPE_MUTE_MIC = 'mute-mic';\nconst TYPE_SCREEN = 'screen';\nconst TYPE_LEAVE = 'leave';\nconst TYPE_CHAT = 'chat';\n\n/**\n * Props:\n * - type: string\n * - highlighted: boolean\n */\nexport default function Icon(props) {\n  function getFillColor() {\n    return props.highlighted ? '#fb5554' : '#000000';\n  }\n\n  function getPath() {\n    switch (props.type) {\n      case TYPE_MUTE_CAMERA:\n        return (\n          <g\n            id=\"Symbols\"\n            stroke=\"none\"\n            strokeWidth=\"1\"\n            fill=\"none\"\n            fillRule=\"evenodd\"\n          >\n            <g\n              id=\"Assets-for-Export\"\n              transform=\"translate(-24.000000, 0.000000)\"\n              fill={getFillColor()}\n            >\n              <g\n                id=\"Icon-Camera-Off-24px\"\n                transform=\"translate(24.000000, 0.000000)\"\n              >\n                <path\n                  d=\"M13.7573593,6 L4.00585866,6 C2.89706013,6 2,6.8992496 2,8.0085302 L2,15.9914698 C2,16.4835828 2.17760958,16.9352259 2.47229113,17.2850682 L13.7573593,6 Z M16,12.2426407 L16,15.9914698 C16,17.1007504 15.1029399,18 13.9941413,18 L10.2426407,18 L16,12.2426407 Z M16,12.2426407 L16,14.499966 L21.0756492,16.6148096 C21.586154,16.8275189 22,16.5442917 22,16.0045612 L22,7.99539512 C22,7.44565489 21.5875957,7.17183667 21.0756492,7.38514669 L20.7016702,7.54097052 L16,12.2426407 Z M20.4877316,2.09805481 C20.8769027,1.70888376 21.506248,1.70725811 21.8994949,2.10050506 C22.2900192,2.49102936 22.2956069,3.1186067 21.9019452,3.51226838 L3.51226838,21.9019452 C3.12309732,22.2911162 2.49375202,22.2927419 2.10050506,21.8994949 C1.70998077,21.5089706 1.70439313,20.8813933 2.09805481,20.4877316 L20.4877316,2.09805481 Z\"\n                  id=\"Combined-Shape\"\n                ></path>\n              </g>\n            </g>\n          </g>\n        );\n      case TYPE_MUTE_MIC:\n        return (\n          <g\n            id=\"Symbols\"\n            stroke=\"none\"\n            strokeWidth=\"1\"\n            fill=\"none\"\n            fillRule=\"evenodd\"\n          >\n            <g\n              id=\"Assets-for-Export\"\n              transform=\"translate(-120.000000, 0.000000)\"\n              fill={getFillColor()}\n            >\n              <g\n                id=\"Icon-Microphone-Off-24px\"\n                transform=\"translate(120.000000, 0.000000)\"\n              >\n                <path\n                  d=\"M15.8931049,12.3495358 L15.8883757,12.354265 C15.7702192,12.7237203 15.5976472,13.0928313 15.3634551,13.4334743 C14.9080287,14.0959127 14.281481,14.5761112 13.4232304,14.8194102 L11,17.2426407 L11,18.9906311 C11,18.9937578 11.0000137,18.9968808 11.0000409,19 L9.99077797,19 C9.45097518,19 9,19.4477153 9,20 C9,20.5561352 9.44358641,21 9.99077797,21 L14.009222,21 C14.5490248,21 15,20.5522847 15,20 C15,19.4438648 14.5564136,19 14.009222,19 L12.9999626,19 C12.999986,18.9968804 13,18.9937574 13,18.9906311 L13,16.9383953 C14.793746,16.7093537 16.1268712,15.8533183 17.0115375,14.566531 C17.631941,13.6641258 17.9116422,12.769082 17.9922726,12.124039 C18.0567667,11.6080864 17.715976,11.1348845 17.2185349,11.0241058 L17.2162194,11.0264213 C17.1758852,11.0160463 17.1430789,11.0101085 17.12403,11.0077274 C16.5760096,10.9392248 16.076219,11.3279514 16.0077165,11.8759725 C15.9990827,11.9450424 15.9659776,12.1062504 15.8970768,12.3267333 C15.8944966,12.3349898 15.8931939,12.3425837 15.8931049,12.3495358 Z M14.8100942,4.94726512 C14.3837386,3.80970165 13.2864273,3 12,3 C10.3431458,3 9,4.34314575 9,6 L9,10.7573593 L14.8100942,4.94726512 Z M7.97590142,11.7814579 C7.86511978,11.2840207 7.39191988,10.9432336 6.87596978,11.0077274 C6.32795032,11.0762298 5.93922497,11.5760196 6.0077274,12.124039 C6.05291889,12.4855709 6.16064541,12.9256367 6.35584336,13.401516 L7.97590142,11.7814579 Z M20.4877316,2.09805481 C20.8769027,1.70888376 21.506248,1.70725811 21.8994949,2.10050506 C22.2900192,2.49102936 22.2956069,3.1186067 21.9019452,3.51226838 L3.51226838,21.9019452 C3.12309732,22.2911162 2.49375202,22.2927419 2.10050506,21.8994949 C1.70998077,21.5089706 1.70439313,20.8813933 2.09805481,20.4877316 L20.4877316,2.09805481 Z\"\n                  id=\"Combined-Shape\"\n                ></path>\n              </g>\n            </g>\n          </g>\n        );\n      case TYPE_SCREEN:\n        return (\n          <path\n            fill={getFillColor()}\n            fillRule=\"evenodd\"\n            d=\"M2 5.006C2 3.898 2.898 3 3.99 3h16.02C21.108 3 22 3.897 22 5.006v9.988A2.003 2.003 0 0 1 20.01 17H3.99C2.892 17 2 16.103 2 14.994V5.006zm2 .99v8.009c0 .54.448.995 1 .995h14c.555 0 1-.446 1-.995v-8.01c0-.54-.448-.995-1-.995H5c-.555 0-1 .446-1 .995zM7 20c0-.552.456-1 .995-1h8.01c.55 0 .995.444.995 1 0 .552-.456 1-.995 1h-8.01A.995.995 0 0 1 7 20z\"\n          />\n        );\n      case TYPE_LEAVE:\n        return (\n          <path\n            d=\"M19.347 11l-1.71-1.638a.832.832 0 0 1 0-1.222l.03-.03a.922.922 0 0 1 1.27-.003l3.34 3.2a.95.95 0 0 1 0 1.386l-3.34 3.2a.918.918 0 0 1-1.27-.003l-.03-.03a.842.842 0 0 1 0-1.221L19.348 13h-7.352A.995.995 0 0 1 11 12c0-.552.456-1 .995-1h7.352zM16 10h-2V7.995c0-.54-.446-.995-.997-.995H6.997A1 1 0 0 0 6 7.995v8.01c0 .54.446.995.997.995h6.006a1 1 0 0 0 .997-.995V14h2v2.994A2.009 2.009 0 0 1 13.991 19H6.01A2.007 2.007 0 0 1 4 16.994V7.006C4 5.898 4.902 5 6.009 5h7.982C15.101 5 16 5.897 16 7.006V10z\"\n            fill={getFillColor()}\n            fillRule=\"evenodd\"\n          />\n        );\n      case TYPE_CHAT:\n        return (\n          <path\n            d=\"M8.984 17.522c.93.308 1.949.478 3.016.478 4.418 0 8-2.91 8-6.5S16.418 5 12 5s-8 2.91-8 6.5c0 1.65.756 3.156 2.003 4.302a8.751 8.751 0 0 1-.71 2.187c-.317.606-.457 1.011 0 1.011 1.727 0 1.99-1.236 3.691-1.478z\"\n            fill={getFillColor()}\n            fillRule=\"evenodd\"\n          />\n        );\n      default:\n        throw new Error();\n    }\n  }\n\n  return (\n    <svg\n      width=\"28px\"\n      height=\"28px\"\n      viewBox=\"0 0 24 24\"\n      className={props.className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      {getPath()}\n    </svg>\n  );\n}\n\nexport { TYPE_MUTE_CAMERA, TYPE_MUTE_MIC, TYPE_SCREEN, TYPE_LEAVE, TYPE_CHAT };\n","import React from 'react';\nimport './TrayButton.css';\nimport Icon, {\n  TYPE_MUTE_CAMERA,\n  TYPE_MUTE_MIC,\n  TYPE_SCREEN,\n  TYPE_LEAVE,\n  TYPE_CHAT,\n} from '../Icon/Icon';\n\n/**\n * Props:\n * - type: string\n * - disabled: boolean\n * - highlighted: boolean\n * - onClick: () => ()\n * - newButtonGroup: boolean\n */\nexport default function TrayButton(props) {\n  return (\n    <button\n      disabled={props.disabled}\n      onClick={props.onClick}\n      className={'tray-button' + (props.newButtonGroup ? ' new-group' : '')}\n    >\n      <Icon type={props.type} highlighted={props.highlighted} />\n    </button>\n  );\n}\n\nexport { TYPE_MUTE_CAMERA, TYPE_MUTE_MIC, TYPE_SCREEN, TYPE_LEAVE, TYPE_CHAT };\n","import React, { useContext, useState, useEffect } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nimport './Chat.css';\n\nexport default function Chat(props) {\n  const callObject = useContext(CallObjectContext);\n  const [inputValue, setInputValue] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n\n  const handleChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    callObject.sendAppMessage({ type:'chat', message: inputValue }, '*');\n    const name = callObject.participants().local.user_name\n      ? callObject.participants().local.user_name\n      : 'Guest';\n    setChatHistory([\n      ...chatHistory,\n      {\n        sender: name,\n        message: inputValue,\n      },\n    ]);\n    setInputValue('');\n  }\n\n  /**\n   * Update chat state based on a message received to all participants.\n   *\n   */\n  useEffect(() => {\n    if (!callObject) {\n      return;\n    }\n\n    function handleAppMessage(event) {\n      const participants = callObject.participants();\n      const name = participants[event.fromId].user_name\n        ? participants[event.fromId].user_name\n        : 'Guest';\n      event.data.type=='chat'&& setChatHistory([\n        ...chatHistory,\n        {\n          sender: name,\n          message: event.data.message,\n        },\n      ]);\n      // Make other icons light up\n      event.data.type=='chat'&& props.notification();\n    }\n\n    callObject.on('app-message', handleAppMessage);\n\n    return function cleanup() {\n      callObject.off('app-message', handleAppMessage);\n    };\n  }, [callObject, chatHistory]);\n\n  useEffect(() => {}, [chatHistory]);\n\n  return props.onClickDisplay ? (\n    <div className=\"chat\">\n      {chatHistory.map((entry, index) => (\n        <div key={`entry-${index}`} className=\"messageList\">\n          <b>{entry.sender}</b>: {entry.message}\n        </div>\n      ))}\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"chatInput\"></label>\n        <input\n          id=\"chatInput\"\n          className=\"chat-input\"\n          type=\"text\"\n          placeholder=\"Type your message here..\"\n          value={inputValue}\n          onChange={handleChange}\n        ></input>\n        <button type=\"submit\" className=\"send-chat-button\">\n          Send\n        </button>\n      </form>\n    </div>\n  ) : null;\n}\n","import React from 'react';\n\nexport default React.createContext();\n","export default function audioPlayer(trackName,command) {\n    const trackList = {\n        monologue1: 'https://storage.googleapis.com/secondbodyuploads/What%20Makes%20CEB%20Different%20(Mono).mp3',\n        monologue2: 'https://storage.googleapis.com/secondbodyuploads/PAGA%20Claims%20(mono).mp3',\n        monologue3: 'https://storage.googleapis.com/secondbodyuploads/AudioEngineer.mp3',\n        monologue4: 'https://storage.googleapis.com/secondbodyuploads/IBM%20Garage.mp3',\n        monologue5: '',\n        monologue6: '',\n\n        dialogue1: 'https://storage.googleapis.com/secondbodyuploads/EthicsA%20(dialogue).mp3',\n        dialogue1B: 'https://storage.googleapis.com/secondbodyuploads/EthicsB%20(dialogue).mp3',\n        dialogue2: 'https://storage.googleapis.com/secondbodyuploads/CoursePass(A)%20(dialogue).mp3',\n        dialogue2B: 'https://storage.googleapis.com/secondbodyuploads/CoursePass(B)%20(dialogue).mp3',\n        dialogue3: '',\n        dialogue3B: '',\n        dialogue4: '',\n        dialogue4B: '',\n        dialogue5: '',\n        dialogue5B: '',\n        dialogue6: '',\n        dialogue6B: '',\n    }\n    window.audio.src = trackList[trackName];\n    console.log (`going to ${command} ${trackName}`);\n    window.audio[command]();\n\n   \n\n    //TODO: PUT BACK IN*********\n\n    if(command=='pause') {\n        window.audioSourceNode.disconnect();\n        return;\n    }\n\n    //create Audio Context and destination\n    if (typeof(window.audioCtx)=='undefined') {window.audioCtx = new (window.AudioContext || window.webkitAudioContext)();}\n    // let src=document.getElementById('MediaPlayer');\n    window.audioSourceNode = window.audioSourceNode || window.audioCtx.createMediaElementSource(window.audio);\n\n    //gain Node\n    let gainNode = window.audioCtx.createGain();\n    gainNode.gain.value=1;\n    //panner Node\n    var panNode = window.audioCtx.createStereoPanner();\n    panNode.pan.value=1;\n\n    //Pipe source through nodes to destination\n    window.audioSourceNode.connect(gainNode).connect(panNode).connect(window.audioCtx.destination);\n\n\n    //END TODO*******\n\n    \n\n}","import React, { useContext, useEffect, useState } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nimport NameContext from '../../NameContext';\nimport { logDailyEvent } from '../../logUtils';\nimport './AdminPanel.css';\nimport setSubscriptions from '../../hooks/setSubscriptions';\nimport audioPlayer from '../../hooks/AudioPlayer';\n\n// import { sendState } from '../AdminPanel/AdminFunctions'\n// import SessionContext from '../../SessionContext';\n\n\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n\n\n/**\n * Gets [isCameraMuted, isMicMuted, isSharingScreen].\n * This function is declared outside Tray() so it's not recreated every render\n * (which would require us to declare it as a useEffect dependency).\n */\nfunction getStreamStates(callObject) {\n  let isCameraMuted,\n    isMicMuted,\n    isSharingScreen = false;\n  if (\n    callObject &&\n    callObject.participants() &&\n    callObject.participants().local\n  ) {\n    const localParticipant = callObject.participants().local;\n    isCameraMuted = !localParticipant.video;\n    isMicMuted = !localParticipant.audio;\n    isSharingScreen = localParticipant.screen;\n  }\n  return [isCameraMuted, isMicMuted, isSharingScreen];\n}\n\n\n\n/**\n * Props:\n * - onClickLeaveCall: () => ()\n * - disabled: boolean\n */\nexport default function AdminPanel(props) {\n  const callObject = useContext(CallObjectContext);\n  // const [sessionState, setSessionState ] = useContext(SessionContext);\n  const myName = useContext(NameContext);\n  const [isCameraMuted, setCameraMuted] = useState(false);\n  const [isMicMuted, setMicMuted] = useState(false);\n  const [isSharingScreen, setSharingScreen] = useState(false);\n  const [displayChat, setChatDisplay] = useState(false);\n  const [highlightedChat, setChatHighlight] = useState(false);\n  const setSubs = () => {setSubscriptions(callObject)};  \n  const forceUpdate = useForceUpdate();\n  window.updateAdminPanel=forceUpdate;\n  const [playButtonText, setPlayButtonText] = useState('Play practice audio');\n  const [targetRecording, setTargetRecording] = useState('monologue1') ///////HAVE TO CHANGE THIS IN TWO PLACES\n\n  useEffect(() => {           //listen for participants leaving or joining and update component\n    if (!callObject) return;\n\n    const events = [\n      'participant-joined',\n      'participant-left',\n      'joined-meeting',\n    ];\n\n    for (const event of events) {\n      callObject.on(event, () => setTimeout(()=>forceUpdate(),100));\n    }\n\n    return function cleanup() {\n      for (const event of events) {\n        callObject.off(event, () => setTimeout(()=>forceUpdate(),100));\n      }\n    };\n\n  }, [callObject]);\n\n\n\nconst sendState = () => {\n    console.log (\"Sending current state...\");\n    callObject.sendAppMessage(window.sessionState, '*'); \n}\n\n  useEffect(()=> {\n    window.sendState = sendState;\n  },[sendState]);\n\n\n  function toggleSessionActive() {\n    window.sessionState.isActive = !window.sessionState.isActive;\n    sendState();\n    if (window.sessionState.isActive && !window.myRole.includes('Actor') && !window.myRole.includes('Participant')) {\n      setSubscriptions(callObject,'Room1')\n    }\n    else {\n      setSubs();\n\n    }\n  }\n\n  function togglePractice() {\n    let recipientA = window.sessionState.roleOf.Actor1 && window[window.sessionState.roleOf.Actor1 + '_SessionID'];\n    let recipientB = window.sessionState.roleOf.Actor2 && window[window.sessionState.roleOf.Actor2 + '_SessionID'];\n    if(window.sessionState.roleOf.Actor1==window.myName) {recipientA='me'}\n    if(window.sessionState.roleOf.Actor2==window.myName) {recipientB='me'}\n\n    if (!recipientA && !recipientB) {return}\n\n    const action = window.audioIsPlaying ? 'pause' : 'play';\n    const instructionsA = {\n      type: 'instructions',\n      target: targetRecording,\n      action: action,\n      recipient: recipientA,\n    }\n    const instructionsB = {\n      type: 'instructions',\n      target: targetRecording + 'B',\n      action: action,\n      recipient: recipientB\n    }\n\n    if (recipientA) {\n      if(recipientA!='me') {\n        callObject.sendAppMessage(instructionsA,recipientA);\n      }\n      else if(recipientA=='me') {\n        audioPlayer(targetRecording,action);\n      }\n      console.log(`Sent ${action} request to ${window.sessionState.roleOf.Actor1}`);\n    }\n    if (recipientB) {\n      if(recipientB!='me') {\n        callObject.sendAppMessage(instructionsB,recipientB);\n      }\n      else if(recipientB=='me') {\n        audioPlayer(targetRecording+'B',action);\n      }\n      console.log(`Sent ${action} request to ${window.sessionState.roleOf.Actor2}`);\n    }\n      \n    window.audioIsPlaying=(!window.audioIsPlaying);\n    setPlayButtonText(!window.audioIsPlaying ? 'Play practice audio' : 'Pause practice audio');\n\n\n  }\n\n\n\n\n  let handleRoleChange = (e) => {\n    window.sessionState.roleOf[e.target.id]=e.target.value;\n    console.log (e.target.id + ' is now: ' + window.sessionState.roleOf[e.target.id]);\n    sendState();\n\n    let myNewRole = 'Attendee'; //default, if no role assigned\n    for (const key in window.sessionState.roleOf) {\n        if(window.sessionState.roleOf[key]==window.myName) {\n            myNewRole = key;\n        }\n    }\n    if (myNewRole!=window.myRole) {\n        window.myRole = myNewRole;\n          if (window.myRole.includes('1')) {\n              window.myNumber=1;\n          } else if (window.myRole.includes('2')) {\n              window.myNumber=2;\n          }\n      }\n        if(window.sessionState.isActive){\n            // activateSession();  //rebuild UI for the newly assigned role, mid-session\n        } \n        setSubs();\n  }\n\n                  \n         \n\n\n  /**\n   * Start listening for participant changes when callObject is set (i.e. when the component mounts).\n   * This event will capture any changes to your audio/video mute state.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleNewParticipantsState(event) {\n      event && logDailyEvent(event);\n      const [isCameraMuted, isMicMuted, isSharingScreen] = getStreamStates(\n        callObject\n      );\n      setCameraMuted(isCameraMuted);\n      setMicMuted(isMicMuted);\n      setSharingScreen(isSharingScreen);\n    }\n\n    // Use initial state\n    handleNewParticipantsState();\n\n    // Listen for changes in state\n    callObject.on('participant-updated', handleNewParticipantsState);\n\n    // Stop listening for changes in state\n    return function cleanup() {\n      callObject.off('participant-updated', handleNewParticipantsState);\n    };\n  }, [callObject]);\n\n\n    /* // Play practice audio for users */\n\n    \n\n  return (\n\n        <div className=\"admin-panel\" style={{position:'relative',margin:'auto',width:'100%',height:'80px'}}>\n                 \n\n              \n                \n\n\n                \n\n                {/* <!-- Play recordings for users to practice Seconding --> */}\n          <div style={{position:'absolute',left:'50px',top:'12px',textAlign: 'center', flexDirection: 'column', justifyContent: 'flex-end'}}>\n                \n                    <span style={{bottom: '0px', color: 'green', fontSize: '16px', fontFamily:'Verdana, Geneva, Tahoma, sans-serif'}}>\n                    <button onClick={togglePractice} id='play-pause'>{playButtonText}</button>\n                    </span>\n\n                   \n       \n                    {/* Recordings for Seconding */}\n                    <div style={{height:'30px'}}>\n                    <form action = ''>\n                        <fieldset style={{border:'none'}}>\n                        <select id = 'practice-audio' onChange={(e) => {setTargetRecording (e.target.value); console.log('***CHANGED TO ' + e.target.value)}}\n                        style={{outline:'none', borderRadius: '20px', height:'20px', width:'130px',  cursor:'pointer', backgroundColor:'green', color:'white'}}>\n                        <option value = 'monologue1'>What makes CEB different (mono)</option>    \n                        {/* ///IF DEFAULT VALUE CHANGES ABOVE, ALSO HAVE TO CHANGE IT IN setTargetRecording HOOK */}\n                        <option value = 'monologue2'>Searching for PAGA Claims (mono)</option>\n                        <option value = 'monologue3'>Audio Engineer (mono)</option>\n                        <option value = 'monologue4'>IBM Garage (mono)</option>\n                        <option value = 'dialogue1'>Ethics (dialogue)</option>\n                        <option value = 'dialogue2'>CoursePass (dialogue)</option>\n                    </select>\n                    </fieldset>\n                    </form>\n                </div> \n        </div>\n\n        {/* END PRACTICE AUDIO */}\n\n       \n\n\n            \n               \n\n\n                    {/* <!-- start / stop recording --> */}\n                {/* <div style={{flexGrow:'1', textAlign: 'center'}}>\n                <label class=\"switch\" style={{position:'relative', height:'30px', width:'60px', cursor:'pointer', bottom:'-30px'}}>\n                    <input type=\"checkbox\" id='recording' />\n                    <span class=\"slider round red\"></span>\n                </label>\n                <p style={{position:'relative', bottom: '-15px'}}>Recording</p>\n            </div> */}\n\n            {/* <!-- Assign who will be the participants + actors --> */}\n    <div id='role-assignments' class='role-assignments' style={{}}>\n\n          {/* (<span style={{color:'red'}}>Person A:</span> + <span style={{color:'grey'}}>played by:</span>) */}\n\n          <div className='column'>\n\n              <div className='RoleName-and-Dropdown'>\n                      <div className='RoleName'>\n                        <p>\n                          Person A:\n                        </p>\n                      </div>\n\n                      <div className='dropdown'>\n                          <p>\n                            <form>\n                              <select className='selector' id=\"Participant1\" onChange={handleRoleChange}>\n                                <option value={null}></option>\n                                {window.userList && window.userList.length>0 && window.userList.map((user) => <option value={user}>{user}</option>)}\n                              </select>\n                              </form>\n                            </p>\n                      </div>\n              </div>\n\n              <div className='RoleName-and-Dropdown'>\n                        <div className='RoleName'>\n                          <p>\n                            Actor A:\n                          </p>\n                        </div>\n\n                        <div className='dropdown'>\n                      <p>\n                      <form>\n                      <select className='selector' id=\"Actor1\" onChange={handleRoleChange}>\n                          <option value={null}></option>\n                          {window.userList && window.userList.length>0 && window.userList.map((user) => <option value={user}>{user}</option>)}\n                          </select>\n                        </form>\n                      </p>\n                  </div>\n              </div>\n      </div>\n\n      <div className='column'>\n\n          <div className='RoleName-and-Dropdown'>\n                  <div className='RoleName'>\n                    <p>\n                      Person B:\n                    </p>\n                  </div>\n\n                  <div className='dropdown'>\n                      <p>\n                        <form>\n                        <select className='selector' id=\"Participant2\" onChange={handleRoleChange}>\n                          <option value={null}></option>\n                          {window.userList && window.userList.length>0 && window.userList.map((user) => <option value={user}>{user}</option>)}\n                          </select>\n                          </form>\n                        </p>\n                  </div>\n          </div>\n\n          <div className='RoleName-and-Dropdown'>\n                    <div className='RoleName'>\n                      <p>\n                        Actor B:\n                      </p>\n                    </div>\n\n                <div className='dropdown'>\n                <p>\n                <form>\n                <select className='selector' id=\"Actor2\" onChange={handleRoleChange}>                    \n                <option value={null}></option>\n                    {window.userList && window.userList.length>0 && window.userList.map((user) => <option value={user}>{user}</option>)}\n                    </select>\n                  </form>\n                </p>\n              </div>\n          </div>\n    </div>\n\n    \n\n    </div>  \n    {/* END ROLE assignments */}\n\n     {/* <!-- start / stop session --> */}\n     <div style={{textAlign: 'center',width:'100px', position:'absolute',right:'70px',bottom:'0px'}}>\n                    <label class=\"switch\" style={{position:'relative', left:'30px',height:'30px', width:'60px',bottom:'-13px', cursor:'pointer'}}>\n                        <input type=\"checkbox\" id='state' onChange={toggleSessionActive}/>\n                        <span class=\"slider round\"></span>\n                    </label>\n                    <p style={{position:'relative', left:'30px', bottom: '0px'}}>Session active</p>\n                    </div>\n\n    </div>\n        \n\n    \n  );\n  \n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport './Tray.css';\nimport TrayButton, {\n  TYPE_MUTE_CAMERA,\n  TYPE_MUTE_MIC,\n  TYPE_SCREEN,\n  TYPE_LEAVE,\n  TYPE_CHAT,\n} from '../TrayButton/TrayButton';\nimport InputSelector from '../InputSelector/InputSelector';\nimport Chat from '../Chat/Chat';\nimport AdminPanel from '../AdminPanel/AdminPanel';\nimport CallObjectContext from '../../CallObjectContext';\nimport { logDailyEvent } from '../../logUtils';\nimport DailyIframe from '@daily-co/daily-js';\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n/**\n * Gets [isCameraMuted, isMicMuted, isSharingScreen].\n * This function is declared outside Tray() so it's not recreated every render\n * (which would require us to declare it as a useEffect dependency).\n */\nfunction getStreamStates(callObject) {\n  let isCameraMuted,\n    isMicMuted,\n    isSharingScreen = false;\n  if (\n    callObject &&\n    callObject.participants() &&\n    callObject.participants().local\n  ) {\n    const localParticipant = callObject.participants().local;\n    isCameraMuted = !localParticipant.video;\n    isMicMuted = !localParticipant.audio;\n    isSharingScreen = localParticipant.screen;\n  }\n  return [isCameraMuted, isMicMuted, isSharingScreen];\n}\n\n/**\n * Props:\n * - onClickLeaveCall: () => ()\n * - disabled: boolean\n */\nexport default function Tray(props) {\n  const callObject = useContext(CallObjectContext);\n  const [isCameraMuted, setCameraMuted] = useState(false);\n  const [isMicMuted, setMicMuted] = useState(false);\n  const [isSharingScreen, setSharingScreen] = useState(false);\n  const [displayChat, setChatDisplay] = useState(false);\n  const [highlightedChat, setChatHighlight] = useState(false);\n  const forceUpdate = useForceUpdate();\n  const micCaret = React.createRef();\n  const micSettings = React.createRef();\n  const camCaret = React.createRef();\n  const camSettings = React.createRef();\n\n  window.updateTray = () => {\n    forceUpdate();\n  }\n\n  const [showMicSettings,setShowMicSettings] = useState(false);\n  const [showCamSettings,setShowCamSettings] = useState(false);\n\n  function toggleCamera() {\n    callObject.setLocalVideo(isCameraMuted);\n  }\n\n  function toggleMic() {\n    callObject.setLocalAudio(isMicMuted);\n  }\n\n\n  useEffect(()=> {\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n\n return function cleanup() {\n    document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  })\n\n  const handleClickOutside = (event) => {\n    console.log('handling click');\n    if (micSettings.current &&\n      !micSettings.current.contains(event.target) &&\n      !micCaret.current.contains(event.target)\n    ) {\n      setShowMicSettings(false);\n    } else if (camSettings.current &&\n      !camSettings.current.contains(event.target) &&\n      !camCaret.current.contains(event.target)\n    ) {\n      setShowCamSettings(false);\n    } \n    \n  }\n\n  // function toggleSharingScreen() {\n\n    \n  //   isSharingScreen\n  //     ? callObject.stopScreenShare()\n  //     : navigator.mediaDevices.getDisplayMedia({\n  //       video: true,\n  //       audio: true,\n  //     }).then((stream)=>callObject.startScreenShare({\n  //       mediaStream:stream}))\n  //       // share getDisplayMedia stream\n  //       // mediaStream: window.screenStream,\n\n  //       // share getDisplayMedia audio track only\n        \n  //       // mediaStream: window.screenStream,\n\n  //       // share local cam via screen stream\n  //       // mediaStream: window.localCam,\n\n  //       // share only audio from local cam via screen stream\n  //       // mediaStream: new MediaStream(window.localCam.getAudioTracks()),\n  //     // });\n  // }\n\n  function leaveCall() {\n    props.onClickLeaveCall && props.onClickLeaveCall();\n  }\n\n  function toggleChat() {\n    setChatDisplay(!displayChat);\n    if (highlightedChat) {\n      setChatHighlight(!highlightedChat);\n    }\n  }\n\n  function handleNewChat() {\n    setChatHighlight(!highlightedChat);\n  }\n\n  function openScreenShareWindow () {\n    window.open(\"http://\" + window.location.host + \"/share\",\"test\",\"width=300, height=300\");\n\n  }\n\n\n\n  /**\n   * Start listening for participant changes when callObject is set (i.e. when the component mounts).\n   * This event will capture any changes to your audio/video mute state.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    function handleNewParticipantsState(event) {\n      event && logDailyEvent(event);\n      const [isCameraMuted, isMicMuted, isSharingScreen] = getStreamStates(\n        callObject\n      );\n      setCameraMuted(isCameraMuted);\n      setMicMuted(isMicMuted);\n      setSharingScreen(isSharingScreen);\n    }\n\n    // Use initial state\n    handleNewParticipantsState();\n\n    // Listen for changes in state\n    callObject.on('participant-updated', handleNewParticipantsState);\n\n    // Stop listening for changes in state\n    return function cleanup() {\n      callObject.off('participant-updated', handleNewParticipantsState);\n    };\n  }, [callObject]);\n\n  return (\n    <div className=\"tray\">\n      <TrayButton\n        type={TYPE_MUTE_CAMERA}\n        // disabled={props.disabled}\n        highlighted={isCameraMuted}\n        onClick={toggleCamera}\n      />\n      \n      <div onClick={()=>{setShowCamSettings(!showCamSettings)}}  style={{position:'absolute',left:'55px', bottom:'23px',}}>\n        <p className=\"caret\" ref={camCaret}>^</p>\n                {showCamSettings ? \n                (<InputSelector type='video' page='main' ref={camSettings}/>)\n                : \n                null}\n      </div>\n      \n      <TrayButton\n        type={TYPE_MUTE_MIC}\n        // disabled={props.disabled}\n        highlighted={isMicMuted}\n        onClick={toggleMic}\n      />\n      <div onClick={()=>{setShowMicSettings(!showMicSettings)}}  style={{position:'absolute',left:'125px', bottom:'23px'}}>\n      {/* <img src={Caret} style={{position:'absolute',left:'52px', bottom:'42px', height:'18px',fontSize:'15px'}} /> */}\n      \n      <p className=\"caret\" ref={micCaret}>^</p>\n              {showMicSettings ? \n              (<InputSelector type='audio' page='main' ref={micSettings}/>)\n              : \n              null}\n              \n      </div>\n      {DailyIframe.supportedBrowser().supportsScreenShare && window.amAdmin && (\n        <TrayButton\n          type={TYPE_SCREEN}\n          // disabled={props.disabled}\n          highlighted={isSharingScreen}\n          onClick={openScreenShareWindow}\n          // onClick={toggleSharingScreen}\n        />\n      )}\n      <TrayButton\n        type={TYPE_CHAT}\n        // disabled={props.disabled}\n        highlighted={highlightedChat}\n        onClick={toggleChat}\n      />\n      <Chat onClickDisplay={displayChat} notification={handleNewChat} />\n      \n      {window.amAdmin && (\n        <AdminPanel\n      />\n      )}\n\n      {/* <!-- Control who you see during a session --> */}\n      {window.sessionState && window.sessionState.isActive && (window.myRole=='Attendee' || window.myRole=='Admin') && (\n        <div style={{zIndex:'999', height:'80px',bottom:'10px',overflow:'hidden',visibility:'visible', flexGrow:'1', textAlign: 'center', position:'absolute', left:'50%', transform:'translateX(-50%)'}} id='my-view'>\n          <form action = ''>\n              <fieldset style={{border:'none'}}>\n              <select id = 'view-mode' onChange = {(e)=>window.setViewMode(e.target.value)} style={{outline:'none', position: 'relative', borderRadius: '20px', height:'30px', width:'100px', bottom:'-22px', cursor:'pointer', backgroundColor: '#2196F3', color:'white'}}>\n              <option value = 'Room1'>Room1</option>\n              <option value = 'Room2'>Room2</option>\n              <option value = 'All'>All</option>\n              {/* <option value = 'Actors'>Actors</option>\n              <option value = 'Participants'>Participants</option>\n              <option value = '1s'>Both 1s</option>\n              <option value = '2s'>Both 2s</option>\n              <option value = 'None'>None</option> */}\n              </select>\n              </fieldset>\n              </form>\n              <p style={{position:'relative', bottom: '3px'}}>My view</p>\n      </div>\n      )}\n      \n\n      <TrayButton\n        type={TYPE_LEAVE}\n        disabled={props.disabled}\n        newButtonGroup={true}\n        highlighted={true}\n        onClick={leaveCall}\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default React.createContext();\n","export function roomUrlFromPageUrl() {\n  const match = window.location.search.match(/roomUrl=([^&]+)/i);\n  return match && match[1] ? decodeURIComponent(match[1]) : null;\n}\n\nexport function pageUrlFromRoomUrl(roomUrl) {\n  return (\n    window.location.href.split('?')[0] +\n    (roomUrl ? `?roomUrl=${encodeURIComponent(roomUrl)}` : '')\n  );\n}\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Call from '../Call/Call';\nimport StartScreen from '../StartScreen/StartScreen';\nimport api from '../../api';\nimport './App.css';\nimport Tray from '../Tray/Tray';\nimport CallObjectContext from '../../CallObjectContext';\n// import MyInfoContext from '../../MyInfoContext';\nimport SessionContext from '../../SessionContext';\nimport { roomUrlFromPageUrl, pageUrlFromRoomUrl } from '../../urlUtils';\nimport DailyIframe from '@daily-co/daily-js';\nimport { logDailyEvent } from '../../logUtils';\nimport setSubscriptions from '../../hooks/setSubscriptions';\nimport { sendState } from '../AdminPanel/AdminFunctions';\nimport audioPlayer from '../../hooks/AudioPlayer';\n\n\n\nconst STATE_IDLE = 'STATE_IDLE';\nconst STATE_CREATING = 'STATE_CREATING';\nconst STATE_JOINING = 'STATE_JOINING';\nconst STATE_JOINED = 'STATE_JOINED';\nconst STATE_LEAVING = 'STATE_LEAVING';\nconst STATE_ERROR = 'STATE_ERROR';\n\n\n\n\nexport default function App() {\n  const [appState, setAppState] = useState(STATE_IDLE);\n  const [roomUrl, setRoomUrl] = useState(null);\n  const [callObject, setCallObject] = useState(null);\n\n\n  if (!window.pass.includes(window.myP)) {\n    //redirect if password is wrong\n    window.location.href = \"http://secondbody.co\"\n  }\n\n  window.setViewMode = (viewMode) => {\n    viewMode && console.log ('Changing view mode to: ' + viewMode);\n    setSubscriptions(callObject,viewMode)\n  }\n\n\n  \n  /**\n   * Creates a new call room.\n   */\n  const createCall = useCallback(() => {\n    setAppState(STATE_CREATING);\n    return api\n      .createRoom()\n      .then((room) => room.url)\n      .catch((error) => {\n        console.log('Error creating room', error);\n        setRoomUrl(null);\n        setAppState(STATE_IDLE);\n      });\n  }, []);\n\n\n\n  /**\n   * Starts joining an existing call.\n   *\n   * NOTE: In this demo we show how to completely clean up a call with destroy(),\n   * which requires creating a new call object before you can join() again.\n   * This isn't strictly necessary, but is good practice when you know you'll\n   * be done with the call object for a while and you're no longer listening to its\n   * events.\n   */\n\n\n/*   \nARLO NOTE:\n      Below is where the trouble is. myInfo.name is set via a child component, <StartScreen>, \n      and it successfully changes myInfo.name (I've confirmed since it's pinned to the Window).\n      The below works... the first time. But then callObject.participants().local.user_name gets \"stuck\", \n      so if you exit and leave, or even refresh the page, it never changes. Weird behavior\n*/\n\n  const startJoiningCall = useCallback((url) => {\n    // if(!initialInputs) {return}\n    const newCallObject = DailyIframe.createCallObject({ \n      subscribeToTracksAutomatically: false, \n    });\n    setRoomUrl(url);\n    setCallObject(newCallObject);\n    setAppState(STATE_JOINING);\n    if(window.initialInputs) {\n      console.log('initial audio: ' + window.initialInputs[0] + '. Initial video: ' + window.initialInputs[1])\n    newCallObject.join({ userName:window.myName, url, audioSource: window.initialInputs[0],videoSource:window.initialInputs[1]});  //another way I've tried to do it--is this correct?\n    } else {\n      navigator.mediaDevices.getUserMedia({audio:true,video:true}).then((mediaStream)=>{\n        if(mediaStream){\n          let localAudio = mediaStream.getAudioTracks();\n          let localVideo = mediaStream.getVideoTracks();\n          if(localAudio && localAudio.length > 0 && localVideo && localVideo.length > 0)\n              {\n                newCallObject.join({ userName:window.myName, url, audioSource: localAudio[0], videoSource:localVideo[0]});\n              }\n        }else{\n          //say something to user, like you don't have any mic or you should allow use mic to this website\n        }\n      })\n    }\n    console.log('joining the call as ' + window.myName);  //this sometimes displays myInfo.name, sometimes not\n    const pageUrl = pageUrlFromRoomUrl(roomUrl)+'&N='+window.myName+'&R='+window.myRole;\n    // let connector = '?';\n    // if (pageUrl.includes('?roomUrl=')) {let connector = '&'};\n    // if (window.myName) {\n    //   if (pageUrl === window.location.href) return;\n    //   window.history.replaceState(null, null, pageUrl + connector + \"R=\" + window.myRole + \"&N=\" + window.myName);\n    // } else if (window.myRole) {\n    //   if (pageUrl === window.location.href) return;\n    //   window.history.replaceState(null, null, pageUrl + connector + \"R=\" + window.myRole);\n    // } else {\n    //   if (pageUrl === window.location.href) return;\n    //   window.history.replaceState(null, null, pageUrl);\n    // }\n  }, []); \n\n\n\n  /**\n   * Starts leaving the current call.\n   */\n  const startLeavingCall = useCallback(() => {\n    if (!callObject) return;\n    // If we're in the error state, we've already \"left\", so just clean up\n    if (appState === STATE_ERROR) {\n      callObject.destroy().then(() => {\n        setRoomUrl(null);\n        setCallObject(null);\n        setAppState(STATE_IDLE);\n        window.initialize();\n      });\n    } else {\n      setAppState(STATE_LEAVING);\n      callObject.leave();\n      window.initialize();    \n    }\n  }, [callObject, appState]);\n\n  /**\n   * If a room's already specified in the page's URL when the component mounts,\n   * join the room.\n   */\n  useEffect(() => {\n    const url = roomUrlFromPageUrl();\n    url && window.initialInputs && startJoiningCall(url);\n  }, [startJoiningCall]);\n\n  /**\n   * Update the page's URL to reflect the active call when roomUrl changes.\n   *\n   * This demo uses replaceState rather than pushState in order to avoid a bit\n   * of state-management complexity. See the comments around enableCallButtons\n   * and enableStartButton for more information.\n   */\n  useEffect(() => {\n    let pageUrl = pageUrlFromRoomUrl(roomUrl);\n    window.pageUrl=pageUrl;\n    \n    if (window.myName) {\n      if (pageUrl.indexOf('?') > -1){\n        pageUrl += '&N=' + window.myName;\n      }else{\n        pageUrl += '?N=' + window.myName;\n      }\n    }\n    if (window.myRole) {\n      if (pageUrl.indexOf('?') > -1){\n        pageUrl += '&R=' + window.myRole;\n      }else{\n        pageUrl += '?R=' + window.myRole;\n      }\n    }\n    if (window.myP) {\n      if (pageUrl.indexOf('?') > -1){\n        pageUrl += '&P=' + window.myP;\n      }else{\n        pageUrl += '?P=' + window.myP;\n      }\n    }\n    if (pageUrl === window.location.href) return;\n    window.history.replaceState(null, null, pageUrl);\n  }, [roomUrl]);\n\n\n  /**\n   * Uncomment to attach call object to window for debugging purposes.\n   */\n  useEffect(() => {\n    window.callObject = callObject;\n  }, [callObject]); // Only re-run the effect if callObject changes\n\n  \n function getState () {\n    if (window.sessionState.isKnown == true) {\n        clearInterval(window.stateRequest);            \n        return;\n    }\n    // if (window.adminPresent) {\n        callObject.sendAppMessage(\"State please?\", '*'); \n        console.log('Requesting meeting state...');\n    \n}\n\n \n\n  /**\n   * Update app state based on reported meeting state changes.\n   *\n   * NOTE: Here we're showing how to completely clean up a call with destroy().\n   * This isn't strictly necessary between join()s, but is good practice when\n   * you know you'll be done with the call object for a while and you're no\n   * longer listening to its events.\n   */\n  useEffect(() => {\n    if (!callObject) return;\n\n    const events = ['joined-meeting', 'left-meeting', 'error'];\n\n    function handleNewMeetingState(event) {\n      event && logDailyEvent(event);\n      switch (callObject.meetingState()) {\n        case 'joined-meeting':\n          setAppState(STATE_JOINED);\n          callObject.setNetworkTopology({ topology: 'sfu' });\n          window.userList.push(window.myName);\n          if(window.myName==\"\"){callObject.leave();}\n          if (window.myRole==\"Admin\") {\n            window.sessionState.isKnown=true;\n          } else {\n            window.sessionState.isKnown = false;\n            window.stateRequest = setInterval(()=>{getState()},2500);\n          }\n\n          break;\n        case 'left-meeting':\n          callObject.destroy().then(() => {\n            setRoomUrl(null);\n            setCallObject(null);\n            setAppState(STATE_IDLE);\n            clearInterval(window.stateRequest);\n            window.initialize();\n          });\n          break;\n        case 'error':\n          setAppState(STATE_ERROR);\n          break;\n        default:\n          break;\n      }\n    }\n\n    // Use initial state\n    handleNewMeetingState();\n\n    // Listen for changes in state\n    for (const event of events) {\n      callObject.on(event, handleNewMeetingState);\n    }\n\n    // Stop listening for changes in state\n    return function cleanup() {\n      for (const event of events) {\n        callObject.off(event, handleNewMeetingState);\n      }\n    };\n  }, [callObject]);\n\n  /**\n   * Listen for app messages from other call participants.\n   */\n  useEffect(() => {\n    if (!callObject) {\n      return;\n    }\n\n    function handleAppMessage(e) {\n      if (e) {\n        logDailyEvent(e);\n        console.log(`received app message from ${e.fromId}: `, e.data);\n\n          let participants = callObject.participants();\n      \n          //handle sessionState updates\n          if (e.data.constructor === Object && e.data.type==\"sessionState\") {\n\n            const setSubs = () => {setSubscriptions(callObject)}\n                  \n            //temporarily commented out\n                  // if (e.data.isKnown==false)   //probably redundant. only use received sessionState if isKnown = true\n                  //     {return;}\n                  // else if (e.data.isKnown==true && typeof(stateRequest)!='undefined') {   //if state is known, stop asking for state\n                  //     clearInterval(stateRequest);\n                  // }\n      \n              let priorSessionState = window.sessionState;\n              window.sessionState=e.data;\n              let needToSetSubs=false;\n                \n      \n                  // change my role if it has been updated in sessionState\n                  if (window.sessionState.roleOf!=priorSessionState.roleOf) \n                    {\n                      let myNewRole = 'Attendee'; //default, if no role assigned\n                      for (const key in window.sessionState.roleOf) {\n                          if(window.sessionState.roleOf[key]==window.myName) {\n                              myNewRole = key;\n                          }\n                      }\n                      if (myNewRole!=window.myRole) {\n                          window.myRole = myNewRole;\n                            if (window.myRole.includes('1')) {\n                                window.myNumber=1;\n                            } else if (window.myRole.includes('2')) {\n                                window.myNumber=2;\n                            }\n                        }\n                          if(window.sessionState.isActive){\n                              activateSession();  //rebuild UI for the newly assigned role, mid-session\n                          } \n                          needToSetSubs=true;\n                    }\n\n\n      \n                      //create or delete rooms according to assignments of Thirds\n                      // if (window.sessionState.roleOf.Room3A!='') {\n                      //     !$(\"#view-mode option[value=Room3\").length>0 && $(\"#view-mode\").append(\"<option value='Room3'>Room3</option>\");\n                      //   } else {\n                      //     $(\"#view-mode option[value=Room3\").remove();\n                      //   }\n      \n                      // if (window.sessionState.roleOf.Room4A!='') {\n                      //     !$(\"#view-mode option[value=Room4\").length>0 && $(\"#view-mode\").append(\"<option value='Room4'>Room4</option>\");\n                      //   } else {\n                      //     $(\"#view-mode option[value=Room4\").remove();\n                      //   }\n      \n                      // if (window.sessionState.roleOf.Room5A!='') {\n                      //     !$(\"#view-mode option[value=Room5\").length>0 && $(\"#view-mode\").append(\"<option value='Room5'>Room5</option>\");\n                      //   } else {\n                      //     $(\"#view-mode option[value=Room5\").remove();\n                      //   }\n                      \n                  //determine if need to reset subs\n                  if (priorSessionState.isActive !== window.sessionState.isActive ||\n                      priorSessionState.AdminVisible!==window.sessionState.AdminVisible ) \n                      {\n                          needToSetSubs = true;\n                      }\n      \n                  //now, reset subscriptions if necessary\n                  if (needToSetSubs) {\n                    if (!priorSessionState.isActive && window.sessionState.isActive && window.myRole=='Attendee' || window.myRole=='Admin') {\n                      setSubscriptions(callObject,'Room1')\n                    }\n                    else {\n                      setSubs();\n                    }\n                  }\n                  \n                  //when session starts\n                  if (priorSessionState.isActive == false && window.sessionState.isActive == true) {\n                      activateSession();\n                      if (window.myRole=='Attendee' || window.myRole=='Admin') {\n                        }\n                  }\n                  //when session is paused\n                  else if (priorSessionState.isActive == true && window.sessionState.isActive == false) {\n                      pauseSession();\n                      window.setViewMode(null);\n                  } \n            }\n\n            else if (e.data.constructor === Object && e.data.type==\"instructions\" && e.data.recipient==callObject.participants().local.session_id) {\n              audioPlayer(e.data.target,e.data.action)\n            }\n\n\n            else if (e.data==\"State please?\") {\n              if (window.amAdmin) {\n                sendState(window.sessionState,callObject);\n              }\n            } \n          }\n          //not used in this module, since there's no timer\n          \n          // if none of the above, just overlay the message\n          // else if (e.data.constructor !== Object) {    \n          //     overlayMessage(e.data,10000);\n          // }\n\n          async function activateSession() {\n            switch (window.myRole) {\n                case 'Attendee':\n                    // $(\"#cam-instructions\").fadeOut(500);\n                    // $(\"#cam-image\").fadeOut(500);\n                    // $(\"#mic-instructions\").fadeOut(500);\n                    // $(\"#mic-image\").fadeOut(500);\n                    // $('#show-qr-code').fadeOut(500);\n                    // $('#get-prompt').fadeOut(500);\n                    // document.getElementById('my-view').style.visibility='visible';\n                    // $('#my-view').fadeIn(500);\n                    window.camWasOn = callObject.localVideo();\n                    if (window.camWasOn) {\n                        // toggleCam()\n                    }\n                    // $('#view-mode').val('Room1').trigger(\"change\");\n                    // document.getElementById(\"overlay\").className = \"superimposed-text-attendees\";\n                    // document.getElementById(\"overlay-text\").className = \"overlay-text-attendees\";\n                    break;\n        \n                case 'Participant1':\n                case 'Participant2':\n                    // $(\"#cam-instructions\").fadeIn(500);\n                    // $(\"#cam-image\").fadeIn(500);\n                    // $(\"#mic-instructions\").fadeIn(500);\n                    // $(\"#mic-image\").fadeIn(500);\n                    // $('#show-qr-code').fadeOut(500);\n                    // $('#get-prompt').fadeIn(500);\n                    // $('#my-view').fadeOut(500);\n                    // document.getElementById('my-view').style.visibility='hidden';\n                    // document.getElementById(\"overlay\").className = \"superimposed-text\";\n                    // document.getElementById(\"overlay-text\").className = \"overlay-text\";\n                    // displayName();\n                    // closeChat();\n                    break;\n        \n                case 'Actor1':\n                case 'Actor2':\n                case 'Room3A':\n                case 'Room3B':\n                case 'Room4A':\n                case 'Room4B':\n                case 'Room5A':\n                case 'Room5B':\n                    // $(\"#cam-instructions\").fadeIn(500);\n                    // $(\"#cam-image\").fadeIn(500);\n                    // $(\"#mic-instructions\").fadeIn(500);\n                    // $(\"#mic-image\").fadeIn(500);\n                    // $('#show-qr-code').fadeIn(500);\n                    // $('#get-prompt').fadeOut(500);\n                    // $('#my-view').fadeOut(500);\n                    // document.getElementById('my-view').style.visibility='hidden';\n                    // document.getElementById(\"overlay\").className = \"superimposed-text\";\n                    // document.getElementById(\"overlay-text\").className = \"overlay-text\";\n                    // displayName();\n                    // closeChat();\n                    break;\n                \n                default:\n                    break;\n            }\n        }\n          \n          async function pauseSession() {\n            // $(\"#cam-instructions\").fadeIn(500);\n            // $(\"#cam-image\").fadeIn(500);\n            // $(\"#mic-instructions\").fadeIn(500);\n            // $(\"#mic-image\").fadeIn(500);\n            // $('#show-qr-code').fadeIn(500);\n            // $('#get-prompt').fadeOut(500);\n            // document.getElementById('get-prompt').style.visibility='hidden';\n            // $('#my-view').fadeOut(500);\n            // if (window.camWasOn && !callObject.localVideo()) {toggleCam()}; // turn back on cam if it was noted as on before session\n          }\n\n\n      \n    } //end handleAppMessage\n\n    callObject.on('app-message', handleAppMessage);\n\n    return function cleanup() {\n      callObject.off('app-message', handleAppMessage);\n    };\n  }, [callObject]);\n\n  /**\n   * Show the call UI if we're either joining, already joined, or are showing\n   * an error.\n   */\n  const showCall = [STATE_JOINING, STATE_JOINED, STATE_ERROR].includes(\n    appState\n  );\n\n  /**\n   * Only enable the call buttons (camera toggle, leave call, etc.) if we're joined\n   * or if we've errored out.\n   *\n   * !!!\n   * IMPORTANT: calling callObject.destroy() *before* we get the \"joined-meeting\"\n   * can result in unexpected behavior. Disabling the leave call button\n   * until then avoids this scenario.\n   * !!!\n   */\n  const enableCallButtons = [STATE_JOINED, STATE_ERROR].includes(appState);\n\n  /**\n   * Only enable the start button if we're in an idle state (i.e. not creating,\n   * joining, etc.).\n   *\n   * !!!\n   * IMPORTANT: only one call object is meant to be used at a time. Creating a\n   * new call object with DailyIframe.createCallObject() *before* your previous\n   * callObject.destroy() completely finishes can result in unexpected behavior.\n   * Disabling the start button until then avoids that scenario.\n   * !!!\n   */\n  const enableStartButton = appState === STATE_IDLE;\n\n  return (\n    //  <SessionContext.Provider value={[sessionState,setSessionState]}>\n\n      /* <MyInfoContext.Provider value={[myInfo,setMyInfo]}> */\n\n\n    <div className=\"app\">\n    \n      {(showCall) ? (\n        // NOTE: for an app this size, it's not obvious that using a Context\n        // is the best choice. But for larger apps with deeply-nested components\n        // that want to access call object state and bind event listeners to the\n        // call object, this can be a helpful pattern.\n        <CallObjectContext.Provider value={callObject}>\n          <Call roomUrl={roomUrl} />\n          <Tray\n            disabled={!enableCallButtons}\n            onClickLeaveCall={startLeavingCall}\n          />\n        </CallObjectContext.Provider>\n      ) : (\n        <StartScreen\n          // disabled={!enableStartButton}\n          onClick={() => {\n            createCall().then((url) => startJoiningCall(url));\n          }}\n        />\n      )}\n    </div>\n    /* </MyInfoContext.Provider> */\n    // </SessionContext.Provider>\n\n  );\n}\n","export function sendState(sessionState,callObject) {\n    console.log (\"Sending current state...\");\n    callObject.sendAppMessage(sessionState, '*'); \n}\n\n\n\n// export function setViewMode(viewmode) {\n \n//     currentSubs=[];\n\n//     switch (viewMode) {\n//         case 'All':\n//                 currentSubs.push(sessionState.roleOf.Participant1);\n//                 currentSubs.push(sessionState.roleOf.Participant2);\n//                 currentSubs.push(sessionState.roleOf.Actor1);\n//                 currentSubs.push(sessionState.roleOf.Actor2);\n//             break;\n\n//         case 'Room1':\n//                 currentSubs.push(sessionState.roleOf.Participant1);\n//                 currentSubs.push(sessionState.roleOf.Actor2);\n//             break;\n\n//         case 'Room2':\n//                 currentSubs.push(sessionState.roleOf.Participant2);\n//                 currentSubs.push(sessionState.roleOf.Actor1);\n//             break;\n\n//         case 'Actors':\n//                 currentSubs.push(sessionState.roleOf.Actor1);\n//                 currentSubs.push(sessionState.roleOf.Actor2);\n//             break;\n\n//         case 'Participants':\n//             currentSubs.push(sessionState.roleOf.Participant1);\n//             currentSubs.push(sessionState.roleOf.Participant2);\n//             break;\n\n//         case '1s':\n//             currentSubs.push(sessionState.roleOf.Actor1);\n//             currentSubs.push(sessionState.roleOf.Participant1);\n//             break;\n\n//         case '2s':\n//                 currentSubs.push(sessionState.roleOf.Actor2);\n//                 currentSubs.push(sessionState.roleOf.Participant2);\n//             break;\n\n//         case 'Room3':\n//             currentSubs.push(sessionState.roleOf.Room3A);\n//             currentSubs.push(sessionState.roleOf.Room3B);\n//         break;\n\n//         case 'Room4':\n//             currentSubs.push(sessionState.roleOf.Room4A);\n//             currentSubs.push(sessionState.roleOf.Room4B);\n//         break;\n\n//         case 'Room5':\n//             currentSubs.push(sessionState.roleOf.Room5A);\n//             currentSubs.push(sessionState.roleOf.Room5B);\n//         break;\n\n//         case 'None':\n//             break;\n\n//         default:\n//             break;\n//     }\n//     setSubscriptions();\n// }\n\n\n// async function setAdminVis() {\n//     var selection = document.getElementById('admin-vis');\n//     sessionState.AdminVisible = selection.value;\n//     console.log(\"Admin\" + sessionState.AdminVisible ? \" is \" : \" is not \" + \"visible\");\n//     sendState();\n// }","import React from 'react';\nimport './BrowserUnsupported.css';\n\nexport default function BrowserUnsupported() {\n  return (\n    <p class=\"browser-unsupported\">\n      Looks like you need to upgrade your browser to make Daily video calls.\n      <br />\n      See&nbsp;\n      <a href=\"https://docs.daily.co/docs/browsers\">this page</a>\n      &nbsp;for help getting on a supported browser version.\n    </p>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport BrowserUnsupported from './components/BrowserUnsupported/BrowserUnsupported';\nimport DailyIframe from '@daily-co/daily-js';\n\nReactDOM.render(\n  DailyIframe.supportedBrowser().supported ? <App /> : <BrowserUnsupported />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}