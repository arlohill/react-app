{"ast":null,"code":"import _defineProperty from\"/Users/arlosb/Documents/GitHub/new react app/test1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/arlosb/Documents/GitHub/new react app/test1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useContext,useState}from'react';import'./StartScreen.css';// import MyInfoContext from '../../MyInfoContext';\n//   if (parent.myRole=='Actor') {\n//     document.getElementById('instructions').remove();\n//     document.getElementById('actor-instructions').style.visibility='visible';\n//     let qrCode = '../images/Audio' + parent.myNumber + '.png';\n//     document.getElementById('QR-code').src=qrCode;\n//   }\n/**\n * Props:\n * -\n * -\n */export default function StartScreen(props){var _React$createElement;var userIDEl=useRef(null);var begin=props.onClick;// const [ myInfo, setMyInfo ] = useContext(MyInfoContext);\nvar _useState=useState('Your first name'),_useState2=_slicedToArray(_useState,2),userID=_useState2[0],setUserID=_useState2[1];//   if (parent.myRole.includes('Viewer')) {\n//     document.getElementById('welcome-instructions').innerHTML='You are in view-only mode. <br/><br/>Click below to enter. <br/><br/>  <button class=\"new-card\" id=\"enter-button\" onclick=\"setUserID()\">Enter session</button>'\n//   }\n// useEffect(()=> {\n//     if(window.myRole==='Admin') {\n//         window.myName='Admin';\n//         begin();\n//     };\n//     },[])\nfunction setMyName(){console.log('setting user ID as '+userID);//   if (parent.myRole.includes('Viewer')) {   //enter session immediately if no need to enter name\n//     begin();\n//     return;\n//   }\nif(userID===''||userID==='Your first name'||userID.length<=1){alert('Please enter your name to help your partner identify you.');}else{console.log('***GOT HERE***');window.myName=userID;begin();}}function onFieldChange(value){setUserID(value);window.userID=userID;}return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"start-screen-background\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"instructions\"},/*#__PURE__*/React.createElement(\"div\",{className:\"fixed-width\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Welcome to SecondBody.\"),/*#__PURE__*/React.createElement(\"div\",{style:{marginLeft:'180px',marginRight:'180px',padding:'20px',border:'4px solid whitesmoke'}},/*#__PURE__*/React.createElement(\"h4\",{id:\"welcome-instructions\"},/*#__PURE__*/React.createElement(\"form\",{id:\"form\",onSubmit:function onSubmit(e){return e.preventDefault();}},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",autoComplete:\"off\",style:{backgroundColor:'rgb(230, 240, 249)',fontSize:'15px',width:'200px',height:'30px',textAlign:'center',fontFamily:'poppins'},ref:userIDEl,value:userID,onFocus:function onFocus(){if(userID==='Your first name'){setUserID('');}},onChange:function onChange(e){return onFieldChange(e.target.value);}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"input\",(_React$createElement={className:\"new-card\",style:{width:'150px',color:'#1b8bc4',fontSize:'17px'},type:\"submit\"},_defineProperty(_React$createElement,\"type\",\"submit\"),_defineProperty(_React$createElement,\"value\",\"Enter session\"),_defineProperty(_React$createElement,\"onClick\",setMyName),_React$createElement))),/*#__PURE__*/React.createElement(\"br\",null))))));}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test1/src/components/StartScreen/StartScreen.js"],"names":["React","useEffect","useRef","useContext","useState","StartScreen","props","userIDEl","begin","onClick","userID","setUserID","setMyName","console","log","length","alert","window","myName","onFieldChange","value","marginLeft","marginRight","padding","border","e","preventDefault","backgroundColor","fontSize","width","height","textAlign","fontFamily","target","color"],"mappings":"oVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,UAAnC,CAA+CC,QAA/C,KAA+D,OAA/D,CACA,MAAO,mBAAP,CACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA,GACC,cAAe,SAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,0BAExC,GAAMC,CAAAA,QAAQ,CAAGL,MAAM,CAAC,IAAD,CAAvB,CACA,GAAMM,CAAAA,KAAK,CAAGF,KAAK,CAACG,OAApB,CACA;AAJwC,cAKVL,QAAQ,CAAC,iBAAD,CALE,wCAKhCM,MALgC,eAKxBC,SALwB,eAQxC;AACJ;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEE,QAASC,CAAAA,SAAT,EAAqB,CACjBC,OAAO,CAACC,GAAR,CAAY,sBAAwBJ,MAApC,EACF;AACA;AACA;AACA;AACE,GAAIA,MAAM,GAAK,EAAX,EAAiBA,MAAM,GAAG,iBAA1B,EAA+CA,MAAM,CAACK,MAAP,EAAe,CAAlE,CAAqE,CACnEC,KAAK,CAAC,2DAAD,CAAL,CACD,CAFD,IAEO,CACHH,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACFG,MAAM,CAACC,MAAP,CAAcR,MAAd,CACAF,KAAK,GACN,CACJ,CAID,QAASW,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC5BT,SAAS,CAACS,KAAD,CAAT,CACAH,MAAM,CAACP,MAAP,CAAcA,MAAd,CACH,CAGG,mBACA,2BAAK,SAAS,CAAC,WAAf,eAEI,2BAAK,SAAS,CAAC,yBAAf,EAFJ,cAII,2BAAK,SAAS,CAAC,cAAf,eACI,2BAAK,SAAS,CAAC,aAAf,eAEI,uDAFJ,cAII,2BAAK,KAAK,CAAE,CAACW,UAAU,CAAC,OAAZ,CAAqBC,WAAW,CAAC,OAAjC,CAA0CC,OAAO,CAAE,MAAnD,CAA2DC,MAAM,CAAE,sBAAnE,CAAZ,eACI,0BAAI,EAAE,CAAC,sBAAP,eAEI,4BAAM,EAAE,CAAC,MAAT,CAAgB,QAAQ,CAAE,kBAACC,CAAD,QAAKA,CAAAA,CAAC,CAACC,cAAF,EAAL,EAA1B,eAEI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,YAAY,CAAC,KAAhC,CAAsC,KAAK,CAAE,CAACC,eAAe,CAAE,oBAAlB,CAAwCC,QAAQ,CAAC,MAAjD,CAAyDC,KAAK,CAAE,OAAhE,CAAyEC,MAAM,CAAE,MAAjF,CAAyFC,SAAS,CAAC,QAAnG,CAA6GC,UAAU,CAAC,SAAxH,CAA7C,CAAiL,GAAG,CAAEzB,QAAtL,CAAgM,KAAK,CAAEG,MAAvM,CAA+M,OAAO,CAAE,kBAAK,CAAC,GAAIA,MAAM,GAAG,iBAAb,CAAgC,CAACC,SAAS,CAAC,EAAD,CAAT,CAAc,CAAC,CAA9Q,CAAgR,QAAQ,CAAE,kBAAAc,CAAC,QAAIN,CAAAA,aAAa,CAACM,CAAC,CAACQ,MAAF,CAASb,KAAV,CAAjB,EAA3R,EAFJ,cAEoU,8BAFpU,cAEyU,8BAFzU,cAGI,mDAAO,SAAS,CAAC,UAAjB,CAA4B,KAAK,CAAE,CAACS,KAAK,CAAC,OAAP,CAAgBK,KAAK,CAAC,SAAtB,CAAiCN,QAAQ,CAAE,MAA3C,CAAnC,CAAuF,IAAI,CAAC,QAA5F,8CAA0G,QAA1G,+CAAyH,eAAzH,iDAAkJhB,SAAlJ,wBAHJ,CAFJ,cAQI,8BARJ,CADJ,CAJJ,CADJ,CAJJ,CADA,CAuDD","sourcesContent":["import React, { useEffect, useRef, useContext, useState } from 'react';\nimport './StartScreen.css';\n// import MyInfoContext from '../../MyInfoContext';\n\n\n\n//   if (parent.myRole=='Actor') {\n//     document.getElementById('instructions').remove();\n//     document.getElementById('actor-instructions').style.visibility='visible';\n//     let qrCode = '../images/Audio' + parent.myNumber + '.png';\n//     document.getElementById('QR-code').src=qrCode;\n//   }\n\n\n/**\n * Props:\n * -\n * -\n */\n export default function StartScreen(props) {\n\n    const userIDEl = useRef(null);\n    const begin = props.onClick;\n    // const [ myInfo, setMyInfo ] = useContext(MyInfoContext);\n    const [ userID, setUserID ] = useState('Your first name');\n    \n\n    //   if (parent.myRole.includes('Viewer')) {\n//     document.getElementById('welcome-instructions').innerHTML='You are in view-only mode. <br/><br/>Click below to enter. <br/><br/>  <button class=\"new-card\" id=\"enter-button\" onclick=\"setUserID()\">Enter session</button>'\n//   }\n\n// useEffect(()=> {\n//     if(window.myRole==='Admin') {\n//         window.myName='Admin';\n//         begin();\n//     };\n//     },[])\n\n  function setMyName() {\n      console.log('setting user ID as ' + userID);\n    //   if (parent.myRole.includes('Viewer')) {   //enter session immediately if no need to enter name\n    //     begin();\n    //     return;\n    //   }\n      if (userID === '' || userID==='Your first name' || userID.length<=1) {\n        alert('Please enter your name to help your partner identify you.')\n      } else {\n          console.log('***GOT HERE***');\n        window.myName=userID;\n        begin();\n      }\n  }\n\n\n  \n  function onFieldChange(value) {\n    setUserID(value);\n    window.userID=userID;\n}\n\n\n    return (\n    <div className='container'>\n\n        <div className='start-screen-background'></div>\n  \n        <div className='instructions'> \n            <div className='fixed-width'>\n          \n                <h2>Welcome to SecondBody.</h2>\n\n                <div style={{marginLeft:'180px', marginRight:'180px', padding: '20px', border: '4px solid whitesmoke'}}>\n                    <h4 id='welcome-instructions'>\n            \n                        <form id='form' onSubmit={(e)=>e.preventDefault()}>\n                            {/* <label for=\"userID\"></label><br/><br/> */}\n                            <input type=\"text\" autoComplete=\"off\" style={{backgroundColor: 'rgb(230, 240, 249)', fontSize:'15px', width: '200px', height: '30px', textAlign:'center', fontFamily:'poppins'}} ref={userIDEl} value={userID} onFocus={()=> {if (userID==='Your first name') {setUserID('')}}} onChange={e => onFieldChange(e.target.value)} /><br/><br/>\n                            <input className='new-card' style={{width:'150px', color:'#1b8bc4', fontSize: '17px'}} type=\"submit\" type=\"submit\" value='Enter session' onClick={setMyName} />\n                        </form>\n\n                        <br/>\n                    </h4>\n                </div>\n        \n  \n            </div>\n        </div>\n  \n    \n  \n        {/* <div className='actor-instructions'>\n                  \n                  <div>\n                    <h2>Welcome!</h2>\n                    <p style={{fontSize: '22px'}}>Before entering, please load the in-ear audio on your smartphone:</p>\n                </div>\n                  \n                    <div style={{position: 'relative', marginTop: '10px', marginLeft:'20%', marginRight:'20%', textAlign: 'center', border: '2px dashed #17b2ff'}}>\n                        <div style={{margin:'20px'}}>\n                            <p>\n                                <u>Use your phone's camera to scan the QR code.</u>\n                                <br/><br/>\n                                Note: <br/>If you're using an iPhone, the link must be loaded in Safari, not Chrome.\n                        \n                            </p>\n                            <img className='QR-code' src=''  />\n                        </div>\n                    </div>\n\n                    <div>\n                      <p style={{fontSize: '22px'}}><br/>Once the page has loaded on your phone, <span style={{textDecoration: 'underline', color: '#17b2ff', cursor: 'pointer'}} onclick='begin();'>click to enter.</span></p>\n                    </div>\n                    \n        </div> */}\n    </div>\n    );\n  }\n\n              \n                \n\n\n\n\n"]},"metadata":{},"sourceType":"module"}