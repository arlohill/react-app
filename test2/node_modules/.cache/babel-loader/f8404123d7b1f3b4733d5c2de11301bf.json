{"ast":null,"code":"var _jsxFileName = \"/Users/arlosb/Documents/GitHub/new react app/test2/src/components/StartScreen/StartScreen.js\";\nimport React, { useEffect, useRef, useContext, useState } from 'react';\nimport './StartScreen.css'; // import MyInfoContext from '../../MyInfoContext';\n//   if (parent.myRole=='Actor') {\n//     document.getElementById('instructions').remove();\n//     document.getElementById('actor-instructions').style.visibility='visible';\n//     let qrCode = '../images/Audio' + parent.myNumber + '.png';\n//     document.getElementById('QR-code').src=qrCode;\n//   }\n\n/**\n * Props:\n * -\n * -\n */\n\nexport default function StartScreen(props) {\n  const userIDEl = useRef(null);\n  const begin = props.onClick; // const [ myInfo, setMyInfo ] = useContext(MyInfoContext);\n\n  const [userID, setUserID] = useState('Your first name');\n  const lobbyVideo = useRef(null); //   if (parent.myRole.includes('Viewer')) {\n  //     document.getElementById('welcome-instructions').innerHTML='You are in view-only mode. <br/><br/>Click below to enter. <br/><br/>  <button class=\"new-card\" id=\"enter-button\" onclick=\"setUserID()\">Enter session</button>'\n  //   }\n  // useEffect(()=> {\n  //     if(window.myRole==='Admin') {\n  //         window.myName='Admin';\n  //         begin();\n  //     };\n  //     },[])\n\n  function setMyName() {\n    console.log('setting user ID as ' + userID); //   if (parent.myRole.includes('Viewer')) {   //enter session immediately if no need to enter name\n    //     begin();\n    //     return;\n    //   }\n\n    if (userID === '' || userID === 'Your first name' || userID.length <= 1) {\n      alert('Please enter your name to help your partner identify you.');\n    } else {\n      console.log('***GOT HERE***');\n      window.myName = userID;\n      begin();\n    }\n  }\n\n  navigator.mediaDevices.getUserMedia({\n    audio: true,\n    video: true\n  }).then(mediaStream => {\n    if (mediaStream) {\n      window.mediaStream = mediaStream;\n      let localAudio = mediaStream.getAudioTracks();\n      let localVideo = mediaStream.getVideoTracks();\n      let stream = new MediaStream([localVideo[0], localAudio[0]]);\n      lobbyVideo.current.src = stream.stream;\n    }\n  }); // if(localAudio && localAudio.length > 0)\n  //     {\n  //       newCallObject.join({ url, userName:window.myName, audioSource: localSrc[0]});\n  //     }\n  //     else {}:\n\n  function onFieldChange(value) {\n    setUserID(value);\n    window.userID = userID;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"start-screen-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fixed-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Welcome to SecondBody.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: lobbyVideo,\n    style: {\n      height: '200px',\n      width: '350px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '180px',\n      marginRight: '180px',\n      padding: '20px',\n      border: '4px solid whitesmoke'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    id: \"welcome-instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"form\",\n    onSubmit: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    autoComplete: \"off\",\n    style: {\n      backgroundColor: 'rgb(230, 240, 249)',\n      fontSize: '15px',\n      width: '200px',\n      height: '30px',\n      textAlign: 'center',\n      fontFamily: 'poppins'\n    },\n    ref: userIDEl,\n    value: userID,\n    onFocus: () => {\n      if (userID === 'Your first name') {\n        setUserID('');\n      }\n    },\n    onChange: e => onFieldChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 349\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 354\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"new-card\",\n    style: {\n      width: '150px',\n      color: '#1b8bc4',\n      fontSize: '17px'\n    },\n    type: \"submit\",\n    type: \"submit\",\n    value: \"Enter session\",\n    onClick: setMyName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test2/src/components/StartScreen/StartScreen.js"],"names":["React","useEffect","useRef","useContext","useState","StartScreen","props","userIDEl","begin","onClick","userID","setUserID","lobbyVideo","setMyName","console","log","length","alert","window","myName","navigator","mediaDevices","getUserMedia","audio","video","then","mediaStream","localAudio","getAudioTracks","localVideo","getVideoTracks","stream","MediaStream","current","src","onFieldChange","value","height","width","marginLeft","marginRight","padding","border","e","preventDefault","backgroundColor","fontSize","textAlign","fontFamily","target","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useContext, useState } from 'react';\nimport './StartScreen.css';\n// import MyInfoContext from '../../MyInfoContext';\n\n\n\n//   if (parent.myRole=='Actor') {\n//     document.getElementById('instructions').remove();\n//     document.getElementById('actor-instructions').style.visibility='visible';\n//     let qrCode = '../images/Audio' + parent.myNumber + '.png';\n//     document.getElementById('QR-code').src=qrCode;\n//   }\n\n\n/**\n * Props:\n * -\n * -\n */\n export default function StartScreen(props) {\n\n    const userIDEl = useRef(null);\n    const begin = props.onClick;\n    // const [ myInfo, setMyInfo ] = useContext(MyInfoContext);\n    const [ userID, setUserID ] = useState('Your first name');\n    const lobbyVideo = useRef(null);\n \n    \n\n    //   if (parent.myRole.includes('Viewer')) {\n//     document.getElementById('welcome-instructions').innerHTML='You are in view-only mode. <br/><br/>Click below to enter. <br/><br/>  <button class=\"new-card\" id=\"enter-button\" onclick=\"setUserID()\">Enter session</button>'\n//   }\n\n// useEffect(()=> {\n//     if(window.myRole==='Admin') {\n//         window.myName='Admin';\n//         begin();\n//     };\n//     },[])\n\n  function setMyName() {\n      console.log('setting user ID as ' + userID);\n    //   if (parent.myRole.includes('Viewer')) {   //enter session immediately if no need to enter name\n    //     begin();\n    //     return;\n    //   }\n      if (userID === '' || userID==='Your first name' || userID.length<=1) {\n        alert('Please enter your name to help your partner identify you.')\n      } else {\n          console.log('***GOT HERE***');\n        window.myName=userID;\n        begin();\n      }\n  }\n\n    navigator.mediaDevices.getUserMedia({audio:true,video:true}).then((mediaStream)=>{\n      if(mediaStream){\n        window.mediaStream = mediaStream;\n        let localAudio = mediaStream.getAudioTracks();\n        let localVideo = mediaStream.getVideoTracks();\n        let stream = new MediaStream([localVideo[0],localAudio[0]]);\n        lobbyVideo.current.src=stream.stream;\n      }\n    })\n\n        // if(localAudio && localAudio.length > 0)\n        //     {\n        //       newCallObject.join({ url, userName:window.myName, audioSource: localSrc[0]});\n        //     }\n        //     else {}:\n\n  \n  function onFieldChange(value) {\n    setUserID(value);\n    window.userID=userID;\n}\n\n\n    return (\n    <div className='container'>\n\n        <div className='start-screen-background'></div>\n  \n        <div className='instructions'> \n            <div className='fixed-width'>\n          \n                <h2>Welcome to SecondBody.</h2>\n\n                <div>\n                  <video ref={lobbyVideo} style={{height:'200px',width:'350px'}}></video>\n                </div>\n\n                <div style={{marginLeft:'180px', marginRight:'180px', padding: '20px', border: '4px solid whitesmoke'}}>\n                    <h4 id='welcome-instructions'>\n            \n                        <form id='form' onSubmit={(e)=>e.preventDefault()}>\n                            {/* <label for=\"userID\"></label><br/><br/> */}\n                            <input type=\"text\" autoComplete=\"off\" style={{backgroundColor: 'rgb(230, 240, 249)', fontSize:'15px', width: '200px', height: '30px', textAlign:'center', fontFamily:'poppins'}} ref={userIDEl} value={userID} onFocus={()=> {if (userID==='Your first name') {setUserID('')}}} onChange={e => onFieldChange(e.target.value)} /><br/><br/>\n                            <input className='new-card' style={{width:'150px', color:'#1b8bc4', fontSize: '17px'}} type=\"submit\" type=\"submit\" value='Enter session' onClick={setMyName} />\n                        </form>\n\n                        <br/>\n                    </h4>\n                </div>\n        \n  \n            </div>\n        </div>\n  \n    \n  \n       \n    </div>\n    );\n  }\n\n              \n                \n\n\n\n\n"]},"metadata":{},"sourceType":"module"}