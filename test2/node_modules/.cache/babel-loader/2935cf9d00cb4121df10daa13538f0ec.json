{"ast":null,"code":"var _jsxFileName = \"/Users/arlosb/Documents/GitHub/new react app/test2/src/components/InputSelector/InputSelector.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nimport './InputSelector.css';\nexport default React.forwardRef((props, ref) => {\n  const callObject = useContext(CallObjectContext);\n  const audioInputSelect = React.createRef();\n  const videoSelect = React.createRef();\n  const type = props.type;\n\n  const handleClick = e => {\n    let selectionID = e.target.value;\n    type == 'audio' && callObject.setInputDevicesAsync({\n      audioSource: selectionID\n    });\n    type == 'video' && callObject.setInputDevicesAsync({\n      videoSource: selectionID\n    });\n    console.log('New input: ' + e.target.text);\n  };\n\n  useEffect(() => {\n    if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n      navigator.mediaDevices.enumerateDevices().then(function (deviceInfos) {\n        if (type == 'audio' && audioInputSelect.current) {\n          let audioInputs = [];\n          let audioOutputs = [];\n\n          for (var i = 0; i !== deviceInfos.length; ++i) {\n            var deviceInfo = deviceInfos[i];\n            var option = document.createElement('option');\n            option.className = 'item';\n            option.value = deviceInfo.deviceId;\n\n            if (deviceInfo.kind === 'audioinput') {\n              option.text = deviceInfo.label || 'Microphone ' + (audioInputSelect.length + 1);\n              audioInputs.push(option);\n            } else if (deviceInfo.kind === 'audiooutput') {\n              option.text = deviceInfo.label || 'Speaker ' + (audioOutputSelect.length + 1);\n              audioOutputs.push(option);\n            }\n          }\n\n          let micHeading = document.createElement('option');\n          micHeading.label = 'Select Microphone';\n          micHeading.className = 'item-heading';\n          let camHeading = document.createElement('option');\n          camHeading.label = 'Select Speaker';\n          camHeading.className = 'item-heading';\n          audioInputSelect.current.appendChild(micHeading);\n\n          for (const audioInput in audioInputs) {\n            audioInputSelect.current.appendChild(audioInput);\n          }\n\n          audioInputSelect.current.appendChild(camHeading);\n\n          for (const audioOutput in audioOutputs) {\n            audioInputSelect.current.appendChild(audioOutput);\n          }\n        } else if (type == 'video' && videoOutputSelect.current) {\n          for (var i = 0; i !== deviceInfos.length; ++i) {\n            var deviceInfo = deviceInfos[i];\n            var option = document.createElement('option');\n            option.className = 'item';\n            option.value = deviceInfo.deviceId;\n\n            if (deviceInfo.kind === 'videoinput') {\n              option.text = deviceInfo.label || 'Camera ' + (videoSelect.length + 1);\n              videoSelect.current && videoSelect.current.appendChild(option);\n            }\n          }\n        }\n      }).catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-selector\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, type == 'audio' && /*#__PURE__*/React.createElement(\"ul\", {\n    ref: audioInputSelect,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    class: \"item-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Select Microphone\")), type == 'video' && /*#__PURE__*/React.createElement(\"ul\", {\n    ref: videoSelect,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test2/src/components/InputSelector/InputSelector.js"],"names":["React","useContext","useEffect","useState","CallObjectContext","forwardRef","props","ref","callObject","audioInputSelect","createRef","videoSelect","type","handleClick","e","selectionID","target","value","setInputDevicesAsync","audioSource","videoSource","console","log","text","navigator","mediaDevices","enumerateDevices","then","deviceInfos","current","audioInputs","audioOutputs","i","length","deviceInfo","option","document","createElement","className","deviceId","kind","label","push","audioOutputSelect","micHeading","camHeading","appendChild","audioInput","audioOutput","videoOutputSelect","catch","err","name","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,OAAO,qBAAP;AAGA,eAAeJ,KAAK,CAACK,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAe;AAC/C,QAAMC,UAAU,GAAGP,UAAU,CAACG,iBAAD,CAA7B;AACA,QAAMK,gBAAgB,GAAGT,KAAK,CAACU,SAAN,EAAzB;AACA,QAAMC,WAAW,GAAGX,KAAK,CAACU,SAAN,EAApB;AACA,QAAME,IAAI,GAAGN,KAAK,CAACM,IAAnB;;AAEA,QAAMC,WAAW,GAAEC,CAAD,IAAO;AACrB,QAAIC,WAAW,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA3B;AACAL,IAAAA,IAAI,IAAI,OAAR,IAAmBJ,UAAU,CAACU,oBAAX,CAAgC;AAACC,MAAAA,WAAW,EAAEJ;AAAd,KAAhC,CAAnB;AACAH,IAAAA,IAAI,IAAI,OAAR,IAAmBJ,UAAU,CAACU,oBAAX,CAAgC;AAACE,MAAAA,WAAW,EAAEL;AAAd,KAAhC,CAAnB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBR,CAAC,CAACE,MAAF,CAASO,IAArC;AACH,GALD;;AAOArB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGsB,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACC,YAAV,CAAuBC,gBAApD,EAAsE;AAClEF,MAAAA,SAAS,CAACC,YAAV,CAAuBC,gBAAvB,GACCC,IADD,CACM,UAASC,WAAT,EAAsB;AAExB,YAAIhB,IAAI,IAAE,OAAN,IAAiBH,gBAAgB,CAACoB,OAAtC,EAA+C;AAC3C,cAAIC,WAAW,GAAG,EAAlB;AACA,cAAIC,YAAY,GAAG,EAAnB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAKJ,WAAW,CAACK,MAAlC,EAA0C,EAAED,CAA5C,EAA+C;AAC3C,gBAAIE,UAAU,GAAGN,WAAW,CAACI,CAAD,CAA5B;AACA,gBAAIG,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,YAAAA,MAAM,CAACG,SAAP,GAAiB,MAAjB;AACAH,YAAAA,MAAM,CAAClB,KAAP,GAAeiB,UAAU,CAACK,QAA1B;;AACJ,gBAAIL,UAAU,CAACM,IAAX,KAAoB,YAAxB,EAAsC;AAClCL,cAAAA,MAAM,CAACZ,IAAP,GAAcW,UAAU,CAACO,KAAX,IAAmB,iBAAiBhC,gBAAgB,CAACwB,MAAjB,GAA0B,CAA3C,CAAjC;AACAH,cAAAA,WAAW,CAACY,IAAZ,CAAiBP,MAAjB;AACH,aAHD,MAGO,IAAID,UAAU,CAACM,IAAX,KAAoB,aAAxB,EAAuC;AAC1CL,cAAAA,MAAM,CAACZ,IAAP,GAAcW,UAAU,CAACO,KAAX,IAAoB,cAAaE,iBAAiB,CAACV,MAAlB,GAA2B,CAAxC,CAAlC;AACAF,cAAAA,YAAY,CAACW,IAAb,CAAkBP,MAAlB;AACC;AACJ;;AACD,cAAIS,UAAU,GAAGR,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAjB;AACAO,UAAAA,UAAU,CAACH,KAAX,GAAmB,mBAAnB;AACAG,UAAAA,UAAU,CAACN,SAAX,GAAqB,cAArB;AACA,cAAIO,UAAU,GAAGT,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAjB;AACAQ,UAAAA,UAAU,CAACJ,KAAX,GAAmB,gBAAnB;AACAI,UAAAA,UAAU,CAACP,SAAX,GAAqB,cAArB;AACA7B,UAAAA,gBAAgB,CAACoB,OAAjB,CAAyBiB,WAAzB,CAAqCF,UAArC;;AACA,eAAK,MAAMG,UAAX,IAAyBjB,WAAzB,EAAsC;AAClCrB,YAAAA,gBAAgB,CAACoB,OAAjB,CAAyBiB,WAAzB,CAAqCC,UAArC;AACH;;AACDtC,UAAAA,gBAAgB,CAACoB,OAAjB,CAAyBiB,WAAzB,CAAqCD,UAArC;;AACA,eAAK,MAAMG,WAAX,IAA0BjB,YAA1B,EAAwC;AACpCtB,YAAAA,gBAAgB,CAACoB,OAAjB,CAAyBiB,WAAzB,CAAqCE,WAArC;AACH;AACJ,SA9BD,MA+BK,IAAIpC,IAAI,IAAI,OAAR,IAAmBqC,iBAAiB,CAACpB,OAAzC,EAAkD;AACnD,eAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAKJ,WAAW,CAACK,MAAlC,EAA0C,EAAED,CAA5C,EAA+C;AAC3C,gBAAIE,UAAU,GAAGN,WAAW,CAACI,CAAD,CAA5B;AACA,gBAAIG,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,YAAAA,MAAM,CAACG,SAAP,GAAiB,MAAjB;AACAH,YAAAA,MAAM,CAAClB,KAAP,GAAeiB,UAAU,CAACK,QAA1B;;AACA,gBAAIL,UAAU,CAACM,IAAX,KAAoB,YAAxB,EAAsC;AAClCL,cAAAA,MAAM,CAACZ,IAAP,GAAcW,UAAU,CAACO,KAAX,IAAoB,aAAY9B,WAAW,CAACsB,MAAZ,GAAqB,CAAjC,CAAlC;AACAtB,cAAAA,WAAW,CAACkB,OAAZ,IAAuBlB,WAAW,CAACkB,OAAZ,CAAoBiB,WAApB,CAAgCX,MAAhC,CAAvB;AACH;AACJ;AACJ;AACJ,OA9CD,EA+CCe,KA/CD,CA+CO,UAASC,GAAT,EAAc;AACnB9B,QAAAA,OAAO,CAACC,GAAR,CAAY6B,GAAG,CAACC,IAAJ,GAAW,IAAX,GAAkBD,GAAG,CAACE,OAAlC;AACD,OAjDD;AAkDA;AACP,GArDQ,CAAT;AA2DI,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,GAAG,EAAE9C,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSK,IAAI,IAAE,OAAN,iBACD;AAAI,IAAA,GAAG,EAAEH,gBAAT;AAA2B,IAAA,OAAO,EAAEI,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,KAAK,EAAC,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,CAFR,EAMSD,IAAI,IAAE,OAAN,iBACD;AAAI,IAAA,GAAG,EAAED,WAAT;AAAsB,IAAA,OAAO,EAAEE,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPR,CADJ;AAeH,CAvFc,CAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nimport './InputSelector.css';\n\n\nexport default React.forwardRef((props, ref)=> {\nconst callObject = useContext(CallObjectContext);\nconst audioInputSelect = React.createRef();\nconst videoSelect = React.createRef();\nconst type = props.type;\n\nconst handleClick=(e) => {\n    let selectionID = e.target.value;\n    type == 'audio' && callObject.setInputDevicesAsync({audioSource: selectionID});\n    type == 'video' && callObject.setInputDevicesAsync({videoSource: selectionID});\n    console.log('New input: ' + e.target.text)\n}\n\nuseEffect(()=>{ \n    if(navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n        navigator.mediaDevices.enumerateDevices()\n        .then(function(deviceInfos) {\n            \n            if (type=='audio' && audioInputSelect.current) {\n                let audioInputs = [];\n                let audioOutputs = [];\n                for (var i = 0; i !== deviceInfos.length; ++i) {\n                    var deviceInfo = deviceInfos[i];\n                    var option = document.createElement('option');\n                    option.className='item';\n                    option.value = deviceInfo.deviceId;\n                if (deviceInfo.kind === 'audioinput') {\n                    option.text = deviceInfo.label ||'Microphone ' + (audioInputSelect.length + 1);\n                    audioInputs.push(option); \n                } else if (deviceInfo.kind === 'audiooutput') {\n                    option.text = deviceInfo.label || 'Speaker ' +(audioOutputSelect.length + 1);\n                    audioOutputs.push(option);\n                    }   \n                }\n                let micHeading = document.createElement('option');\n                micHeading.label = 'Select Microphone';\n                micHeading.className='item-heading';\n                let camHeading = document.createElement('option');\n                camHeading.label = 'Select Speaker';\n                camHeading.className='item-heading';\n                audioInputSelect.current.appendChild(micHeading);\n                for (const audioInput in audioInputs) {\n                    audioInputSelect.current.appendChild(audioInput);\n                }\n                audioInputSelect.current.appendChild(camHeading);\n                for (const audioOutput in audioOutputs) {\n                    audioInputSelect.current.appendChild(audioOutput);\n                }    \n            }\n            else if (type == 'video' && videoOutputSelect.current) {\n                for (var i = 0; i !== deviceInfos.length; ++i) {\n                    var deviceInfo = deviceInfos[i];\n                    var option = document.createElement('option');\n                    option.className='item';\n                    option.value = deviceInfo.deviceId;\n                    if (deviceInfo.kind === 'videoinput') {\n                        option.text = deviceInfo.label || 'Camera ' +(videoSelect.length + 1);\n                        videoSelect.current && videoSelect.current.appendChild(option);\n                    }\n                }\n            }\n        })\n        .catch(function(err) {\n          console.log(err.name + \": \" + err.message);\n        });\n       } \n})\n   \n    \n\n\n\n    return (\n        <div className=\"dropdown-selector\" ref={ref}>\n                {type=='audio' &&\n                <ul ref={audioInputSelect} onClick={handleClick}>\n                <li class='item-heading'>Select Microphone</li>\n                </ul>\n                }\n                {type=='video' &&\n                <ul ref={videoSelect} onClick={handleClick}>\n                </ul>\n                }\n                \n        </div>\n    );\n\n})\n"]},"metadata":{},"sourceType":"module"}