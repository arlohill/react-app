{"ast":null,"code":"var _jsxFileName = \"/Users/arlosb/Documents/GitHub/new react app/test2/src/components/InputSelector/InputSelector.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nimport './InputSelector.css';\nexport default React.forwardRef((props, ref) => {\n  const callObject = useContext(CallObjectContext);\n  const audioInputSelect = React.createRef();\n  const videoSelect = React.createRef();\n  const type = props.type;\n  const page = props.page;\n\n  const handleClick = e => {\n    if (!e.target.value) {\n      return;\n    }\n\n    let selectionID = e.target.value;\n    type == 'audio' && page == 'main' && callObject.setInputDevicesAsync({\n      audioSource: selectionID\n    });\n    type == 'video' && page == 'main' && callObject.setInputDevicesAsync({\n      videoSource: selectionID\n    });\n\n    if (type == 'audio' && page == 'intro') {\n      const [initialInputs, setInitialInputs] = props.inputs;\n      let constraints = {\n        deviceId: {\n          exact: selectionID\n        }\n      };\n      navigator.mediaDevices.getUserMedia({\n        audio: constraints\n      }).then(mediaStream => {\n        let newAudioSource = mediaStream.getAudioTracks()[0];\n        setInitialInputs(prev => [newAudioSource, prev[1]]);\n      });\n    }\n\n    if (type == 'video' && page == 'intro') {\n      const [initialInputs, setInitialInputs] = props.inputs;\n      let constraints = {\n        width: 1280,\n        height: 720,\n        deviceId: {\n          exact: selectionID\n        }\n      };\n      navigator.mediaDevices.getUserMedia({\n        video: constraints\n      }).then(mediaStream => {\n        let newVideoSource = mediaStream.getVideoTracks()[0];\n        setInitialInputs(prev => [prev[0], newVideoSource]);\n      });\n    }\n\n    console.log('New input: ' + e.target.text);\n  };\n\n  useEffect(() => {\n    if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n      navigator.mediaDevices.enumerateDevices().then(function (deviceInfos) {\n        if (type == 'audio' && audioInputSelect.current) {\n          if (audioInputSelect.current.hasChildNodes()) {\n            return;\n          }\n\n          let audioInputs = [];\n          let audioOutputs = [];\n\n          for (var i = 0; i !== deviceInfos.length; ++i) {\n            var deviceInfo = deviceInfos[i];\n            var option = document.createElement('option');\n            option.className = 'item';\n            option.value = deviceInfo.deviceId;\n\n            if (deviceInfo.kind === 'audioinput') {\n              option.text = deviceInfo.label || 'Microphone ' + (audioInputSelect.length + 1);\n              audioInputs.push(option);\n            } else if (deviceInfo.kind === 'audiooutput') {\n              option.text = deviceInfo.label || 'Speaker ' + (audioInputSelect.length + 1);\n              audioOutputs.push(option);\n            }\n          }\n\n          window.audioOutputs = audioOutputs;\n          let micHeading = document.createElement('option');\n          micHeading.label = '-Select Microphone-';\n          micHeading.className = 'item-heading';\n          let speakerHeading = document.createElement('option');\n          speakerHeading.label = '-Select Speaker-';\n          speakerHeading.className = 'item-heading';\n          audioInputSelect.current.appendChild(micHeading);\n\n          for (var i = 0; i !== audioInputs.length; ++i) {\n            audioInputSelect.current.appendChild(audioInputs[i]);\n          }\n\n          audioInputSelect.current.appendChild(speakerHeading);\n\n          for (var i = 0; i !== audioOutputs.length; ++i) {\n            console.log(audioOutputs[i]);\n            audioInputSelect.current.appendChild(audioOutputs[i]);\n          }\n        } else if (type == 'video' && videoSelect.current) {\n          if (videoSelect.current.hasChildNodes()) {\n            return;\n          }\n\n          let camHeading = document.createElement('option');\n          camHeading.label = '-Select Camera-';\n          camHeading.className = 'item-heading';\n          videoSelect.current.appendChild(camHeading);\n\n          for (var i = 0; i !== deviceInfos.length; ++i) {\n            var deviceInfo = deviceInfos[i];\n            var option = document.createElement('option');\n            option.className = 'item';\n            option.value = deviceInfo.deviceId;\n\n            if (deviceInfo.kind === 'videoinput') {\n              option.text = deviceInfo.label || 'Camera ' + (videoSelect.length + 1);\n              videoSelect.current && videoSelect.current.appendChild(option);\n            }\n          }\n        }\n      }).catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-selector\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, type == 'audio' && /*#__PURE__*/React.createElement(\"ul\", {\n    ref: audioInputSelect,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), type == 'video' && /*#__PURE__*/React.createElement(\"ul\", {\n    ref: videoSelect,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/arlosb/Documents/GitHub/new react app/test2/src/components/InputSelector/InputSelector.js"],"names":["React","useContext","useEffect","useState","CallObjectContext","forwardRef","props","ref","callObject","audioInputSelect","createRef","videoSelect","type","page","handleClick","e","target","value","selectionID","setInputDevicesAsync","audioSource","videoSource","initialInputs","setInitialInputs","inputs","constraints","deviceId","exact","navigator","mediaDevices","getUserMedia","audio","then","mediaStream","newAudioSource","getAudioTracks","prev","width","height","video","newVideoSource","getVideoTracks","console","log","text","enumerateDevices","deviceInfos","current","hasChildNodes","audioInputs","audioOutputs","i","length","deviceInfo","option","document","createElement","className","kind","label","push","window","micHeading","speakerHeading","appendChild","camHeading","catch","err","name","message"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nimport './InputSelector.css';\n\n\nexport default React.forwardRef((props, ref)=> {\nconst callObject = useContext(CallObjectContext);\nconst audioInputSelect = React.createRef();\nconst videoSelect = React.createRef();\nconst type = props.type;\nconst page = props.page;\n\n\nconst handleClick=(e) => {\n    if(!e.target.value) {return;}\n    let selectionID = e.target.value;\n    type == 'audio' && page=='main' && callObject.setInputDevicesAsync({audioSource: selectionID});\n    type == 'video' && page=='main' && callObject.setInputDevicesAsync({videoSource: selectionID});\n    if (type == 'audio' && page=='intro') {\n        const [initialInputs,setInitialInputs] = props.inputs;\n        let constraints = {\n            deviceId: { exact: selectionID }\n        };\n        navigator.mediaDevices.getUserMedia({audio: constraints}).then(\n            (mediaStream)=> {\n            let newAudioSource = mediaStream.getAudioTracks()[0];\n            setInitialInputs((prev)=>[newAudioSource,prev[1]]);\n            });\n    }\n    if (type == 'video' && page=='intro') {\n        const [initialInputs,setInitialInputs] = props.inputs;\n        let constraints = {\n            width: 1280,\n            height: 720,\n            deviceId: { \n                exact: selectionID ,\n            },\n        };\n        navigator.mediaDevices.getUserMedia({video: constraints}).then(\n            (mediaStream)=> {\n            let newVideoSource = mediaStream.getVideoTracks()[0];\n            setInitialInputs((prev)=>[prev[0],newVideoSource])\n            });\n    }   \n    console.log('New input: ' + e.target.text)\n}\n\nuseEffect(()=>{ \n    if(navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n        navigator.mediaDevices.enumerateDevices()\n        .then(function(deviceInfos) {\n            \n            if (type=='audio' && audioInputSelect.current) {\n                if (audioInputSelect.current.hasChildNodes()) {return}\n                let audioInputs = [];\n                let audioOutputs = [];\n\n                for (var i = 0; i !== deviceInfos.length; ++i) {\n                    var deviceInfo = deviceInfos[i];\n                    var option = document.createElement('option');\n                    option.className='item';\n                    option.value = deviceInfo.deviceId;\n                if (deviceInfo.kind === 'audioinput') {\n                    option.text = deviceInfo.label ||'Microphone ' + (audioInputSelect.length + 1);\n                    audioInputs.push(option); \n                } else if (deviceInfo.kind === 'audiooutput') {\n                    option.text = deviceInfo.label || 'Speaker ' +(audioInputSelect.length + 1);\n                    audioOutputs.push(option);\n                    }   \n                }\n                window.audioOutputs=audioOutputs;\n                let micHeading = document.createElement('option');\n                micHeading.label = '-Select Microphone-';\n                micHeading.className='item-heading';\n                let speakerHeading = document.createElement('option');\n                speakerHeading.label = '-Select Speaker-';\n                speakerHeading.className='item-heading';\n                audioInputSelect.current.appendChild(micHeading);\n                for (var i=0; i!==audioInputs.length; ++i) {\n                    audioInputSelect.current.appendChild(audioInputs[i]);\n                }\n                audioInputSelect.current.appendChild(speakerHeading);\n                for (var i=0; i!==audioOutputs.length; ++i) {\n                    console.log(audioOutputs[i]);\n                    audioInputSelect.current.appendChild(audioOutputs[i]);\n                }\n               \n                \n                   \n            }\n            else if (type == 'video' && videoSelect.current) {\n                if (videoSelect.current.hasChildNodes()) {return}\n                let camHeading = document.createElement('option');\n                camHeading.label = '-Select Camera-';\n                camHeading.className='item-heading';\n                videoSelect.current.appendChild(camHeading);\n                for (var i = 0; i !== deviceInfos.length; ++i) {\n                    var deviceInfo = deviceInfos[i];\n                    var option = document.createElement('option');\n                    option.className='item';\n                    option.value = deviceInfo.deviceId;\n                    if (deviceInfo.kind === 'videoinput') {\n                        option.text = deviceInfo.label || 'Camera ' +(videoSelect.length + 1);\n                        videoSelect.current && videoSelect.current.appendChild(option);\n                    }\n                }\n            }\n        })\n        .catch(function(err) {\n          console.log(err.name + \": \" + err.message);\n        });\n       } \n})\n   \n    \n\n\n\n    return (\n        <div className=\"dropdown-selector\" ref={ref}>\n                {type=='audio' &&\n                <ul ref={audioInputSelect} onClick={handleClick}>\n                </ul>\n                }\n                {type=='video' &&\n                <ul ref={videoSelect} onClick={handleClick}>\n                </ul>\n                }\n                \n        </div>\n    );\n\n})\n"]},"metadata":{},"sourceType":"module"}